Slot Model Logged { CallerDetails: { FilePath: "TestController.cs", Method: "Testing", LineNumber: 45 }, slot: SlotModel { Id: 4aaf9509-ec2b-4b9b-9919-05533f80890c, Title: "Title", CreatedBy: "CreatedBy", BookedBy: "BookedBy", TimeZone: "TimeZone", SlotDate: "2012-2-2", SlotDateUtc: 01/24/2021 09:22:08, SlotStartTime: 10:10:10, SlotEndTime: 11:11:11, SlotDuration: 01:01:01 }, ThreadId: 10, Version: "1.0.0", Level: Debug, UtcTimestamp: 01/24/2021 09:22:08 } 
  13:24 () [Information] () Starting web host
13:24 () [Debug] () Http Request Information:
UI Request Id:  Request Id: 64e8ff20-0a2d-4d61-887d-2a1063e4f50b Executing At: 24-01-2021 09:24:55 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Request Body:  Compressed Body:  
13:24 () [Debug] () Http Response Information:
UI Request Id:  Request Id: 64e8ff20-0a2d-4d61-887d-2a1063e4f50b Executed At: 24-01-2021 09:24:56 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Response Status Code: 200 Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>
      html
      {
        box-sizing: border-box;
        overflow: -moz-scrollbars-vertical;
        overflow-y: scroll;
      }

      *,
      *:before,
      *:after
      {
        box-sizing: inherit;
      }

      body
      {
        margin:0;
        background: #fafafa;
      }
    </style>
    
    
  </head>

  <body>
    <div id="swagger-ui"></div>

    <script src="./swagger-ui-bundle.js" charset="UTF-8"> </script>
    <script src="./swagger-ui-standalone-preset.js" charset="UTF-8"> </script>
    <script>
window.onload = function() {
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = undefined;
  }
  var urls = [{"url":"/swagger/v1/swagger.json","name":"v1"}];

  const disableTryItOutPlugin = function() {
    return {
      statePlugins: {
      spec: {
        wrapSelectors: {
          allowTryItOutFor: function() {
            return function() {
                return true;
              }
            }
          }
        }
      }
    }
  }

  // Build a system
  var ui = SwaggerUIBundle({
    url: url,
    urls: urls,  
    validatorUrl: null,
    oauth2RedirectUrl: window.location.origin + "/swagger/oauth2-redirect.html",

    docExpansion: "none", 
    operationsSorter: "none", 
    defaultModelsExpandDepth: 1, 
    defaultModelExpandDepth: 1, 
    tagsSorter: "none", 
    
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
        SwaggerUIBundle.plugins.DownloadUrl,
        disableTryItOutPlugin
    ],
    layout: "StandaloneLayout"
  });

  if ("client_id") {
    ui.initOAuth({
      clientId: "client_id",
      clientSecret: "client_secret",
      realm: "realm",
      appName: "app_name",
      scopeSeparator: " ",
      additionalQueryStringParams: {},
      usePkceWithAuthorizationCodeGrant: false
    });
  }

  window.ui = ui;
}
    </script>
    
  </body>
</html>
 Compressed Body: KQoAAB+LCAAAAAAAAAqlVoFu2zYQ/RVWBdKkjaQ5BYpBcwKsSbsFSBe3jjEMUVbQ0lniQpECSdlxivz7jhQlK4mKYpgNWMe7x0fq+O7oYPoiDMnvV58uyEoqog01LCM500axZWOYFGTZiJwDPhjPSRiepGL64uzy9Oqv2QdSmopbh30STkVxnAYg0gB9hExLoLmz0K7AUJKVVGkwCFpcfQx/9jiMGmY4nMw3tChAkcX5NG49PsyZuCUKOE7UZstBlwAmDYjZ1oA+A3cmzrRGT6lghZ4o1i1X2LCojYxwsUyKHQuraAFxLYohzYquLSp8e3T39ihqg5rdg8ao8+E4/n/Uk3d3k3dPqJ1vSO1e2w+IS3tnf+sMQpbyLkQGJooEbZXj66Prlx1ArkGtuNwkJKzkfagzJTlf4pmEGMCDp3wEHG4T0iL74EMqOvP1YW8lS0ANwcBBVwbUDzbKRAmKmTHupcy3I7Mrqgomkp8Ge13S7LZQEpWakJcrar9DQpfCeJjD3e809jJ1A7tkl/OcrQnLreZ6LaFipzH6PdweTKZYbYhW2RPZhW3dRP9Y8T0Xvt2Pm3ryQyIsSpFTLgWEtQKk+Y+cONowkctNJAWXNCfHZNWIzBb3/kGb2DVVpFEcIx7JZYadQIpIA1VZGVXUZOV+jJjj/eu/927eHMQHLsNsRfbtzL09SxBxEIUpyQmZeGbieXPIZA6LL+ensqrxVYSx064nNy3NAwGu4fEUzB+smIC8RQz2qTF6/S0N0EyDJA26bMXrSWdijmwFHqaBoBU41HqSBg83SGaZsPK0sY2OLjlcqe25uWzMjDeorJH8ECxr0yixk6HtlNDidTJw15ANhoRsFK3nwCEzUg2B9kM5lle39kepkpF1u49f//uAAcioBgbF8agMRoeDQW96wz18TcYxee9uAUr0Vhuo+iNhmDPfvRfn753w93dnmdgf3xbs6bmxPuyqcE05yynmZ2GhouEdVtLGlEdfIGcK8+eiT+UpFbMn9oYMRNBOC5WfF7luiUrwJZvL7MNdTYXG+QnOE6hGDPvNyBqUo9ZzqbB7PUegKGnDzSeUM9eOKT+D2pQJmYxBxhGGFt9doNtm9ZVhO3v1ctcKXvnE5AD1BV42roHa0/b+tj1gfq+7U3xyKJFHRLRm+vAZaN53mpnDtYCbjr1Te88+wt9iojO5cb0GD61fhoyX2+NFON3Kxtik7DZz4Xxp4KRo+0XXeNIg4wxbCSYqDXYNh0VMMHP5K8qgUyEWvEOeY0Yfzep31/rmkGERDTDaOdIdTgHllQU4YxCgdf0HthobQvNr23b6qM5QWXOoKarLVjo28OHcPGdWdJR/bkBt5/jvSxQzxFa2Zzz0uEbD7DaDP5kp7duh+u+dWE9Rab8pKnDnK4qN1Neu761twnzpuFptGEZ2F+Pw0mjvRH8P4uXY/sML/gWWz4gVKQoAAA== 
13:24 () [Debug] () Http Request Information:
UI Request Id:  Request Id: 77b17256-75dd-4a16-adc0-554b7d850100 Executing At: 24-01-2021 09:24:56 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Request Body:  Compressed Body:  
13:24 () [Debug] () Http Response Information:
UI Request Id:  Request Id: 77b17256-75dd-4a16-adc0-554b7d850100 Executed At: 24-01-2021 09:24:57 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Response Status Code: 200 Response Body: {
  "x-generator": "NSwag v13.9.4.0 (NJsonSchema v10.3.1.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Bookmyslot Customer API",
    "description": "Bookmyslot Customer API to manage customer data",
    "termsOfService": "None",
    "contact": {
      "name": "TA",
      "email": ""
    },
    "license": {
      "name": ""
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://localhost:44382"
    }
  ],
  "paths": {
    "/api/v1/CustomerBookedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer booked slots",
        "operationId": "CustomerBookedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer booked slots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer completed slots",
        "operationId": "CustomerBookedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer completed slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer cancelled slots",
        "operationId": "CustomerBookedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer cancelled slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer/{email}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customer by email",
        "operationId": "Customer_Get",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "description": "customer email id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer details"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create new customer",
        "operationId": "Customer_Post",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns email id of created customer"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update existing customer",
        "operationId": "Customer_Put",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerYetToBeBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer YetToBeBookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerYetToBeBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer  YetToBeBookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer BookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer BookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CompletedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CompletedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CancelledSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CancelledSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetDistinctCustomersNearestSlotFromToday",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetCustomerAvailableSlots": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetCustomerAvailableSlots",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          },
          {
            "name": "customerInfo",
            "in": "query",
            "description": "customer info",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/email/ResendSlotMeetingInformation": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Resend slot information email to the customers",
        "operationId": "Email_ResendSlotMeetingInformation",
        "requestBody": {
          "x-name": "resendSlotInformation",
          "description": "slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendSlotInformation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot": {
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Create new slot for the user",
        "operationId": "Slot_Post",
        "requestBody": {
          "x-name": "slotModel",
          "description": "slot model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns slot id of created slot"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot/CancelSlot": {
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Cancel User slot",
        "operationId": "Slot_CancelSlot",
        "requestBody": {
          "x-name": "cancelSlot",
          "description": "user slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelSlot"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/SlotScheduler": {
      "post": {
        "tags": [
          "SlotScheduler"
        ],
        "operationId": "SlotScheduler_Post",
        "requestBody": {
          "x-name": "slotSchedulerModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotSchedulerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/test/Testing": {
      "get": {
        "tags": [
          "Test"
        ],
        "operationId": "Test_Testing",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {}
          }
        }
      },
      "CustomerModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "firstName",
          "lastName",
          "gender"
        ],
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "minLength": 1
          },
          "lastName": {
            "type": "string",
            "minLength": 1
          },
          "gender": {
            "type": "string",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ResendSlotInformation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "resendSlotModel": {
            "type": "string",
            "nullable": true
          },
          "resendTo": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "title",
          "timeZone",
          "slotDate",
          "slotStartTime",
          "slotEndTime"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "default": "00000000-0000-0000-0000-000000000000"
          },
          "title": {
            "type": "string",
            "minLength": 1
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "default": "India Standard Time",
            "minLength": 1
          },
          "slotDate": {
            "type": "string",
            "default": "13-3-2021",
            "minLength": 1
          },
          "slotStartTime": {
            "type": "string",
            "format": "time-span",
            "default": "10:00:00",
            "minLength": 1
          },
          "slotEndTime": {
            "type": "string",
            "format": "time-span",
            "default": "11:00:00",
            "minLength": 1
          },
          "slotDuration": {
            "type": "string",
            "format": "time-span"
          }
        }
      },
      "CancelSlot": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotKey": {
            "type": "string",
            "nullable": true
          },
          "cancelledBy": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotSchedulerModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotModelKey": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          }
        }
      }
    }
  }
} Compressed Body: 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 
13:25 () [Information] () Starting web host
13:25 () [Debug] () Http Request Information:
UI Request Id:  Request Id: cd97b170-a5f1-4841-9e16-d2534a2d2f67 Executing At: 24-01-2021 09:25:28 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Request Body:  Compressed Body:  
13:25 () [Debug] () Http Response Information:
UI Request Id:  Request Id: cd97b170-a5f1-4841-9e16-d2534a2d2f67 Executed At: 24-01-2021 09:25:28 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Response Status Code: 200 Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>
      html
      {
        box-sizing: border-box;
        overflow: -moz-scrollbars-vertical;
        overflow-y: scroll;
      }

      *,
      *:before,
      *:after
      {
        box-sizing: inherit;
      }

      body
      {
        margin:0;
        background: #fafafa;
      }
    </style>
    
    
  </head>

  <body>
    <div id="swagger-ui"></div>

    <script src="./swagger-ui-bundle.js" charset="UTF-8"> </script>
    <script src="./swagger-ui-standalone-preset.js" charset="UTF-8"> </script>
    <script>
window.onload = function() {
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = undefined;
  }
  var urls = [{"url":"/swagger/v1/swagger.json","name":"v1"}];

  const disableTryItOutPlugin = function() {
    return {
      statePlugins: {
      spec: {
        wrapSelectors: {
          allowTryItOutFor: function() {
            return function() {
                return true;
              }
            }
          }
        }
      }
    }
  }

  // Build a system
  var ui = SwaggerUIBundle({
    url: url,
    urls: urls,  
    validatorUrl: null,
    oauth2RedirectUrl: window.location.origin + "/swagger/oauth2-redirect.html",

    docExpansion: "none", 
    operationsSorter: "none", 
    defaultModelsExpandDepth: 1, 
    defaultModelExpandDepth: 1, 
    tagsSorter: "none", 
    
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
        SwaggerUIBundle.plugins.DownloadUrl,
        disableTryItOutPlugin
    ],
    layout: "StandaloneLayout"
  });

  if ("client_id") {
    ui.initOAuth({
      clientId: "client_id",
      clientSecret: "client_secret",
      realm: "realm",
      appName: "app_name",
      scopeSeparator: " ",
      additionalQueryStringParams: {},
      usePkceWithAuthorizationCodeGrant: false
    });
  }

  window.ui = ui;
}
    </script>
    
  </body>
</html>
 Compressed Body: KQoAAB+LCAAAAAAAAAqlVoFu2zYQ/RVWBdKkjaQ5BYpBcwKsSbsFSBe3jjEMUVbQ0lniQpECSdlxivz7jhQlK4mKYpgNWMe7x0fq+O7oYPoiDMnvV58uyEoqog01LCM500axZWOYFGTZiJwDPhjPSRiepGL64uzy9Oqv2QdSmopbh30STkVxnAYg0gB9hExLoLmz0K7AUJKVVGkwCFpcfQx/9jiMGmY4nMw3tChAkcX5NG49PsyZuCUKOE7UZstBlwAmDYjZ1oA+A3cmzrRGT6lghZ4o1i1X2LCojYxwsUyKHQuraAFxLYohzYquLSp8e3T39ihqg5rdg8ao8+E4/n/Uk3d3k3dPqJ1vSO1e2w+IS3tnf+sMQpbyLkQGJooEbZXj66Prlx1ArkGtuNwkJKzkfagzJTlf4pmEGMCDp3wEHG4T0iL74EMqOvP1YW8lS0ANwcBBVwbUDzbKRAmKmTHupcy3I7Mrqgomkp8Ge13S7LZQEpWakJcrar9DQpfCeJjD3e809jJ1A7tkl/OcrQnLreZ6LaFipzH6PdweTKZYbYhW2RPZhW3dRP9Y8T0Xvt2Pm3ryQyIsSpFTLgWEtQKk+Y+cONowkctNJAWXNCfHZNWIzBb3/kGb2DVVpFEcIx7JZYadQIpIA1VZGVXUZOV+jJjj/eu/927eHMQHLsNsRfbtzL09SxBxEIUpyQmZeGbieXPIZA6LL+ensqrxVYSx064nNy3NAwGu4fEUzB+smIC8RQz2qTF6/S0N0EyDJA26bMXrSWdijmwFHqaBoBU41HqSBg83SGaZsPK0sY2OLjlcqe25uWzMjDeorJH8ECxr0yixk6HtlNDidTJw15ANhoRsFK3nwCEzUg2B9kM5lle39kepkpF1u49f//uAAcioBgbF8agMRoeDQW96wz18TcYxee9uAUr0Vhuo+iNhmDPfvRfn753w93dnmdgf3xbs6bmxPuyqcE05yynmZ2GhouEdVtLGlEdfIGcK8+eiT+UpFbMn9oYMRNBOC5WfF7luiUrwJZvL7MNdTYXG+QnOE6hGDPvNyBqUo9ZzqbB7PUegKGnDzSeUM9eOKT+D2pQJmYxBxhGGFt9doNtm9ZVhO3v1ctcKXvnE5AD1BV42roHa0/b+tj1gfq+7U3xyKJFHRLRm+vAZaN53mpnDtYCbjr1Te88+wt9iojO5cb0GD61fhoyX2+NFON3Kxtik7DZz4Xxp4KRo+0XXeNIg4wxbCSYqDXYNh0VMMHP5K8qgUyEWvEOeY0Yfzep31/rmkGERDTDaOdIdTgHllQU4YxCgdf0HthobQvNr23b6qM5QWXOoKarLVjo28OHcPGdWdJR/bkBt5/jvSxQzxFa2Zzz0uEbD7DaDP5kp7duh+u+dWE9Rab8pKnDnK4qN1Neu761twnzpuFptGEZ2F+Pw0mjvRH8P4uXY/sML/gWWz4gVKQoAAA== 
13:25 () [Debug] () Http Request Information:
UI Request Id:  Request Id: a1a18ec2-48db-454d-bede-ce6022e8eed0 Executing At: 24-01-2021 09:25:28 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Request Body:  Compressed Body:  
13:25 () [Debug] () Http Response Information:
UI Request Id:  Request Id: a1a18ec2-48db-454d-bede-ce6022e8eed0 Executed At: 24-01-2021 09:25:30 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Response Status Code: 200 Response Body: {
  "x-generator": "NSwag v13.9.4.0 (NJsonSchema v10.3.1.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Bookmyslot Customer API",
    "description": "Bookmyslot Customer API to manage customer data",
    "termsOfService": "None",
    "contact": {
      "name": "TA",
      "email": ""
    },
    "license": {
      "name": ""
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://localhost:44382"
    }
  ],
  "paths": {
    "/api/v1/CustomerBookedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer booked slots",
        "operationId": "CustomerBookedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer booked slots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer completed slots",
        "operationId": "CustomerBookedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer completed slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer cancelled slots",
        "operationId": "CustomerBookedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer cancelled slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer/{email}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customer by email",
        "operationId": "Customer_Get",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "description": "customer email id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer details"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create new customer",
        "operationId": "Customer_Post",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns email id of created customer"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update existing customer",
        "operationId": "Customer_Put",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerYetToBeBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer YetToBeBookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerYetToBeBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer  YetToBeBookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer BookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer BookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CompletedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CompletedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CancelledSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CancelledSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetDistinctCustomersNearestSlotFromToday",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetCustomerAvailableSlots": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetCustomerAvailableSlots",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          },
          {
            "name": "customerInfo",
            "in": "query",
            "description": "customer info",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/email/ResendSlotMeetingInformation": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Resend slot information email to the customers",
        "operationId": "Email_ResendSlotMeetingInformation",
        "requestBody": {
          "x-name": "resendSlotInformation",
          "description": "slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendSlotInformation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot": {
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Create new slot for the user",
        "operationId": "Slot_Post",
        "requestBody": {
          "x-name": "slotModel",
          "description": "slot model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns slot id of created slot"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot/CancelSlot": {
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Cancel User slot",
        "operationId": "Slot_CancelSlot",
        "requestBody": {
          "x-name": "cancelSlot",
          "description": "user slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelSlot"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/SlotScheduler": {
      "post": {
        "tags": [
          "SlotScheduler"
        ],
        "operationId": "SlotScheduler_Post",
        "requestBody": {
          "x-name": "slotSchedulerModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotSchedulerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/test/Testing": {
      "get": {
        "tags": [
          "Test"
        ],
        "operationId": "Test_Testing",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {}
          }
        }
      },
      "CustomerModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "firstName",
          "lastName",
          "gender"
        ],
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "minLength": 1
          },
          "lastName": {
            "type": "string",
            "minLength": 1
          },
          "gender": {
            "type": "string",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ResendSlotInformation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "resendSlotModel": {
            "type": "string",
            "nullable": true
          },
          "resendTo": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "title",
          "timeZone",
          "slotDate",
          "slotStartTime",
          "slotEndTime"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "default": "00000000-0000-0000-0000-000000000000"
          },
          "title": {
            "type": "string",
            "minLength": 1
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "default": "India Standard Time",
            "minLength": 1
          },
          "slotDate": {
            "type": "string",
            "default": "13-3-2021",
            "minLength": 1
          },
          "slotStartTime": {
            "type": "string",
            "format": "time-span",
            "default": "10:00:00",
            "minLength": 1
          },
          "slotEndTime": {
            "type": "string",
            "format": "time-span",
            "default": "11:00:00",
            "minLength": 1
          },
          "slotDuration": {
            "type": "string",
            "format": "time-span"
          }
        }
      },
      "CancelSlot": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotKey": {
            "type": "string",
            "nullable": true
          },
          "cancelledBy": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotSchedulerModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotModelKey": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          }
        }
      }
    }
  }
} Compressed Body: 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 
