00:20 (1.0.0) [Information] (1) Starting web host
00:20 (1.0.0) [Information] (4) Http Request Information:
Request Id: d0152613-4ba4-4ac1-afd2-50e8e585a335 Executing At: 16-01-2021 18:50:50 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Request Body:  Compressed Body:  
00:20 (1.0.0) [Information] (4) Http Response Information:
Request Id: d0152613-4ba4-4ac1-afd2-50e8e585a335 Executed At: 16-01-2021 18:50:51 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Response Status Code: 200 Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>
      html
      {
        box-sizing: border-box;
        overflow: -moz-scrollbars-vertical;
        overflow-y: scroll;
      }

      *,
      *:before,
      *:after
      {
        box-sizing: inherit;
      }

      body
      {
        margin:0;
        background: #fafafa;
      }
    </style>
    
    
  </head>

  <body>
    <div id="swagger-ui"></div>

    <script src="./swagger-ui-bundle.js" charset="UTF-8"> </script>
    <script src="./swagger-ui-standalone-preset.js" charset="UTF-8"> </script>
    <script>
window.onload = function() {
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = undefined;
  }
  var urls = [{"url":"/swagger/v1/swagger.json","name":"v1"}];

  const disableTryItOutPlugin = function() {
    return {
      statePlugins: {
      spec: {
        wrapSelectors: {
          allowTryItOutFor: function() {
            return function() {
                return true;
              }
            }
          }
        }
      }
    }
  }

  // Build a system
  var ui = SwaggerUIBundle({
    url: url,
    urls: urls,  
    validatorUrl: null,
    oauth2RedirectUrl: window.location.origin + "/swagger/oauth2-redirect.html",

    docExpansion: "none", 
    operationsSorter: "none", 
    defaultModelsExpandDepth: 1, 
    defaultModelExpandDepth: 1, 
    tagsSorter: "none", 
    
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
        SwaggerUIBundle.plugins.DownloadUrl,
        disableTryItOutPlugin
    ],
    layout: "StandaloneLayout"
  });

  if ("client_id") {
    ui.initOAuth({
      clientId: "client_id",
      clientSecret: "client_secret",
      realm: "realm",
      appName: "app_name",
      scopeSeparator: " ",
      additionalQueryStringParams: {},
      usePkceWithAuthorizationCodeGrant: false
    });
  }

  window.ui = ui;
}
    </script>
    
  </body>
</html>
 Compressed Body: KQoAAB+LCAAAAAAAAAqlVoFu2zYQ/RVWBdKkjaQ5BYpBcwKsSbsFSBe3jjEMUVbQ0lniQpECSdlxivz7jhQlK4mKYpgNWMe7x0fq+O7oYPoiDMnvV58uyEoqog01LCM500axZWOYFGTZiJwDPhjPSRiepGL64uzy9Oqv2QdSmopbh30STkVxnAYg0gB9hExLoLmz0K7AUJKVVGkwCFpcfQx/9jiMGmY4nMw3tChAkcX5NG49PsyZuCUKOE7UZstBlwAmDYjZ1oA+A3cmzrRGT6lghZ4o1i1X2LCojYxwsUyKHQuraAFxLYohzYquLSp8e3T39ihqg5rdg8ao8+E4/n/Uk3d3k3dPqJ1vSO1e2w+IS3tnf+sMQpbyLkQGJooEbZXj66Prlx1ArkGtuNwkJKzkfagzJTlf4pmEGMCDp3wEHG4T0iL74EMqOvP1YW8lS0ANwcBBVwbUDzbKRAmKmTHupcy3I7Mrqgomkp8Ge13S7LZQEpWakJcrar9DQpfCeJjD3e809jJ1A7tkl/OcrQnLreZ6LaFipzH6PdweTKZYbYhW2RPZhW3dRP9Y8T0Xvt2Pm3ryQyIsSpFTLgWEtQKk+Y+cONowkctNJAWXNCfHZNWIzBb3/kGb2DVVpFEcIx7JZYadQIpIA1VZGVXUZOV+jJjj/eu/927eHMQHLsNsRfbtzL09SxBxEIUpyQmZeGbieXPIZA6LL+ensqrxVYSx064nNy3NAwGu4fEUzB+smIC8RQz2qTF6/S0N0EyDJA26bMXrSWdijmwFHqaBoBU41HqSBg83SGaZsPK0sY2OLjlcqe25uWzMjDeorJH8ECxr0yixk6HtlNDidTJw15ANhoRsFK3nwCEzUg2B9kM5lle39kepkpF1u49f//uAAcioBgbF8agMRoeDQW96wz18TcYxee9uAUr0Vhuo+iNhmDPfvRfn753w93dnmdgf3xbs6bmxPuyqcE05yynmZ2GhouEdVtLGlEdfIGcK8+eiT+UpFbMn9oYMRNBOC5WfF7luiUrwJZvL7MNdTYXG+QnOE6hGDPvNyBqUo9ZzqbB7PUegKGnDzSeUM9eOKT+D2pQJmYxBxhGGFt9doNtm9ZVhO3v1ctcKXvnE5AD1BV42roHa0/b+tj1gfq+7U3xyKJFHRLRm+vAZaN53mpnDtYCbjr1Te88+wt9iojO5cb0GD61fhoyX2+NFON3Kxtik7DZz4Xxp4KRo+0XXeNIg4wxbCSYqDXYNh0VMMHP5K8qgUyEWvEOeY0Yfzep31/rmkGERDTDaOdIdTgHllQU4YxCgdf0HthobQvNr23b6qM5QWXOoKarLVjo28OHcPGdWdJR/bkBt5/jvSxQzxFa2Zzz0uEbD7DaDP5kp7duh+u+dWE9Rab8pKnDnK4qN1Neu761twnzpuFptGEZ2F+Pw0mjvRH8P4uXY/sML/gWWz4gVKQoAAA== 
00:20 (1.0.0) [Information] (5) Http Request Information:
Request Id: 387e8123-c2c7-4b6d-ac2f-12ef17af45dc Executing At: 16-01-2021 18:50:51 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Request Body:  Compressed Body:  
00:20 (1.0.0) [Information] (5) Http Response Information:
Request Id: 387e8123-c2c7-4b6d-ac2f-12ef17af45dc Executed At: 16-01-2021 18:50:52 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Response Status Code: 200 Response Body: {
  "x-generator": "NSwag v13.9.4.0 (NJsonSchema v10.3.1.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Bookmyslot Customer API",
    "description": "Bookmyslot Customer API to manage customer data",
    "termsOfService": "None",
    "contact": {
      "name": "TA",
      "email": ""
    },
    "license": {
      "name": ""
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://localhost:44382"
    }
  ],
  "paths": {
    "/api/v1/CustomerBookedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer booked slots",
        "operationId": "CustomerBookedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer booked slots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer completed slots",
        "operationId": "CustomerBookedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer completed slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer cancelled slots",
        "operationId": "CustomerBookedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer cancelled slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customers",
        "operationId": "Customer_Get",
        "responses": {
          "200": {
            "description": "Returns all customers"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create new customer",
        "operationId": "Customer_Post",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns email id of created customer"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update existing customer",
        "operationId": "Customer_Put",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer/{email}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customer by email",
        "operationId": "Customer_Get2",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "description": "customer email id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer details"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerYetToBeBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer YetToBeBookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerYetToBeBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer  YetToBeBookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer BookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer BookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CompletedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CompletedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CancelledSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CancelledSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetDistinctCustomersNearestSlotFromToday",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetCustomerAvailableSlots": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetCustomerAvailableSlots",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          },
          {
            "name": "customerInfo",
            "in": "query",
            "description": "customer info",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/email/ResendSlotMeetingInformation": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Resend slot information email to the customers",
        "operationId": "Email_ResendSlotMeetingInformation",
        "requestBody": {
          "x-name": "resendSlotInformation",
          "description": "slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendSlotInformation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot": {
      "get": {
        "tags": [
          "Slot"
        ],
        "summary": "Gets slot",
        "operationId": "Slot_Get",
        "parameters": [
          {
            "name": "slotId",
            "in": "query",
            "description": "slot id",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot"
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "slot id inappropriate",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Create new slot for the user",
        "operationId": "Slot_Post",
        "requestBody": {
          "x-name": "slotModel",
          "description": "slot model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns slot id of created slot"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot/CancelSlot": {
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Cancel User slot",
        "operationId": "Slot_CancelSlot",
        "requestBody": {
          "x-name": "cancelSlot",
          "description": "user slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelSlot"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/SlotScheduler": {
      "post": {
        "tags": [
          "SlotScheduler"
        ],
        "operationId": "SlotScheduler_Post",
        "requestBody": {
          "x-name": "slotSchedulerModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotSchedulerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {}
          }
        }
      },
      "CustomerModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "firstName",
          "lastName",
          "gender"
        ],
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "minLength": 1
          },
          "lastName": {
            "type": "string",
            "minLength": 1
          },
          "gender": {
            "type": "string",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ResendSlotInformation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "resendSlotModel": {
            "type": "string",
            "nullable": true
          },
          "resendTo": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "title",
          "timeZone",
          "slotDate",
          "slotStartTime",
          "slotEndTime"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "default": "00000000-0000-0000-0000-000000000000"
          },
          "title": {
            "type": "string",
            "minLength": 1
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "default": "India Standard Time",
            "minLength": 1
          },
          "slotDate": {
            "type": "string",
            "format": "date-time",
            "minLength": 1
          },
          "slotStartTime": {
            "type": "string",
            "format": "time-span",
            "default": "10:00:00",
            "minLength": 1
          },
          "slotEndTime": {
            "type": "string",
            "format": "time-span",
            "default": "11:00:00",
            "minLength": 1
          },
          "slotDuration": {
            "type": "string",
            "format": "time-span"
          }
        }
      },
      "CancelSlot": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotKey": {
            "type": "string",
            "nullable": true
          },
          "cancelledBy": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotSchedulerModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotModelKey": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          }
        }
      }
    }
  }
} Compressed Body: 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 
00:21 (1.0.0) [Information] (4) Http Request Information:
Request Id: f49969ac-f750-479b-9f92-fadcad977705 Executing At: 16-01-2021 18:51:06 Schema:https Host: localhost:44382 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?PageNumber=0&PageSize=10 Request Body:  Compressed Body:  
00:21 (1.0.0) [Information] (4) Get all distinct customers nearest single slot
00:21 (1.0.0) [Information] (4) Http Response Information:
Request Id: f49969ac-f750-479b-9f92-fadcad977705 Executed At: 16-01-2021 18:51:07 Schema:https Host: localhost:44382 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?PageNumber=0&PageSize=10 Response Status Code: 200 Response Body: [{"slotModels":[],"customerModel":{"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"","email":""}},{"slotModels":[],"customerModel":{"id":"1a2d9ae0f60a466a92a9f18b52a2549c","firstName":"FE","lastName":"LE","gender":"","email":""}},{"slotModels":[],"customerModel":{"id":"763c9c80f5ae4e21a44723e082cdfbc4","firstName":"FJ","lastName":"LJ","gender":"","email":""}},{"slotModels":[],"customerModel":{"id":"97477a7207884e4cabc1349d83d0ca8f","firstName":"FI","lastName":"LI","gender":"","email":""}},{"slotModels":[],"customerModel":{"id":"a2904aacc0ed41f48629ba66b75350ff","firstName":"FH","lastName":"LH","gender":"","email":""}},{"slotModels":[],"customerModel":{"id":"b66217ed3c0f49fdafb9c9d20dad12f4","firstName":"FF","lastName":"LF","gender":"","email":""}},{"slotModels":[],"customerModel":{"id":"d4572c45fc894833a7969af389f94669","firstName":"FC","lastName":"LC","gender":"","email":""}},{"slotModels":[],"customerModel":{"id":"d6a5ceed74f3435cabf27757d9179b56","firstName":"FK","lastName":"LK","gender":"","email":""}},{"slotModels":[],"customerModel":{"id":"ea3fd505edc04fca8ece1347a889055f","firstName":"FD","lastName":"LD","gender":"","email":""}},{"slotModels":[],"customerModel":{"id":"ec50e126e8c842bea85b86b954b71626","firstName":"FB","lastName":"LB","gender":"","email":""}}] Compressed Body: GwYAAB+LCAAAAAAAAAq11MtqXDEMBuB3OessfJEtq7s2yZBb+wI5WciyFAZmMjAzWYW8e8yZLrowhULPyvjHgg9b8vT8MU+n3eH889B0d5qnb88vV/Mk76fzYa/HJe1hP7RtfZ0nD6EWNp+zRSBBspI9o0MXfAWf5qmX2/Z4Ov/ivS4lm+9LuOM/sqdL9qpvTY9Lsux1z9vd7+3n59W/2jg0YnWWHUPOTIHJfKkpcEgdO7LdDmy3K9gwRyEpzhIraPAMgCGqK0GaVYGR7WFge1jBRgiIjMFhKaAgXMX3x20lNidcbGS7H9juV7BxIAfMIk4beIOSA1XOuWKKydnQdjew3a1gqzkHj9qiOAOyxlZJqAXXuPlgwzfdDGybFWwNEgaBZFIISoyMlIktFjLqs0Ej2/XAdr2GLXMS1YbQ/5CYer9ZQEzYyCPVlEe2x4HtcQWbcrSWXNImDqx3v4r2YUAuhVxKw367Gdgu2X+2SXLqQ9YipX/DyiXVkislqOhzGN7bj4Htkv3d9jJ9AYO3vywbBgAA 
00:22 (1.0.0) [Information] (15) Http Request Information:
Request Id: 7bb194b8-5a03-43b6-b602-b2cd80e25be3 Executing At: 16-01-2021 18:52:04 Schema:https Host: localhost:44382 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?PageNumber=0&PageSize=10 Request Body:  Compressed Body:  
00:22 (1.0.0) [Information] (15) Get all distinct customers nearest single slot
00:22 (1.0.0) [Information] (16) Http Response Information:
Request Id: 7bb194b8-5a03-43b6-b602-b2cd80e25be3 Executed At: 16-01-2021 18:52:10 Schema:https Host: localhost:44382 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?PageNumber=0&PageSize=10 Response Status Code: 200 Response Body: [{"slotModels":[],"customerModel":{"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"","email":""}},{"slotModels":[],"customerModel":{"id":"1a2d9ae0f60a466a92a9f18b52a2549c","firstName":"FE","lastName":"LE","gender":"","email":""}},{"slotModels":[],"customerModel":{"id":"763c9c80f5ae4e21a44723e082cdfbc4","firstName":"FJ","lastName":"LJ","gender":"","email":""}},{"slotModels":[],"customerModel":{"id":"97477a7207884e4cabc1349d83d0ca8f","firstName":"FI","lastName":"LI","gender":"","email":""}},{"slotModels":[],"customerModel":{"id":"a2904aacc0ed41f48629ba66b75350ff","firstName":"FH","lastName":"LH","gender":"","email":""}},{"slotModels":[],"customerModel":{"id":"b66217ed3c0f49fdafb9c9d20dad12f4","firstName":"FF","lastName":"LF","gender":"","email":""}},{"slotModels":[],"customerModel":{"id":"d4572c45fc894833a7969af389f94669","firstName":"FC","lastName":"LC","gender":"","email":""}},{"slotModels":[],"customerModel":{"id":"d6a5ceed74f3435cabf27757d9179b56","firstName":"FK","lastName":"LK","gender":"","email":""}},{"slotModels":[],"customerModel":{"id":"ea3fd505edc04fca8ece1347a889055f","firstName":"FD","lastName":"LD","gender":"","email":""}},{"slotModels":[],"customerModel":{"id":"ec50e126e8c842bea85b86b954b71626","firstName":"FB","lastName":"LB","gender":"","email":""}}] Compressed Body: GwYAAB+LCAAAAAAAAAq11MtqXDEMBuB3OessfJEtq7s2yZBb+wI5WciyFAZmMjAzWYW8e8yZLrowhULPyvjHgg9b8vT8MU+n3eH889B0d5qnb88vV/Mk76fzYa/HJe1hP7RtfZ0nD6EWNp+zRSBBspI9o0MXfAWf5qmX2/Z4Ov/ivS4lm+9LuOM/sqdL9qpvTY9Lsux1z9vd7+3n59W/2jg0YnWWHUPOTIHJfKkpcEgdO7LdDmy3K9gwRyEpzhIraPAMgCGqK0GaVYGR7WFge1jBRgiIjMFhKaAgXMX3x20lNidcbGS7H9juV7BxIAfMIk4beIOSA1XOuWKKydnQdjew3a1gqzkHj9qiOAOyxlZJqAXXuPlgwzfdDGybFWwNEgaBZFIISoyMlIktFjLqs0Ej2/XAdr2GLXMS1YbQ/5CYer9ZQEzYyCPVlEe2x4HtcQWbcrSWXNImDqx3v4r2YUAuhVxKw367Gdgu2X+2SXLqQ9YipX/DyiXVkislqOhzGN7bj4Htkv3d9jJ9AYO3vywbBgAA 
00:29 (1.0.0) [Information] (1) Starting web host
00:30 (1.0.0) [Information] (4) Http Request Information:
Request Id: 6f7904d7-7ae1-4c6d-b4d8-063063955201 Executing At: 16-01-2021 19:00:03 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Request Body:  Compressed Body:  
00:30 (1.0.0) [Information] (4) Http Response Information:
Request Id: 6f7904d7-7ae1-4c6d-b4d8-063063955201 Executed At: 16-01-2021 19:00:03 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Response Status Code: 200 Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>
      html
      {
        box-sizing: border-box;
        overflow: -moz-scrollbars-vertical;
        overflow-y: scroll;
      }

      *,
      *:before,
      *:after
      {
        box-sizing: inherit;
      }

      body
      {
        margin:0;
        background: #fafafa;
      }
    </style>
    
    
  </head>

  <body>
    <div id="swagger-ui"></div>

    <script src="./swagger-ui-bundle.js" charset="UTF-8"> </script>
    <script src="./swagger-ui-standalone-preset.js" charset="UTF-8"> </script>
    <script>
window.onload = function() {
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = undefined;
  }
  var urls = [{"url":"/swagger/v1/swagger.json","name":"v1"}];

  const disableTryItOutPlugin = function() {
    return {
      statePlugins: {
      spec: {
        wrapSelectors: {
          allowTryItOutFor: function() {
            return function() {
                return true;
              }
            }
          }
        }
      }
    }
  }

  // Build a system
  var ui = SwaggerUIBundle({
    url: url,
    urls: urls,  
    validatorUrl: null,
    oauth2RedirectUrl: window.location.origin + "/swagger/oauth2-redirect.html",

    docExpansion: "none", 
    operationsSorter: "none", 
    defaultModelsExpandDepth: 1, 
    defaultModelExpandDepth: 1, 
    tagsSorter: "none", 
    
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
        SwaggerUIBundle.plugins.DownloadUrl,
        disableTryItOutPlugin
    ],
    layout: "StandaloneLayout"
  });

  if ("client_id") {
    ui.initOAuth({
      clientId: "client_id",
      clientSecret: "client_secret",
      realm: "realm",
      appName: "app_name",
      scopeSeparator: " ",
      additionalQueryStringParams: {},
      usePkceWithAuthorizationCodeGrant: false
    });
  }

  window.ui = ui;
}
    </script>
    
  </body>
</html>
 Compressed Body: KQoAAB+LCAAAAAAAAAqlVoFu2zYQ/RVWBdKkjaQ5BYpBcwKsSbsFSBe3jjEMUVbQ0lniQpECSdlxivz7jhQlK4mKYpgNWMe7x0fq+O7oYPoiDMnvV58uyEoqog01LCM500axZWOYFGTZiJwDPhjPSRiepGL64uzy9Oqv2QdSmopbh30STkVxnAYg0gB9hExLoLmz0K7AUJKVVGkwCFpcfQx/9jiMGmY4nMw3tChAkcX5NG49PsyZuCUKOE7UZstBlwAmDYjZ1oA+A3cmzrRGT6lghZ4o1i1X2LCojYxwsUyKHQuraAFxLYohzYquLSp8e3T39ihqg5rdg8ao8+E4/n/Uk3d3k3dPqJ1vSO1e2w+IS3tnf+sMQpbyLkQGJooEbZXj66Prlx1ArkGtuNwkJKzkfagzJTlf4pmEGMCDp3wEHG4T0iL74EMqOvP1YW8lS0ANwcBBVwbUDzbKRAmKmTHupcy3I7Mrqgomkp8Ge13S7LZQEpWakJcrar9DQpfCeJjD3e809jJ1A7tkl/OcrQnLreZ6LaFipzH6PdweTKZYbYhW2RPZhW3dRP9Y8T0Xvt2Pm3ryQyIsSpFTLgWEtQKk+Y+cONowkctNJAWXNCfHZNWIzBb3/kGb2DVVpFEcIx7JZYadQIpIA1VZGVXUZOV+jJjj/eu/927eHMQHLsNsRfbtzL09SxBxEIUpyQmZeGbieXPIZA6LL+ensqrxVYSx064nNy3NAwGu4fEUzB+smIC8RQz2qTF6/S0N0EyDJA26bMXrSWdijmwFHqaBoBU41HqSBg83SGaZsPK0sY2OLjlcqe25uWzMjDeorJH8ECxr0yixk6HtlNDidTJw15ANhoRsFK3nwCEzUg2B9kM5lle39kepkpF1u49f//uAAcioBgbF8agMRoeDQW96wz18TcYxee9uAUr0Vhuo+iNhmDPfvRfn753w93dnmdgf3xbs6bmxPuyqcE05yynmZ2GhouEdVtLGlEdfIGcK8+eiT+UpFbMn9oYMRNBOC5WfF7luiUrwJZvL7MNdTYXG+QnOE6hGDPvNyBqUo9ZzqbB7PUegKGnDzSeUM9eOKT+D2pQJmYxBxhGGFt9doNtm9ZVhO3v1ctcKXvnE5AD1BV42roHa0/b+tj1gfq+7U3xyKJFHRLRm+vAZaN53mpnDtYCbjr1Te88+wt9iojO5cb0GD61fhoyX2+NFON3Kxtik7DZz4Xxp4KRo+0XXeNIg4wxbCSYqDXYNh0VMMHP5K8qgUyEWvEOeY0Yfzep31/rmkGERDTDaOdIdTgHllQU4YxCgdf0HthobQvNr23b6qM5QWXOoKarLVjo28OHcPGdWdJR/bkBt5/jvSxQzxFa2Zzz0uEbD7DaDP5kp7duh+u+dWE9Rab8pKnDnK4qN1Neu761twnzpuFptGEZ2F+Pw0mjvRH8P4uXY/sML/gWWz4gVKQoAAA== 
00:30 (1.0.0) [Information] (5) Http Request Information:
Request Id: 8bdbdb96-1034-438c-93ae-daac51494f88 Executing At: 16-01-2021 19:00:03 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Request Body:  Compressed Body:  
00:30 (1.0.0) [Information] (5) Http Response Information:
Request Id: 8bdbdb96-1034-438c-93ae-daac51494f88 Executed At: 16-01-2021 19:00:05 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Response Status Code: 200 Response Body: {
  "x-generator": "NSwag v13.9.4.0 (NJsonSchema v10.3.1.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Bookmyslot Customer API",
    "description": "Bookmyslot Customer API to manage customer data",
    "termsOfService": "None",
    "contact": {
      "name": "TA",
      "email": ""
    },
    "license": {
      "name": ""
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://localhost:44382"
    }
  ],
  "paths": {
    "/api/v1/CustomerBookedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer booked slots",
        "operationId": "CustomerBookedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer booked slots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer completed slots",
        "operationId": "CustomerBookedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer completed slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer cancelled slots",
        "operationId": "CustomerBookedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer cancelled slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customers",
        "operationId": "Customer_Get",
        "responses": {
          "200": {
            "description": "Returns all customers"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create new customer",
        "operationId": "Customer_Post",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns email id of created customer"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update existing customer",
        "operationId": "Customer_Put",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer/{email}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customer by email",
        "operationId": "Customer_Get2",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "description": "customer email id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer details"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerYetToBeBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer YetToBeBookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerYetToBeBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer  YetToBeBookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer BookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer BookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CompletedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CompletedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CancelledSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CancelledSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetDistinctCustomersNearestSlotFromToday",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetCustomerAvailableSlots": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetCustomerAvailableSlots",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          },
          {
            "name": "customerInfo",
            "in": "query",
            "description": "customer info",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/email/ResendSlotMeetingInformation": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Resend slot information email to the customers",
        "operationId": "Email_ResendSlotMeetingInformation",
        "requestBody": {
          "x-name": "resendSlotInformation",
          "description": "slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendSlotInformation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot": {
      "get": {
        "tags": [
          "Slot"
        ],
        "summary": "Gets slot",
        "operationId": "Slot_Get",
        "parameters": [
          {
            "name": "slotId",
            "in": "query",
            "description": "slot id",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot"
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "slot id inappropriate",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Create new slot for the user",
        "operationId": "Slot_Post",
        "requestBody": {
          "x-name": "slotModel",
          "description": "slot model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns slot id of created slot"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot/CancelSlot": {
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Cancel User slot",
        "operationId": "Slot_CancelSlot",
        "requestBody": {
          "x-name": "cancelSlot",
          "description": "user slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelSlot"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/SlotScheduler": {
      "post": {
        "tags": [
          "SlotScheduler"
        ],
        "operationId": "SlotScheduler_Post",
        "requestBody": {
          "x-name": "slotSchedulerModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotSchedulerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {}
          }
        }
      },
      "CustomerModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "firstName",
          "lastName",
          "gender"
        ],
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "minLength": 1
          },
          "lastName": {
            "type": "string",
            "minLength": 1
          },
          "gender": {
            "type": "string",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ResendSlotInformation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "resendSlotModel": {
            "type": "string",
            "nullable": true
          },
          "resendTo": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "title",
          "timeZone",
          "slotDate",
          "slotStartTime",
          "slotEndTime"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "default": "00000000-0000-0000-0000-000000000000"
          },
          "title": {
            "type": "string",
            "minLength": 1
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "default": "India Standard Time",
            "minLength": 1
          },
          "slotDate": {
            "type": "string",
            "format": "date-time",
            "minLength": 1
          },
          "slotStartTime": {
            "type": "string",
            "format": "time-span",
            "default": "10:00:00",
            "minLength": 1
          },
          "slotEndTime": {
            "type": "string",
            "format": "time-span",
            "default": "11:00:00",
            "minLength": 1
          },
          "slotDuration": {
            "type": "string",
            "format": "time-span"
          }
        }
      },
      "CancelSlot": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotKey": {
            "type": "string",
            "nullable": true
          },
          "cancelledBy": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotSchedulerModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotModelKey": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          }
        }
      }
    }
  }
} Compressed Body: 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 
00:43 (1.0.0) [Information] (1) Starting web host
00:43 (1.0.0) [Information] (5) Http Request Information:
Request Id: b071bfb0-6f76-43d1-800a-40d9930c51f0 Executing At: 16-01-2021 19:13:41 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Request Body:  Compressed Body:  
00:43 (1.0.0) [Information] (5) Http Response Information:
Request Id: b071bfb0-6f76-43d1-800a-40d9930c51f0 Executed At: 16-01-2021 19:13:41 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Response Status Code: 200 Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>
      html
      {
        box-sizing: border-box;
        overflow: -moz-scrollbars-vertical;
        overflow-y: scroll;
      }

      *,
      *:before,
      *:after
      {
        box-sizing: inherit;
      }

      body
      {
        margin:0;
        background: #fafafa;
      }
    </style>
    
    
  </head>

  <body>
    <div id="swagger-ui"></div>

    <script src="./swagger-ui-bundle.js" charset="UTF-8"> </script>
    <script src="./swagger-ui-standalone-preset.js" charset="UTF-8"> </script>
    <script>
window.onload = function() {
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = undefined;
  }
  var urls = [{"url":"/swagger/v1/swagger.json","name":"v1"}];

  const disableTryItOutPlugin = function() {
    return {
      statePlugins: {
      spec: {
        wrapSelectors: {
          allowTryItOutFor: function() {
            return function() {
                return true;
              }
            }
          }
        }
      }
    }
  }

  // Build a system
  var ui = SwaggerUIBundle({
    url: url,
    urls: urls,  
    validatorUrl: null,
    oauth2RedirectUrl: window.location.origin + "/swagger/oauth2-redirect.html",

    docExpansion: "none", 
    operationsSorter: "none", 
    defaultModelsExpandDepth: 1, 
    defaultModelExpandDepth: 1, 
    tagsSorter: "none", 
    
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
        SwaggerUIBundle.plugins.DownloadUrl,
        disableTryItOutPlugin
    ],
    layout: "StandaloneLayout"
  });

  if ("client_id") {
    ui.initOAuth({
      clientId: "client_id",
      clientSecret: "client_secret",
      realm: "realm",
      appName: "app_name",
      scopeSeparator: " ",
      additionalQueryStringParams: {},
      usePkceWithAuthorizationCodeGrant: false
    });
  }

  window.ui = ui;
}
    </script>
    
  </body>
</html>
 Compressed Body: KQoAAB+LCAAAAAAAAAqlVoFu2zYQ/RVWBdKkjaQ5BYpBcwKsSbsFSBe3jjEMUVbQ0lniQpECSdlxivz7jhQlK4mKYpgNWMe7x0fq+O7oYPoiDMnvV58uyEoqog01LCM500axZWOYFGTZiJwDPhjPSRiepGL64uzy9Oqv2QdSmopbh30STkVxnAYg0gB9hExLoLmz0K7AUJKVVGkwCFpcfQx/9jiMGmY4nMw3tChAkcX5NG49PsyZuCUKOE7UZstBlwAmDYjZ1oA+A3cmzrRGT6lghZ4o1i1X2LCojYxwsUyKHQuraAFxLYohzYquLSp8e3T39ihqg5rdg8ao8+E4/n/Uk3d3k3dPqJ1vSO1e2w+IS3tnf+sMQpbyLkQGJooEbZXj66Prlx1ArkGtuNwkJKzkfagzJTlf4pmEGMCDp3wEHG4T0iL74EMqOvP1YW8lS0ANwcBBVwbUDzbKRAmKmTHupcy3I7Mrqgomkp8Ge13S7LZQEpWakJcrar9DQpfCeJjD3e809jJ1A7tkl/OcrQnLreZ6LaFipzH6PdweTKZYbYhW2RPZhW3dRP9Y8T0Xvt2Pm3ryQyIsSpFTLgWEtQKk+Y+cONowkctNJAWXNCfHZNWIzBb3/kGb2DVVpFEcIx7JZYadQIpIA1VZGVXUZOV+jJjj/eu/927eHMQHLsNsRfbtzL09SxBxEIUpyQmZeGbieXPIZA6LL+ensqrxVYSx064nNy3NAwGu4fEUzB+smIC8RQz2qTF6/S0N0EyDJA26bMXrSWdijmwFHqaBoBU41HqSBg83SGaZsPK0sY2OLjlcqe25uWzMjDeorJH8ECxr0yixk6HtlNDidTJw15ANhoRsFK3nwCEzUg2B9kM5lle39kepkpF1u49f//uAAcioBgbF8agMRoeDQW96wz18TcYxee9uAUr0Vhuo+iNhmDPfvRfn753w93dnmdgf3xbs6bmxPuyqcE05yynmZ2GhouEdVtLGlEdfIGcK8+eiT+UpFbMn9oYMRNBOC5WfF7luiUrwJZvL7MNdTYXG+QnOE6hGDPvNyBqUo9ZzqbB7PUegKGnDzSeUM9eOKT+D2pQJmYxBxhGGFt9doNtm9ZVhO3v1ctcKXvnE5AD1BV42roHa0/b+tj1gfq+7U3xyKJFHRLRm+vAZaN53mpnDtYCbjr1Te88+wt9iojO5cb0GD61fhoyX2+NFON3Kxtik7DZz4Xxp4KRo+0XXeNIg4wxbCSYqDXYNh0VMMHP5K8qgUyEWvEOeY0Yfzep31/rmkGERDTDaOdIdTgHllQU4YxCgdf0HthobQvNr23b6qM5QWXOoKarLVjo28OHcPGdWdJR/bkBt5/jvSxQzxFa2Zzz0uEbD7DaDP5kp7duh+u+dWE9Rab8pKnDnK4qN1Neu761twnzpuFptGEZ2F+Pw0mjvRH8P4uXY/sML/gWWz4gVKQoAAA== 
00:43 (1.0.0) [Information] (4) Http Request Information:
Request Id: c7d5cda3-2bd5-4d48-b6b3-a88bb2d00e9e Executing At: 16-01-2021 19:13:42 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Request Body:  Compressed Body:  
00:43 (1.0.0) [Information] (4) Http Response Information:
Request Id: c7d5cda3-2bd5-4d48-b6b3-a88bb2d00e9e Executed At: 16-01-2021 19:13:43 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Response Status Code: 200 Response Body: {
  "x-generator": "NSwag v13.9.4.0 (NJsonSchema v10.3.1.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Bookmyslot Customer API",
    "description": "Bookmyslot Customer API to manage customer data",
    "termsOfService": "None",
    "contact": {
      "name": "TA",
      "email": ""
    },
    "license": {
      "name": ""
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://localhost:44382"
    }
  ],
  "paths": {
    "/api/v1/CustomerBookedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer booked slots",
        "operationId": "CustomerBookedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer booked slots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer completed slots",
        "operationId": "CustomerBookedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer completed slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer cancelled slots",
        "operationId": "CustomerBookedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer cancelled slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customers",
        "operationId": "Customer_Get",
        "responses": {
          "200": {
            "description": "Returns all customers"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create new customer",
        "operationId": "Customer_Post",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns email id of created customer"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update existing customer",
        "operationId": "Customer_Put",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer/{email}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customer by email",
        "operationId": "Customer_Get2",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "description": "customer email id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer details"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerYetToBeBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer YetToBeBookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerYetToBeBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer  YetToBeBookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer BookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer BookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CompletedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CompletedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CancelledSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CancelledSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetDistinctCustomersNearestSlotFromToday",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetCustomerAvailableSlots": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetCustomerAvailableSlots",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          },
          {
            "name": "customerInfo",
            "in": "query",
            "description": "customer info",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/email/ResendSlotMeetingInformation": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Resend slot information email to the customers",
        "operationId": "Email_ResendSlotMeetingInformation",
        "requestBody": {
          "x-name": "resendSlotInformation",
          "description": "slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendSlotInformation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot": {
      "get": {
        "tags": [
          "Slot"
        ],
        "summary": "Gets slot",
        "operationId": "Slot_Get",
        "parameters": [
          {
            "name": "slotId",
            "in": "query",
            "description": "slot id",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot"
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "slot id inappropriate",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Create new slot for the user",
        "operationId": "Slot_Post",
        "requestBody": {
          "x-name": "slotModel",
          "description": "slot model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns slot id of created slot"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot/CancelSlot": {
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Cancel User slot",
        "operationId": "Slot_CancelSlot",
        "requestBody": {
          "x-name": "cancelSlot",
          "description": "user slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelSlot"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/SlotScheduler": {
      "post": {
        "tags": [
          "SlotScheduler"
        ],
        "operationId": "SlotScheduler_Post",
        "requestBody": {
          "x-name": "slotSchedulerModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotSchedulerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {}
          }
        }
      },
      "CustomerModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "firstName",
          "lastName",
          "gender"
        ],
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "minLength": 1
          },
          "lastName": {
            "type": "string",
            "minLength": 1
          },
          "gender": {
            "type": "string",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ResendSlotInformation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "resendSlotModel": {
            "type": "string",
            "nullable": true
          },
          "resendTo": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "title",
          "timeZone",
          "slotDate",
          "slotStartTime",
          "slotEndTime"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "default": "00000000-0000-0000-0000-000000000000"
          },
          "title": {
            "type": "string",
            "minLength": 1
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "default": "India Standard Time",
            "minLength": 1
          },
          "slotDate": {
            "type": "string",
            "format": "date-time",
            "minLength": 1
          },
          "slotStartTime": {
            "type": "string",
            "format": "time-span",
            "default": "10:00:00",
            "minLength": 1
          },
          "slotEndTime": {
            "type": "string",
            "format": "time-span",
            "default": "11:00:00",
            "minLength": 1
          },
          "slotDuration": {
            "type": "string",
            "format": "time-span"
          }
        }
      },
      "CancelSlot": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotKey": {
            "type": "string",
            "nullable": true
          },
          "cancelledBy": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotSchedulerModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotModelKey": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          }
        }
      }
    }
  }
} Compressed Body: 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 
00:45 (1.0.0) [Information] (13) Http Request Information:
Request Id: 95865abb-0e27-45f7-9571-647527860f38 Executing At: 16-01-2021 19:15:38 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
00:45 (1.0.0) [Information] (14) Http Request Information:
Request Id: bbab9197-179f-4bb0-bb0b-a75134643d12 Executing At: 16-01-2021 19:15:38 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
00:45 (1.0.0) [Information] (13) Get Customer Email a@gmail.com
00:45 (1.0.0) [Information] (14) Get all distinct customers nearest single slot
00:45 (1.0.0) [Information] (13) Http Response Information:
Request Id: bbab9197-179f-4bb0-bb0b-a75134643d12 Executed At: 16-01-2021 19:15:39 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 404 Response Body: ["no records found"] Compressed Body: GAAAAB+LCAAAAAAAAApTio5RystXKEpNzi9KKVZIyy/NS4lRilUCACgTBEUYAAAA 
00:45 (1.0.0) [Information] (16) Http Response Information:
Request Id: 95865abb-0e27-45f7-9571-647527860f38 Executed At: 16-01-2021 19:15:39 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
00:45 (1.0.0) [Information] (13) Http Request Information:
Request Id: 29cbb689-1bab-4311-bc19-a014efa0a383 Executing At: 16-01-2021 19:15:45 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
00:45 (1.0.0) [Information] (13) Get Customer Email a@gmail.com
00:45 (1.0.0) [Information] (16) Http Response Information:
Request Id: 29cbb689-1bab-4311-bc19-a014efa0a383 Executed At: 16-01-2021 19:15:45 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
00:46 (1.0.0) [Information] (20) Http Request Information:
Request Id: 9dd7d0e8-b941-4ad4-83ba-9e24a0ab822f Executing At: 16-01-2021 19:16:08 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Request Body: {"title":"Title 1","slotDate":"2021-01-25T18:30:00.000Z","timeZone":"India Standard Time","slotStartTime":"5:0:0","slotEndTime":"5:20:0"} Compressed Body: nwAAAB+LCAAAAAAAAApNjLEKgCAURX9F3lzxNIRwrqE5p3iLoINQBvW26N+zhGi7nHO4cBJw5CUQGAL7LCEJKoJj2bh3XIRCJWuUtdJWdqZFg9gg4vyWHNcwb6mUY/LRiYld8m73wmb33WW6cyG51CbffG5I/mfUqy64AazbED+fAAAA 
00:46 (1.0.0) [Information] (22) Http Response Information:
Request Id: 9dd7d0e8-b941-4ad4-83ba-9e24a0ab822f Executed At: 16-01-2021 19:16:09 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "0a7a02b8-958d-4c0a-a2b9-82378da1a957" Compressed Body: KgAAAB+LCAAAAAAAAApTilEySDRPNDBKstC1NLVI0TVJNkjUTTRKstS1MDI2t0hJNEy0NDWPUVICAIEu2koqAAAA 
00:49 (1.0.0) [Information] (26) Http Request Information:
Request Id: f10787a1-b26b-43df-a571-47a427cc72eb Executing At: 16-01-2021 19:19:46 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Request Body: {"title":"Title 1","slotDate":"2021-01-20T18:30:00.000Z","timeZone":"India Standard Time","slotStartTime":"5:0:0","slotEndTime":"5:20:0"} Compressed Body: nwAAAB+LCAAAAAAAAApNjLEKhDAQBX8lbK3yEhEk9VlYm0q2CcQioBG87eT+/aIBsXvMDI9OJomyLkyWyV1LaaaK6bvu8vFShIHRNXRt4HRvW1igATDfpcRtmfdUyjGF6NUkPgV/BOWye+4yPaSQXHY23zxuSOFlzK1+9Ad5Q8aenwAAAA== 
00:49 (1.0.0) [Information] (26) Http Response Information:
Request Id: f10787a1-b26b-43df-a571-47a427cc72eb Executed At: 16-01-2021 19:19:46 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "7d3bc99d-6177-4f4e-89d3-bb40bc4ff998" Compressed Body: KgAAAB+LCAAAAAAAAApTilEyTzFOSra0TNE1MzQ31zVJM0nVtbBMMdZNSjIxSEo2SUuztLSIUVICAGDGE8AqAAAA 
00:50 (1.0.0) [Information] (29) Http Request Information:
Request Id: 948d9a67-6977-4fb6-8408-f0aee0309d77 Executing At: 16-01-2021 19:20:09 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Request Body: {"title":"Title 1","slotDate":"2021-01-20T18:30:00.000Z","timeZone":"India Standard Time","slotStartTime":"5:0:0","slotEndTime":"5:20:0"} Compressed Body: nwAAAB+LCAAAAAAAAApNjLEKhDAQBX8lbK3yEhEk9VlYm0q2CcQioBG87eT+/aIBsXvMDI9OJomyLkyWyV1LaaaK6bvu8vFShIHRNXRt4HRvW1igATDfpcRtmfdUyjGF6NUkPgV/BOWye+4yPaSQXHY23zxuSOFlzK1+9Ad5Q8aenwAAAA== 
00:51 (1.0.0) [Information] (33) Http Response Information:
Request Id: 948d9a67-6977-4fb6-8408-f0aee0309d77 Executed At: 16-01-2021 19:21:10 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "94d1f520-ee78-4f8f-b753-723976358e29" Compressed Body: KgAAAB+LCAAAAAAAAApTilGyNEkxTDM1MtBNTTW30DVJs0jTTTI3NdY1NzK2NDczNrVINbKMUVICAPv15YcqAAAA 
00:51 (1.0.0) [Information] (29) Http Request Information:
Request Id: 71f1e412-ffac-4ea6-8a4a-661056fce169 Executing At: 16-01-2021 19:21:24 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Request Body: {"title":"Title 1","slotDate":"2021-01-20T18:30:00.000Z","timeZone":"India Standard Time","slotStartTime":"5:0:0","slotEndTime":"5:20:0"} Compressed Body: nwAAAB+LCAAAAAAAAApNjLEKhDAQBX8lbK3yEhEk9VlYm0q2CcQioBG87eT+/aIBsXvMDI9OJomyLkyWyV1LaaaK6bvu8vFShIHRNXRt4HRvW1igATDfpcRtmfdUyjGF6NUkPgV/BOWye+4yPaSQXHY23zxuSOFlzK1+9Ad5Q8aenwAAAA== 
00:52 (1.0.0) [Information] (31) Http Response Information:
Request Id: 71f1e412-ffac-4ea6-8a4a-661056fce169 Executed At: 16-01-2021 19:22:06 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "bfbfa976-04d7-4683-b4f8-71800d6c4f78" Compressed Body: KgAAAB+LCAAAAAAAAApTilFKSktKS7Q0N9M1MEkx1zUxszDWTTJJs9A1N7QwMEgxSzZJM7eIUVICAFimRL8qAAAA 
00:54 (1.0.0) [Information] (35) Http Request Information:
Request Id: 47f08455-999b-49f5-a359-216ee43f6223 Executing At: 16-01-2021 19:24:27 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Request Body: {"title":"Title 1","slotDate":"2021-01-20T18:30:00.000Z","timeZone":"India Standard Time","slotStartTime":"5:0:0","slotEndTime":"5:20:0"} Compressed Body: nwAAAB+LCAAAAAAAAApNjLEKhDAQBX8lbK3yEhEk9VlYm0q2CcQioBG87eT+/aIBsXvMDI9OJomyLkyWyV1LaaaK6bvu8vFShIHRNXRt4HRvW1igATDfpcRtmfdUyjGF6NUkPgV/BOWye+4yPaSQXHY23zxuSOFlzK1+9Ad5Q8aenwAAAA== 
00:55 (1.0.0) [Information] (35) Http Response Information:
Request Id: 47f08455-999b-49f5-a359-216ee43f6223 Executed At: 16-01-2021 19:25:05 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "924b9662-9c97-41f6-98fc-5aea442dfd96" Compressed Body: KgAAAB+LCAAAAAAAAApTilGyNDJJsjQzM9K1TLY01zUxTDPTtbRIS9Y1TUxNNDExSklLsTSLUVICAMZJdckqAAAA 
00:56 (1.0.0) [Information] (39) Http Request Information:
Request Id: 1f30f28e-6405-4e8d-9843-ec46edcc2621 Executing At: 16-01-2021 19:26:04 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Request Body: {"title":"Title 1","slotDate":"2021-01-20T18:30:00.000Z","timeZone":"India Standard Time","slotStartTime":"5:0:0","slotEndTime":"5:20:0"} Compressed Body: nwAAAB+LCAAAAAAAAApNjLEKhDAQBX8lbK3yEhEk9VlYm0q2CcQioBG87eT+/aIBsXvMDI9OJomyLkyWyV1LaaaK6bvu8vFShIHRNXRt4HRvW1igATDfpcRtmfdUyjGF6NUkPgV/BOWye+4yPaSQXHY23zxuSOFlzK1+9Ad5Q8aenwAAAA== 
00:57 (1.0.0) [Information] (43) Http Response Information:
Request Id: 1f30f28e-6405-4e8d-9843-ec46edcc2621 Executed At: 16-01-2021 19:27:08 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "da40cde1-f0c5-41ca-a469-c3c2fd7a28c3" Compressed Body: KgAAAB+LCAAAAAAAAApTilFKSTQxSE5JNdRNM0g21TUxTE7UTTQxs9RNNk42SksxTzSySDaOUVICAPDGuZgqAAAA 
00:59 (1.0.0) [Information] (44) Http Request Information:
Request Id: 59e3dfb8-f04b-4b5d-9c0e-c486f41ada8d Executing At: 16-01-2021 19:29:26 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
00:59 (1.0.0) [Information] (44) Get Customer Email a@gmail.com
00:59 (1.0.0) [Information] (45) Http Response Information:
Request Id: 59e3dfb8-f04b-4b5d-9c0e-c486f41ada8d Executed At: 16-01-2021 19:29:26 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
12:36 (1.0.0) [Information] (1) Starting web host
12:36 (1.0.0) [Information] (9) Http Request Information:
Request Id: 975c3808-753b-48d0-9445-4b38b555098b Executing At: 17-01-2021 07:06:45 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Request Body:  Compressed Body:  
12:36 (1.0.0) [Information] (9) Http Response Information:
Request Id: 975c3808-753b-48d0-9445-4b38b555098b Executed At: 17-01-2021 07:06:45 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Response Status Code: 200 Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>
      html
      {
        box-sizing: border-box;
        overflow: -moz-scrollbars-vertical;
        overflow-y: scroll;
      }

      *,
      *:before,
      *:after
      {
        box-sizing: inherit;
      }

      body
      {
        margin:0;
        background: #fafafa;
      }
    </style>
    
    
  </head>

  <body>
    <div id="swagger-ui"></div>

    <script src="./swagger-ui-bundle.js" charset="UTF-8"> </script>
    <script src="./swagger-ui-standalone-preset.js" charset="UTF-8"> </script>
    <script>
window.onload = function() {
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = undefined;
  }
  var urls = [{"url":"/swagger/v1/swagger.json","name":"v1"}];

  const disableTryItOutPlugin = function() {
    return {
      statePlugins: {
      spec: {
        wrapSelectors: {
          allowTryItOutFor: function() {
            return function() {
                return true;
              }
            }
          }
        }
      }
    }
  }

  // Build a system
  var ui = SwaggerUIBundle({
    url: url,
    urls: urls,  
    validatorUrl: null,
    oauth2RedirectUrl: window.location.origin + "/swagger/oauth2-redirect.html",

    docExpansion: "none", 
    operationsSorter: "none", 
    defaultModelsExpandDepth: 1, 
    defaultModelExpandDepth: 1, 
    tagsSorter: "none", 
    
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
        SwaggerUIBundle.plugins.DownloadUrl,
        disableTryItOutPlugin
    ],
    layout: "StandaloneLayout"
  });

  if ("client_id") {
    ui.initOAuth({
      clientId: "client_id",
      clientSecret: "client_secret",
      realm: "realm",
      appName: "app_name",
      scopeSeparator: " ",
      additionalQueryStringParams: {},
      usePkceWithAuthorizationCodeGrant: false
    });
  }

  window.ui = ui;
}
    </script>
    
  </body>
</html>
 Compressed Body: KQoAAB+LCAAAAAAAAAqlVoFu2zYQ/RVWBdKkjaQ5BYpBcwKsSbsFSBe3jjEMUVbQ0lniQpECSdlxivz7jhQlK4mKYpgNWMe7x0fq+O7oYPoiDMnvV58uyEoqog01LCM500axZWOYFGTZiJwDPhjPSRiepGL64uzy9Oqv2QdSmopbh30STkVxnAYg0gB9hExLoLmz0K7AUJKVVGkwCFpcfQx/9jiMGmY4nMw3tChAkcX5NG49PsyZuCUKOE7UZstBlwAmDYjZ1oA+A3cmzrRGT6lghZ4o1i1X2LCojYxwsUyKHQuraAFxLYohzYquLSp8e3T39ihqg5rdg8ao8+E4/n/Uk3d3k3dPqJ1vSO1e2w+IS3tnf+sMQpbyLkQGJooEbZXj66Prlx1ArkGtuNwkJKzkfagzJTlf4pmEGMCDp3wEHG4T0iL74EMqOvP1YW8lS0ANwcBBVwbUDzbKRAmKmTHupcy3I7Mrqgomkp8Ge13S7LZQEpWakJcrar9DQpfCeJjD3e809jJ1A7tkl/OcrQnLreZ6LaFipzH6PdweTKZYbYhW2RPZhW3dRP9Y8T0Xvt2Pm3ryQyIsSpFTLgWEtQKk+Y+cONowkctNJAWXNCfHZNWIzBb3/kGb2DVVpFEcIx7JZYadQIpIA1VZGVXUZOV+jJjj/eu/927eHMQHLsNsRfbtzL09SxBxEIUpyQmZeGbieXPIZA6LL+ensqrxVYSx064nNy3NAwGu4fEUzB+smIC8RQz2qTF6/S0N0EyDJA26bMXrSWdijmwFHqaBoBU41HqSBg83SGaZsPK0sY2OLjlcqe25uWzMjDeorJH8ECxr0yixk6HtlNDidTJw15ANhoRsFK3nwCEzUg2B9kM5lle39kepkpF1u49f//uAAcioBgbF8agMRoeDQW96wz18TcYxee9uAUr0Vhuo+iNhmDPfvRfn753w93dnmdgf3xbs6bmxPuyqcE05yynmZ2GhouEdVtLGlEdfIGcK8+eiT+UpFbMn9oYMRNBOC5WfF7luiUrwJZvL7MNdTYXG+QnOE6hGDPvNyBqUo9ZzqbB7PUegKGnDzSeUM9eOKT+D2pQJmYxBxhGGFt9doNtm9ZVhO3v1ctcKXvnE5AD1BV42roHa0/b+tj1gfq+7U3xyKJFHRLRm+vAZaN53mpnDtYCbjr1Te88+wt9iojO5cb0GD61fhoyX2+NFON3Kxtik7DZz4Xxp4KRo+0XXeNIg4wxbCSYqDXYNh0VMMHP5K8qgUyEWvEOeY0Yfzep31/rmkGERDTDaOdIdTgHllQU4YxCgdf0HthobQvNr23b6qM5QWXOoKarLVjo28OHcPGdWdJR/bkBt5/jvSxQzxFa2Zzz0uEbD7DaDP5kp7duh+u+dWE9Rab8pKnDnK4qN1Neu761twnzpuFptGEZ2F+Pw0mjvRH8P4uXY/sML/gWWz4gVKQoAAA== 
12:36 (1.0.0) [Information] (4) Http Request Information:
Request Id: d0e7313c-a211-403d-9ba0-9f12de4e429c Executing At: 17-01-2021 07:06:46 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Request Body:  Compressed Body:  
12:36 (1.0.0) [Information] (4) Http Response Information:
Request Id: d0e7313c-a211-403d-9ba0-9f12de4e429c Executed At: 17-01-2021 07:06:47 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Response Status Code: 200 Response Body: {
  "x-generator": "NSwag v13.9.4.0 (NJsonSchema v10.3.1.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Bookmyslot Customer API",
    "description": "Bookmyslot Customer API to manage customer data",
    "termsOfService": "None",
    "contact": {
      "name": "TA",
      "email": ""
    },
    "license": {
      "name": ""
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://localhost:44382"
    }
  ],
  "paths": {
    "/api/v1/CustomerBookedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer booked slots",
        "operationId": "CustomerBookedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer booked slots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer completed slots",
        "operationId": "CustomerBookedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer completed slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer cancelled slots",
        "operationId": "CustomerBookedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer cancelled slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customers",
        "operationId": "Customer_Get",
        "responses": {
          "200": {
            "description": "Returns all customers"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create new customer",
        "operationId": "Customer_Post",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns email id of created customer"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update existing customer",
        "operationId": "Customer_Put",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer/{email}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customer by email",
        "operationId": "Customer_Get2",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "description": "customer email id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer details"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerYetToBeBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer YetToBeBookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerYetToBeBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer  YetToBeBookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer BookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer BookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CompletedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CompletedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CancelledSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CancelledSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetDistinctCustomersNearestSlotFromToday",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetCustomerAvailableSlots": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetCustomerAvailableSlots",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          },
          {
            "name": "customerInfo",
            "in": "query",
            "description": "customer info",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/email/ResendSlotMeetingInformation": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Resend slot information email to the customers",
        "operationId": "Email_ResendSlotMeetingInformation",
        "requestBody": {
          "x-name": "resendSlotInformation",
          "description": "slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendSlotInformation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot": {
      "get": {
        "tags": [
          "Slot"
        ],
        "summary": "Gets slot",
        "operationId": "Slot_Get",
        "parameters": [
          {
            "name": "slotId",
            "in": "query",
            "description": "slot id",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot"
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "slot id inappropriate",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Create new slot for the user",
        "operationId": "Slot_Post",
        "requestBody": {
          "x-name": "slotModel",
          "description": "slot model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns slot id of created slot"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot/CancelSlot": {
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Cancel User slot",
        "operationId": "Slot_CancelSlot",
        "requestBody": {
          "x-name": "cancelSlot",
          "description": "user slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelSlot"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/SlotScheduler": {
      "post": {
        "tags": [
          "SlotScheduler"
        ],
        "operationId": "SlotScheduler_Post",
        "requestBody": {
          "x-name": "slotSchedulerModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotSchedulerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {}
          }
        }
      },
      "CustomerModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "firstName",
          "lastName",
          "gender"
        ],
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "minLength": 1
          },
          "lastName": {
            "type": "string",
            "minLength": 1
          },
          "gender": {
            "type": "string",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ResendSlotInformation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "resendSlotModel": {
            "type": "string",
            "nullable": true
          },
          "resendTo": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "title",
          "timeZone",
          "slotDate",
          "slotStartTime",
          "slotEndTime"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "default": "00000000-0000-0000-0000-000000000000"
          },
          "title": {
            "type": "string",
            "minLength": 1
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "default": "India Standard Time",
            "minLength": 1
          },
          "slotDate": {
            "type": "string",
            "format": "date-time",
            "minLength": 1
          },
          "slotStartTime": {
            "type": "string",
            "format": "time-span",
            "default": "10:00:00",
            "minLength": 1
          },
          "slotEndTime": {
            "type": "string",
            "format": "time-span",
            "default": "11:00:00",
            "minLength": 1
          },
          "slotDuration": {
            "type": "string",
            "format": "time-span"
          }
        }
      },
      "CancelSlot": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotKey": {
            "type": "string",
            "nullable": true
          },
          "cancelledBy": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotSchedulerModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotModelKey": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          }
        }
      }
    }
  }
} Compressed Body: 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 
12:38 (1.0.0) [Information] (14) Http Request Information:
Request Id: 7b24f18f-854e-4ee9-9d80-289e6324c1aa Executing At: 17-01-2021 07:08:38 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
12:38 (1.0.0) [Information] (14) Get Customer Email a@gmail.com
12:38 (1.0.0) [Information] (13) Http Request Information:
Request Id: 8f663bb7-a2df-4828-b537-34e0357b447e Executing At: 17-01-2021 07:08:39 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
12:38 (1.0.0) [Information] (13) Get all distinct customers nearest single slot
12:38 (1.0.0) [Information] (15) Http Response Information:
Request Id: 7b24f18f-854e-4ee9-9d80-289e6324c1aa Executed At: 17-01-2021 07:08:39 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
12:38 (1.0.0) [Information] (14) Http Response Information:
Request Id: 8f663bb7-a2df-4828-b537-34e0357b447e Executed At: 17-01-2021 07:08:39 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 200 Response Body: [{"slotModels":[],"customerModel":{"id":"26eca53c21344dea874c99cc1df9ceef","firstName":"MF","lastName":"ML","gender":"","email":""}}] Compressed Body: nwAAAB+LCAAAAAAAAApNzT0OwyAMBeC7eO6ShP7QA3RqcoE4g2VMhQRFAjpVuXuJp07W+/SeDOsXocbc5uwkVoT7up0Q+FNbTlJUO/ZScP0ijBdhOk88DpMxTuh2NWwt8+C8ZRGP0Oc+lNoWSqKT+aEY6d+eai95OykqmiVROP4dcd83+AFmaBw4nwAAAA== 
12:38 (1.0.0) [Information] (13) Http Request Information:
Request Id: 1c023c83-4a36-4b5e-afde-cc26311e86bc Executing At: 17-01-2021 07:08:48 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
12:38 (1.0.0) [Information] (13) Get Customer Email a@gmail.com
12:38 (1.0.0) [Information] (16) Http Response Information:
Request Id: 1c023c83-4a36-4b5e-afde-cc26311e86bc Executed At: 17-01-2021 07:08:48 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
12:41 (1.0.0) [Information] (20) Http Request Information:
Request Id: 5bc9d9d1-f19f-4e59-8ffa-3e311a5425e6 Executing At: 17-01-2021 07:11:44 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Request Body: {"title":"bjhb","slotDate":"2021-01-23T18:30:00.000Z","timeZone":"India Standard Time","slotStartTime":"0:0:0","slotEndTime":"0:20:0"} Compressed Body: nAAAAB+LCAAAAAAAAApNjDELgzAUBv+KvFnLl2SRzHborFN4SyRCIzaCfZv0vzcYCK53x9HJJFG2hckyzet7ZmqZvtsug5dCNbTqoDptJtVbAws8ALirlPhZ3J5K+Uoh+mYUn4I/QjNlV3eZHlJILvPEorpnCjejL/WjPxcoMPWcAAAA 
12:46 (1.0.0) [Information] (20) Http Response Information:
Request Id: 5bc9d9d1-f19f-4e59-8ffa-3e311a5425e6 Executed At: 17-01-2021 07:16:33 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "45e37ea2-cd8a-42ec-88f4-211ef90cf0ae" Compressed Body: KgAAAB+LCAAAAAAAAApTilEyMU01Nk9NNNJNTrFI1DUxSk3WtbBIM9E1MjRMTbM0SE4zSEyNUVICAPtkGJwqAAAA 
12:46 (1.0.0) [Information] (20) Http Request Information:
Request Id: d940e6b3-1c56-4332-97f9-46c1ba3ef4fc Executing At: 17-01-2021 07:16:50 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
12:46 (1.0.0) [Information] (20) Get all distinct customers nearest single slot
12:46 (1.0.0) [Information] (20) Http Response Information:
Request Id: d940e6b3-1c56-4332-97f9-46c1ba3ef4fc Executed At: 17-01-2021 07:16:50 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 200 Response Body: [{"slotModels":[],"customerModel":{"id":"26eca53c21344dea874c99cc1df9ceef","firstName":"MF","lastName":"ML","gender":"","email":""}}] Compressed Body: nwAAAB+LCAAAAAAAAApNzT0OwyAMBeC7eO6ShP7QA3RqcoE4g2VMhQRFAjpVuXuJp07W+/SeDOsXocbc5uwkVoT7up0Q+FNbTlJUO/ZScP0ijBdhOk88DpMxTuh2NWwt8+C8ZRGP0Oc+lNoWSqKT+aEY6d+eai95OykqmiVROP4dcd83+AFmaBw4nwAAAA== 
12:46 (1.0.0) [Information] (20) Http Request Information:
Request Id: 51d627a0-f573-4ea4-a5c7-9087995c7960 Executing At: 17-01-2021 07:16:56 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetCustomerAvailableSlots Method Type: GET QueryString: ?pageNumber=0&pageSize=10&customerInfo=26eca53c21344dea874c99cc1df9ceef Request Body:  Compressed Body:  
12:46 (1.0.0) [Information] (20) Get all available slots for the customer
12:46 (1.0.0) [Information] (20) Http Response Information:
Request Id: 51d627a0-f573-4ea4-a5c7-9087995c7960 Executed At: 17-01-2021 07:16:56 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetCustomerAvailableSlots Method Type: GET QueryString: ?pageNumber=0&pageSize=10&customerInfo=26eca53c21344dea874c99cc1df9ceef Response Status Code: 200 Response Body: {"customerModel":{"id":"26eca53c21344dea874c99cc1df9ceef","firstName":"MF","lastName":"ML","gender":"","email":""},"slotModelsInforamtion":[{"key":{"id":"924b9662-9c97-41f6-98fc-5aea442dfd96","title":"Title 1","createdBy":"","bookedBy":null,"timeZone":"India Standard Time","slotDate":"2021-01-19T23:30:00","slotStartTime":"05:00:00","slotEndTime":"05:20:00","slotDuration":"00:20:00"},"value":"T1R%2bERrUiqK6FgT6J50%2frAOPCbtn70Vd4xJKISrqQG4kW9j%2fhgdF4tBTYQ3GxdpBUhraU2nkPu3D7p4%2bTeK2t43lzmsfSLBt2yePkwAs6BbIv1cm3eOTQGm3XDmA8Y7hJa%2bkHbniX6G9tku%2fYIat%2f7qKO1XaZTbXanpnzptvN1V%2by7LLZkKF4VBDmR8f0BKpF5SbICHksr%2bohN1qf4N%2fX7ptNW7FIdae3C7rBAYzmEvSg9KNFPKF87ka%2fhGgBQmUH4WpMA%2fx25JkcFYmdqmg4ZRkIlTEKUOtiTLDuokFbqJthhkT8LDZSLB1FfNH%2bnxsm%2bUYGVOs4uhXvnguUlu9qhRWQvHYN8I%2bKzcvg2XTkFScL02EBLC5bN%2bfDoiezzHz5f8cOEZ%2f4Hk%3d"},{"key":{"id":"bfbfa976-04d7-4683-b4f8-71800d6c4f78","title":"Title 1","createdBy":"","bookedBy":null,"timeZone":"India Standard Time","slotDate":"2021-01-19T23:30:00","slotStartTime":"05:00:00","slotEndTime":"05:20:00","slotDuration":"00:20:00"},"value":"T1R%2bERrUiqLEnJVzha7SuC4fwEbq5jADheKm1YRouWJSBnZloFnR%2fKZMmcoItmzSxwqLtLsV87LD7p4%2bTeK2t43lzmsfSLBt2yePkwAs6BbIv1cm3eOTQGm3XDmA8Y7hJa%2bkHbniX6G9tku%2fYIat%2f7qKO1XaZTbXanpnzptvN1V%2by7LLZkKF4VBDmR8f0BKpF5SbICHksr%2bohN1qf4N%2fX7ptNW7FIdae3C7rBAYzmEvSg9KNFPKF87ka%2fhGgBQmUH4WpMA%2fx25JkcFYmdqmg4ZRkIlTEKUOtiTLDuokFbqJthhkT8LDZSLB1FfNH%2bnxsm%2bUYGVOs4uhXvnguUlu9qhRWQvHYN8I%2bKzcvg2XTkFScL02EBLC5bN%2bfDoiezzHz5f8cOEZ%2f4Hk%3d"},{"key":{"id":"94d1f520-ee78-4f8f-b753-723976358e29","title":"Title 1","createdBy":"","bookedBy":null,"timeZone":"India Standard Time","slotDate":"2021-01-19T23:30:00","slotStartTime":"05:00:00","slotEndTime":"05:20:00","slotDuration":"00:20:00"},"value":"T1R%2bERrUiqIt%2fKuGR%2fVXlmHK1BDgywnr%2fPn1iLNVJpKaK0wNMXNz947Z6%2b6i7vG6b2lsO9UjpqjD7p4%2bTeK2t43lzmsfSLBt2yePkwAs6BbIv1cm3eOTQGm3XDmA8Y7hJa%2bkHbniX6G9tku%2fYIat%2f7qKO1XaZTbXanpnzptvN1V%2by7LLZkKF4VBDmR8f0BKpF5SbICHksr%2bohN1qf4N%2fX7ptNW7FIdae3C7rBAYzmEvSg9KNFPKF87ka%2fhGgBQmUH4WpMA%2fx25JkcFYmdqmg4ZRkIlTEKUOtiTLDuokFbqJthhkT8LDZSLB1FfNH%2bnxsm%2bUYGVOs4uhXvnguUlu9qhRWQvHYN8I%2bKzcvg2XTkFScL02EBLC5bN%2bfDoiezzHz5f8cOEZ%2f4Hk%3d"},{"key":{"id":"7d3bc99d-6177-4f4e-89d3-bb40bc4ff998","title":"Title 1","createdBy":"","bookedBy":null,"timeZone":"India Standard Time","slotDate":"2021-01-19T23:30:00","slotStartTime":"05:00:00","slotEndTime":"05:20:00","slotDuration":"00:20:00"},"value":"T1R%2bERrUiqJufnn%2fttdV%2bfOfzmfhiqKbq%2f9jMMwxXpk72GEJd7zyeaH3FmBqbeP9UYXLv8e6eRLD7p4%2bTeK2t43lzmsfSLBt2yePkwAs6BbIv1cm3eOTQGm3XDmA8Y7hJa%2bkHbniX6G9tku%2fYIat%2f7qKO1XaZTbXanpnzptvN1V%2by7LLZkKF4VBDmR8f0BKpF5SbICHksr%2bohN1qf4N%2fX7ptNW7FIdae3C7rBAYzmEvSg9KNFPKF87ka%2fhGgBQmUH4WpMA%2fx25JkcFYmdqmg4ZRkIlTEKUOtiTLDuokFbqJthhkT8LDZSLB1FfNH%2bnxsm%2bUYGVOs4uhXvnguUlu9qhRWQvHYN8I%2bKzcvg2XTkFScL02EBLC5bN%2bfDoiezzHz5f8cOEZ%2f4Hk%3d"},{"key":{"id":"da40cde1-f0c5-41ca-a469-c3c2fd7a28c3","title":"Title 1","createdBy":"","bookedBy":null,"timeZone":"India Standard Time","slotDate":"2021-01-19T23:30:00","slotStartTime":"05:00:00","slotEndTime":"05:20:00","slotDuration":"00:20:00"},"value":"T1R%2bERrUiqJkOAwlc0PwhQg%2bmQiKP07dQYcPodKCKZrzwRyk6LomJzarnLr%2b74RYfXTJkRm5s87D7p4%2bTeK2t43lzmsfSLBt2yePkwAs6BbIv1cm3eOTQGm3XDmA8Y7hJa%2bkHbniX6G9tku%2fYIat%2f7qKO1XaZTbXanpnzptvN1V%2by7LLZkKF4VBDmR8f0BKpF5SbICHksr%2bohN1qf4N%2fX7ptNW7FIdae3C7rBAYzmEvSg9KNFPKF87ka%2fhGgBQmUH4WpMA%2fx25JkcFYmdqmg4ZRkIlTEKUOtiTLDuokFbqJthhkT8LDZSLB1FfNH%2bnxsm%2bUYGVOs4uhXvnguUlu9qhRWQvHYN8I%2bKzcvg2XTkFScL02EBLC5bN%2bfDoiezzHz5f8cOEZ%2f4Hk%3d"},{"key":{"id":"45e37ea2-cd8a-42ec-88f4-211ef90cf0ae","title":"bjhb","createdBy":"","bookedBy":null,"timeZone":"India Standard Time","slotDate":"2021-01-22T18:30:00","slotStartTime":"00:00:00","slotEndTime":"00:20:00","slotDuration":"00:20:00"},"value":"T1R%2bERrUiqKZWJPKM1xlg8qMnzxJhlmJ03l1eoqxM7bNHq8dR1bX6EXvcEPgrB2OSQqKsFubHXWUZoRo4%2bbPLZIOnfVvAh5o0LW6pTMA91UsXsu8ZAbBVrrWNCDxgyLovPt5W%2fccATapLkJ1%2brMaspw%2bHzJNgItpkSU2Ab%2bJCXpoqfIYhT58imSFgfzU1hnMTenNRq%2fqq7AdYU7OXAq14fskFIPsXHDwa6RtHxdsbWONIenArKksNVyx8U3I9xx6bovG8BFgN5mLzIuF6vTkzGiWvDPOgASPOTA7vjfjHK6ZAg0BSC5LlQ%2bYEdJk2%2fQ1pwYt7FFEc1dNnXp5eM7Nw6n4F4OGaLm4IOpGZJG%2fTebWvNs63caEpHEZUA969rh7"},{"key":{"id":"0a7a02b8-958d-4c0a-a2b9-82378da1a957","title":"Title 1","createdBy":"","bookedBy":null,"timeZone":"India Standard Time","slotDate":"2021-01-24T23:30:00","slotStartTime":"05:00:00","slotEndTime":"05:20:00","slotDuration":"00:20:00"},"value":"T1R%2bERrUiqLImjFV6M%2btVHauZIiNzqCQm4bzov3cvPpqj31jk7V%2fsMXFTF77JSfyVAgG2JbI4anD7p4%2bTeK2t43lzmsfSLBt2yePkwAs6BbIv1cm3eOTQGm3XDmA8Y7hJa%2bkHbniX6G9tku%2fYIat%2f7qKO1XaZTbXanpnzptvN1V%2by7LLZkKF4VBDmR8f0BKpF5SbICHksr%2bohN1qf4N%2fX7ptNW7FIdae3C7rBAYzmEvSg9KNFPKF801P%2b8zAGPJuH4WpMA%2fx25JkcFYmdqmg4ZRkIlTEKUOtiTLDuokFbqJthhkT8LDZSLB1FfNH%2bnxsm%2bUYGVOs4uhXvnguUlu9qhRWQvHYN8I%2bKzcvg2XTkFScL02EBLC5bN%2bfDoiezzHz5f8cOEZ%2f4Hk%3d"}]} Compressed Body: ghQAAB+LCAAAAAAAAArtWFvPo7oV/SujT5q3g8TFYJg3ciHhEkISkpD064PBNiTcr0mo5r/XyUzbOVV7Xir1azXzZLy2t70wS8vbvP3l/S3q267MSbMqMcne374w6IJZ+/4mKiRCshSJggQAJkiFINK0KBIw1SJC6Pvbb+9v9NK0nYty8kpZGS8wQz9izguLSYFJ80JefZKjS/a9+5X126zsXhxas6Blg/LuUhYs/idGKCWP3zHTRBBqiiJyWqRBDghU4TSVRpyMCAJAxBRrymuR7tJl31j4z6dPwguNGoI6giePf7AJyzL9jhR9lr1Sc3Iui2/ZZoEv6NOuQwVGDf7ks9gr7Ul6xub6tl+8KHC8wAmaL0pfJP4Lz/99EEttum9pbCQvs9iP4XmBfwyKvwvO+gZ93wwW5f8WfW7agLL++/sJ289iON82+0ttK0bsK5bMfxZpo6+9adgVkD9gcLdsc9fUmwVIj9qVRZMYG6Cb+KeNtLjjarJPGrQXi9TrpRmsAJvRJ7bYASkb85bunEknPoiX3vRWmYTmIES5RNb+ZpFLwSzX1RNMLMSS0mVYXAJloXVpz1Y5mahjDazttRCgsx8GqKiKseoGVziw4Q/oOOfUNsBhMsu3KuUndmXIu9CcLtO2YQPKxBVqClw2SQCrzj1Cw8SISFPYTPTTmM+HXazZruHZhgpTxoAmi3iyyfdLcKxWOuvfRdlKI+OU4zqPwXmbmpk/t/fr7uI7s75MjbC2uiRJfdWZndl7CgZ1l2zl4t7mrNmfFod1C/okGIq432e9Vifb42ZYnlzVZHF7jIZYDPzU2EUOL84nzlQOGd2QzsoLGcflKFM1Ws/PjApYpp8lpuOvv/0LZYc0pEiDCscDzJStqBIXAqpyUFB5HisRoFD9iZXtzAvrMCYI7vopoLd5WMtXfZYQOxdO27I/WrtJcc5Ko2Ap1D6v8qg0u3zc3W+10zntQYXOL11/hK41gAUqizxHCFQ5pmjKhVCWOChKTO2SrBJR+4l1bT790e4XT9kegixf2sJkFj9uBXM/6hXCxXEPVmUjm7+5q8AdNQDPCstWLnBYKKGYtWttf63q6y91f4S6IZZCVhphThEgc20KCKdqmFl3CPiQeTbVtJ/Zta2eFgXbw67Dz+OerumY04TVKWHNUO26Wt3uQZVCcTG3MBwfBC0lI5/UIfG0/SlwBpUoZPvLuT9E2xgBPsJE4CgfyazWjhCHgKJxEbsYUAyRqEbSz6ztdK3fsoj3bskmZmi+udgeD/HmFHkltqf2uRlv20eqOGVujagpnGdBC8H2RAPfSre53Krwl2t/hLKBTCRIkMhFWEUcEEnEqSoFnCgIhGp8RHlE/knZ4TUJ/xuyFkVfUP9Y1vwfyZr/j6+Q56Pl2SvhnsVqvSrGu5VkucVLmUDK+r6CobusVbwVwkCZB0M09+JmIq53m9pujT5cBsf9udyWzwtk6Dlnc13Qw6Ancsk7R6XyV7om7Nug7dWzHk4OTXN0p7N7/HDKwevkI/twUaT7qHJSS2BTNCvUVjf2sBwtNza7Kt3tRT1kgDUNqrKm5inxZfWS74yYjnshKVY+Kdzt83Spa6jj0x6uA70WAG1Tw/TaYDm7IWXbLe+4DY9r1ySF3thp6x4ed3Uvmdr9roTlsFAnRuzKuTOavaEMfjouLsdh5q1jfeetfR0OV3pd2spZj/nJbio72YZxOs2xlYps6Y1Q3U4dNIw5+2XiFkElkxV0b0oBDLBeICcH5rpanK0FG+uT8Di4rSJFaF4t5+e9rilak8B/I10eQcSLocppsoo5EPHMlMVQ41RRgipGAtJk+HGmLIKPviaa+dU4KCsGdIcl6s/mxR3r6SYH4VgOUjR4rFSWhGsKWT1C21Vg+AaE1o4+Dnq8EK3QBKj4fzVlXvBYhjrqC8/q/6d/gPz569tfAReT7+qCFAAA 
12:47 (1.0.0) [Information] (26) Http Request Information:
Request Id: 54af1e58-eb18-4a49-b7da-21980a8c530e Executing At: 17-01-2021 07:17:22 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
12:47 (1.0.0) [Information] (26) Get Customer Email a@gmail.com
12:47 (1.0.0) [Information] (26) Http Response Information:
Request Id: 54af1e58-eb18-4a49-b7da-21980a8c530e Executed At: 17-01-2021 07:17:23 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
12:48 (1.0.0) [Information] (30) Http Request Information:
Request Id: aeb4a2bd-894c-43ff-9120-8afe8f69410d Executing At: 17-01-2021 07:18:25 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Request Body: {"title":"title","slotDate":"2021-01-23T18:30:00.000Z","timeZone":"India Standard Time","slotStartTime":"0:0:0","slotEndTime":"0:20:0"} Compressed Body: nQAAAB+LCAAAAAAAAApNjLEKgCAURX8l3pxxtSWca2jOKVwEHYQyqLdF/54kSNvlnMOl2xJH3oIlXVdr6doOHh0XrKCkgBSqN3LQPTTQAVi/kuMe1iOVck4+umZhl7w7fWOyq3eZnlxILvOJRnVT8j+jPvXQC+2oO0WdAAAA 
12:48 (1.0.0) [Information] (33) Http Response Information:
Request Id: aeb4a2bd-894c-43ff-9120-8afe8f69410d Executed At: 17-01-2021 07:18:35 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "f89d05dd-f454-47ee-a59f-bd95e45933f3" Compressed Body: KgAAAB+LCAAAAAAAAApTilFKs7BMMTBNSdFNMzE10TUxT03VTTS1TNNNSrE0TTUxtTQ2TjOOUVICAO1HW1YqAAAA 
12:48 (1.0.0) [Information] (30) Http Request Information:
Request Id: dc84c14f-a409-4b7c-88b8-9ad7798b8f9a Executing At: 17-01-2021 07:18:52 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
12:48 (1.0.0) [Information] (30) Get all distinct customers nearest single slot
12:48 (1.0.0) [Information] (31) Http Response Information:
Request Id: dc84c14f-a409-4b7c-88b8-9ad7798b8f9a Executed At: 17-01-2021 07:18:52 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 200 Response Body: [{"slotModels":[],"customerModel":{"id":"26eca53c21344dea874c99cc1df9ceef","firstName":"MF","lastName":"ML","gender":"","email":""}}] Compressed Body: nwAAAB+LCAAAAAAAAApNzT0OwyAMBeC7eO6ShP7QA3RqcoE4g2VMhQRFAjpVuXuJp07W+/SeDOsXocbc5uwkVoT7up0Q+FNbTlJUO/ZScP0ijBdhOk88DpMxTuh2NWwt8+C8ZRGP0Oc+lNoWSqKT+aEY6d+eai95OykqmiVROP4dcd83+AFmaBw4nwAAAA== 
12:49 (1.0.0) [Information] (30) Http Request Information:
Request Id: 0c4b7628-fc62-4a6d-b02c-e6507ce51c7a Executing At: 17-01-2021 07:19:02 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetCustomerAvailableSlots Method Type: GET QueryString: ?pageNumber=0&pageSize=10&customerInfo=26eca53c21344dea874c99cc1df9ceef Request Body:  Compressed Body:  
12:49 (1.0.0) [Information] (30) Get all available slots for the customer
12:49 (1.0.0) [Information] (32) Http Response Information:
Request Id: 0c4b7628-fc62-4a6d-b02c-e6507ce51c7a Executed At: 17-01-2021 07:19:02 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetCustomerAvailableSlots Method Type: GET QueryString: ?pageNumber=0&pageSize=10&customerInfo=26eca53c21344dea874c99cc1df9ceef Response Status Code: 200 Response Body: {"customerModel":{"id":"26eca53c21344dea874c99cc1df9ceef","firstName":"MF","lastName":"ML","gender":"","email":""},"slotModelsInforamtion":[{"key":{"id":"f89d05dd-f454-47ee-a59f-bd95e45933f3","title":"title","createdBy":"","bookedBy":null,"timeZone":"India Standard Time","slotDate":"2021-01-22T18:30:00","slotStartTime":"00:00:00","slotEndTime":"00:20:00","slotDuration":"00:20:00"},"value":"T1R%2bERrUiqIuBgxTG7F3HW7QoeNjrLGsrp0RyTCGaxQ5%2bwT8qbAimllx1xkCGlWzI6IqleU9VXJG9pN0V6xsNORBKS9%2f2n8XORSDPQxD6qV2VXteUucmbhL7hUAasdt5cO%2bxsWycCryErUgUW7TcUqLbkNgq%2fRzMSoanX1cD8uNJu4vOXjinooB%2f%2fcf6GW9Athpl8VMkp4aXcVM1oU2JjTpXvVGE50rpgm85KnNVR7tsanoqiU%2f0eN5ZOuXSX%2b37grwzKFOedt36CNqdsFOEmw%2bYEdJk2%2fQ1ogtJPWl6g1F2LiCLpOu2mWFRgX9keXOl0tpAIh588Mu2D0h2oOvBd3kO4Q%2fQM23ogpm8mngDrNUlKVN6nsE%2bfBJ50qzuGrs%2f"}]} Compressed Body: awMAAB+LCAAAAAAAAApVkVtvozAQhf9KFalvGwnMvW+5srlBQ4Cw3eyDgw2hGAzGpEmq/vd1SLSbSkhmzplvfDTufe56cdtwWmC2ogiTXe9FSBkS564HdBxDTYmBrKgqwtA01Niy4lhGiRVjnOx6P3a9JGMNd2CBO2Q17UQCH7Vlp6W4RJh1SlfjAmbkXn6JuiGUdxmaWZlQBgue0VL4v0WgHJ+/JUtMC0kaQv1E1dS+amDch5qV9PfI0rCqWYqSKN0lPOPkluL+J7SYYcgxGp7/Z9lTmt+VsiWkAwv8RssbOytRBp82HJYIMvTkC6/DrpHHYtZtWxKQ+5LcB8CXzRdFepGkf00CZfyGiU7p6j3akxI9muCbOW4ZvK/i0b2u7AhJe6N82XsG+4nHgqyetcP05NvGVPm5NdYUO+9saTeskryzP7Lhaa2J1g/frPeDrCDkJJ/ykU22l5k+qwkOrDCa21blSKF+ahzXGy421jNIQGlGrrcZv65PY70OQRhxHLRxsT8sjUMwgA3iWuyKyadme45H7DxhQRpsDT8O6uU+d9JaDPEuqw2FZSTHY7N15q16dKP3rKR0KEzxxYlub60BP1TEDFd5pcIoDlcyDcD83a+iY2hPNIlVaWFqi9IJPYM3sKR1FghWwo725rbRJhIhFCNlH5fF1MWIK/rIqVEzdSfFh7B+TdA8BwJYyzTl89ct0VN5CpbZaFm5LSi2Uy+NrBxHLpF4NZgdNNNctWAsHQB1j0Ok5K66vuIroNC0KsyiTMfMCcgidPSymYgrkuFck+pLa7NGNIq3+vPV+wsw6ZjsawMAAA== 
12:49 (1.0.0) [Information] (35) Http Request Information:
Request Id: 6999e61e-c983-497d-8ad6-9dd645ac38a0 Executing At: 17-01-2021 07:19:56 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
12:49 (1.0.0) [Information] (35) Get Customer Email a@gmail.com
12:49 (1.0.0) [Information] (34) Http Response Information:
Request Id: 6999e61e-c983-497d-8ad6-9dd645ac38a0 Executed At: 17-01-2021 07:19:56 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
12:49 (1.0.0) [Information] (37) Http Request Information:
Request Id: a53ab50d-e241-4ea6-ac96-6c5a3d5eb99a Executing At: 17-01-2021 07:19:56 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetCustomerAvailableSlots Method Type: GET QueryString: ?pageNumber=0&pageSize=10&customerInfo=26eca53c21344dea874c99cc1df9ceef Request Body:  Compressed Body:  
12:49 (1.0.0) [Information] (37) Get all available slots for the customer
12:49 (1.0.0) [Information] (36) Http Response Information:
Request Id: a53ab50d-e241-4ea6-ac96-6c5a3d5eb99a Executed At: 17-01-2021 07:19:56 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetCustomerAvailableSlots Method Type: GET QueryString: ?pageNumber=0&pageSize=10&customerInfo=26eca53c21344dea874c99cc1df9ceef Response Status Code: 200 Response Body: {"customerModel":{"id":"26eca53c21344dea874c99cc1df9ceef","firstName":"MF","lastName":"ML","gender":"","email":""},"slotModelsInforamtion":[{"key":{"id":"f89d05dd-f454-47ee-a59f-bd95e45933f3","title":"title","createdBy":"","bookedBy":null,"timeZone":"India Standard Time","slotDate":"2021-01-22T18:30:00","slotStartTime":"00:00:00","slotEndTime":"00:20:00","slotDuration":"00:20:00"},"value":"T1R%2bERrUiqIuBgxTG7F3HW7QoeNjrLGsrp0RyTCGaxQ5%2bwT8qbAimllx1xkCGlWzI6IqleU9VXJG9pN0V6xsNORBKS9%2f2n8XORSDPQxD6qV2VXteUucmbhL7hUAasdt5cO%2bxsWycCryErUgUW7TcUqLbkNgq%2fRzMSoanX1cD8uNJu4vOXjinooB%2f%2fcf6GW9Athpl8VMkp4aXcVM1oU2JjTpXvVGE50rpgm85KnNVR7tsanoqiU%2f0eN5ZOuXSX%2b37grwzKFOedt36CNqdsFOEmw%2bYEdJk2%2fQ1ogtJPWl6g1F2LiCLpOu2mWFRgX9keXOl0tpAIh588Mu2D0h2oOvBd3kO4Q%2fQM23ogpm8mngDrNUlKVN6nsE%2bfBJ50qzuGrs%2f"}]} Compressed Body: awMAAB+LCAAAAAAAAApVkVtvozAQhf9KFalvGwnMvW+5srlBQ4Cw3eyDgw2hGAzGpEmq/vd1SLSbSkhmzplvfDTufe56cdtwWmC2ogiTXe9FSBkS564HdBxDTYmBrKgqwtA01Niy4lhGiRVjnOx6P3a9JGMNd2CBO2Q17UQCH7Vlp6W4RJh1SlfjAmbkXn6JuiGUdxmaWZlQBgue0VL4v0WgHJ+/JUtMC0kaQv1E1dS+amDch5qV9PfI0rCqWYqSKN0lPOPkluL+J7SYYcgxGp7/Z9lTmt+VsiWkAwv8RssbOytRBp82HJYIMvTkC6/DrpHHYtZtWxKQ+5LcB8CXzRdFepGkf00CZfyGiU7p6j3akxI9muCbOW4ZvK/i0b2u7AhJe6N82XsG+4nHgqyetcP05NvGVPm5NdYUO+9saTeskryzP7Lhaa2J1g/frPeDrCDkJJ/ykU22l5k+qwkOrDCa21blSKF+ahzXGy421jNIQGlGrrcZv65PY70OQRhxHLRxsT8sjUMwgA3iWuyKyadme45H7DxhQRpsDT8O6uU+d9JaDPEuqw2FZSTHY7N15q16dKP3rKR0KEzxxYlub60BP1TEDFd5pcIoDlcyDcD83a+iY2hPNIlVaWFqi9IJPYM3sKR1FghWwo725rbRJhIhFCNlH5fF1MWIK/rIqVEzdSfFh7B+TdA8BwJYyzTl89ct0VN5CpbZaFm5LSi2Uy+NrBxHLpF4NZgdNNNctWAsHQB1j0Ok5K66vuIroNC0KsyiTMfMCcgidPSymYgrkuFck+pLa7NGNIq3+vPV+wsw6ZjsawMAAA== 
12:51 (1.0.0) [Information] (38) Http Request Information:
Request Id: 0eeb8e30-9da6-4fa0-bfdc-010f4474c254 Executing At: 17-01-2021 07:21:16 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
12:51 (1.0.0) [Information] (38) Get Customer Email a@gmail.com
12:51 (1.0.0) [Information] (38) Http Response Information:
Request Id: 0eeb8e30-9da6-4fa0-bfdc-010f4474c254 Executed At: 17-01-2021 07:21:16 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
12:51 (1.0.0) [Information] (38) Http Request Information:
Request Id: 78ef19db-b14c-4527-92dc-53dacb023b58 Executing At: 17-01-2021 07:21:16 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetCustomerAvailableSlots Method Type: GET QueryString: ?pageNumber=0&pageSize=10&customerInfo=26eca53c21344dea874c99cc1df9ceef Request Body:  Compressed Body:  
12:51 (1.0.0) [Information] (38) Get all available slots for the customer
12:52 (1.0.0) [Information] (40) Http Response Information:
Request Id: 78ef19db-b14c-4527-92dc-53dacb023b58 Executed At: 17-01-2021 07:22:40 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetCustomerAvailableSlots Method Type: GET QueryString: ?pageNumber=0&pageSize=10&customerInfo=26eca53c21344dea874c99cc1df9ceef Response Status Code: 200 Response Body: {"customerModel":{"id":"26eca53c21344dea874c99cc1df9ceef","firstName":"MF","lastName":"ML","gender":"","email":""},"slotModelsInforamtion":[{"key":{"id":"f89d05dd-f454-47ee-a59f-bd95e45933f3","title":"title","createdBy":"","bookedBy":null,"timeZone":"India Standard Time","slotDate":"2021-01-22T18:30:00","slotStartTime":"00:00:00","slotEndTime":"00:20:00","slotDuration":"00:20:00"},"value":"T1R%2bERrUiqIuBgxTG7F3HW7QoeNjrLGsrp0RyTCGaxQ5%2bwT8qbAimllx1xkCGlWzI6IqleU9VXJG9pN0V6xsNORBKS9%2f2n8XORSDPQxD6qV2VXteUucmbhL7hUAasdt5cO%2bxsWycCryErUgUW7TcUqLbkNgq%2fRzMSoanX1cD8uNJu4vOXjinooB%2f%2fcf6GW9Athpl8VMkp4aXcVM1oU2JjTpXvVGE50rpgm85KnNVR7tsanoqiU%2f0eN5ZOuXSX%2b37grwzKFOedt36CNqdsFOEmw%2bYEdJk2%2fQ1ogtJPWl6g1F2LiCLpOu2mWFRgX9keXOl0tpAIh588Mu2D0h2oOvBd3kO4Q%2fQM23ogpm8mngDrNUlKVN6nsE%2bfBJ50qzuGrs%2f"}]} Compressed Body: awMAAB+LCAAAAAAAAApVkVtvozAQhf9KFalvGwnMvW+5srlBQ4Cw3eyDgw2hGAzGpEmq/vd1SLSbSkhmzplvfDTufe56cdtwWmC2ogiTXe9FSBkS564HdBxDTYmBrKgqwtA01Niy4lhGiRVjnOx6P3a9JGMNd2CBO2Q17UQCH7Vlp6W4RJh1SlfjAmbkXn6JuiGUdxmaWZlQBgue0VL4v0WgHJ+/JUtMC0kaQv1E1dS+amDch5qV9PfI0rCqWYqSKN0lPOPkluL+J7SYYcgxGp7/Z9lTmt+VsiWkAwv8RssbOytRBp82HJYIMvTkC6/DrpHHYtZtWxKQ+5LcB8CXzRdFepGkf00CZfyGiU7p6j3akxI9muCbOW4ZvK/i0b2u7AhJe6N82XsG+4nHgqyetcP05NvGVPm5NdYUO+9saTeskryzP7Lhaa2J1g/frPeDrCDkJJ/ykU22l5k+qwkOrDCa21blSKF+ahzXGy421jNIQGlGrrcZv65PY70OQRhxHLRxsT8sjUMwgA3iWuyKyadme45H7DxhQRpsDT8O6uU+d9JaDPEuqw2FZSTHY7N15q16dKP3rKR0KEzxxYlub60BP1TEDFd5pcIoDlcyDcD83a+iY2hPNIlVaWFqi9IJPYM3sKR1FghWwo725rbRJhIhFCNlH5fF1MWIK/rIqVEzdSfFh7B+TdA8BwJYyzTl89ct0VN5CpbZaFm5LSi2Uy+NrBxHLpF4NZgdNNNctWAsHQB1j0Ok5K66vuIroNC0KsyiTMfMCcgidPSymYgrkuFck+pLa7NGNIq3+vPV+wsw6ZjsawMAAA== 
12:53 (1.0.0) [Information] (40) Http Request Information:
Request Id: 9558080b-2f82-4047-81e3-65fd9da75f44 Executing At: 17-01-2021 07:23:26 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
12:53 (1.0.0) [Information] (40) Get Customer Email a@gmail.com
12:53 (1.0.0) [Information] (43) Http Response Information:
Request Id: 9558080b-2f82-4047-81e3-65fd9da75f44 Executed At: 17-01-2021 07:23:26 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
12:53 (1.0.0) [Information] (40) Http Request Information:
Request Id: df028886-3d79-4d6e-aef4-b394edff20dd Executing At: 17-01-2021 07:23:37 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Request Body: {"title":"yuiy","slotDate":"2021-01-23T18:30:00.000Z","timeZone":"India Standard Time","slotStartTime":"0:0:0","slotEndTime":"0:20:0"} Compressed Body: nAAAAB+LCAAAAAAAAApNjLEKgDAQxX5FblZ5rYt01sFZJ7mlUIeCVtBzEPHfLRbENQmhi0m8zBOTYToPfzLlTPu8SmMlUQ2tCqhCV4OqTQUDlADGtxS/TOMaUtkF523Wiw3Obi4bovt2kW6SSCzjxOBzbXA/o1910wNe48hGnAAAAA== 
12:54 (1.0.0) [Information] (47) Http Response Information:
Request Id: df028886-3d79-4d6e-aef4-b394edff20dd Executed At: 17-01-2021 07:24:53 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "e95551d8-85bf-4046-b1f3-720f1b299258" Compressed Body: KgAAAB+LCAAAAAAAAApTilFKtTQ1NTVMsdC1ME1K0zUxMDHTTTJMM9Y1NzJIM0wysrQ0MrWIUVICAOMMMiQqAAAA 
13:02 (1.0.0) [Information] (50) Http Request Information:
Request Id: b42af812-d376-42b2-9910-243e3bd00b3c Executing At: 17-01-2021 07:32:43 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Request Body: {"title":"yuiy","slotDate":"2021-01-23T18:30:00.000Z","timeZone":"India Standard Time","slotStartTime":"0:0:0","slotEndTime":"0:20:0"} Compressed Body: nAAAAB+LCAAAAAAAAApNjLEKgDAQxX5FblZ5rYt01sFZJ7mlUIeCVtBzEPHfLRbENQmhi0m8zBOTYToPfzLlTPu8SmMlUQ2tCqhCV4OqTQUDlADGtxS/TOMaUtkF523Wiw3Obi4bovt2kW6SSCzjxOBzbXA/o1910wNe48hGnAAAAA== 
13:02 (1.0.0) [Information] (50) Http Response Information:
Request Id: b42af812-d376-42b2-9910-243e3bd00b3c Executed At: 17-01-2021 07:32:45 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "97635c92-4941-4c21-a447-5a5905ae073e" Compressed Body: KgAAAB+LCAAAAAAAAApTilGyNDczNk22NNI1sTQx1DVJNjLUTTQxMdc1TTS1NDBNTDUwN06NUVICAELIX6EqAAAA 
13:03 (1.0.0) [Information] (50) Http Request Information:
Request Id: 293c7709-5cc9-47a9-b5f8-114c8dbaf62a Executing At: 17-01-2021 07:33:00 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
13:03 (1.0.0) [Information] (50) Get all distinct customers nearest single slot
13:03 (1.0.0) [Information] (52) Http Response Information:
Request Id: 293c7709-5cc9-47a9-b5f8-114c8dbaf62a Executed At: 17-01-2021 07:33:00 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 200 Response Body: [{"slotModels":[],"customerModel":{"id":"26eca53c21344dea874c99cc1df9ceef","firstName":"MF","lastName":"ML","gender":"","email":""}}] Compressed Body: nwAAAB+LCAAAAAAAAApNzT0OwyAMBeC7eO6ShP7QA3RqcoE4g2VMhQRFAjpVuXuJp07W+/SeDOsXocbc5uwkVoT7up0Q+FNbTlJUO/ZScP0ijBdhOk88DpMxTuh2NWwt8+C8ZRGP0Oc+lNoWSqKT+aEY6d+eai95OykqmiVROP4dcd83+AFmaBw4nwAAAA== 
13:03 (1.0.0) [Information] (50) Http Request Information:
Request Id: cc47419c-a560-4540-9386-6a2db8b4026e Executing At: 17-01-2021 07:33:10 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetCustomerAvailableSlots Method Type: GET QueryString: ?pageNumber=0&pageSize=10&customerInfo=26eca53c21344dea874c99cc1df9ceef Request Body:  Compressed Body:  
13:03 (1.0.0) [Information] (50) Get all available slots for the customer
13:03 (1.0.0) [Information] (52) Http Response Information:
Request Id: cc47419c-a560-4540-9386-6a2db8b4026e Executed At: 17-01-2021 07:33:37 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetCustomerAvailableSlots Method Type: GET QueryString: ?pageNumber=0&pageSize=10&customerInfo=26eca53c21344dea874c99cc1df9ceef Response Status Code: 200 Response Body: {"customerModel":{"id":"26eca53c21344dea874c99cc1df9ceef","firstName":"MF","lastName":"ML","gender":"","email":""},"slotModelsInforamtion":[{"key":{"id":"97635c92-4941-4c21-a447-5a5905ae073e","title":"yuiy","createdBy":"","bookedBy":null,"timeZone":"India Standard Time","slotDate":"2021-01-22T18:30:00","slotStartTime":"00:00:00","slotEndTime":"00:20:00","slotDuration":"00:20:00"},"value":"T1R%2bERrUiqIPXun%2bfnvN9BteeSGIfXT2kYBxWoozGt0L5bu3CbsBEsSYUyU3LZy9f%2bMxuqNPUr5%2fqJo%2fATl75elGT%2b4DpzG80LW6pTMA91UsXsu8ZAbBVrrWNCDxgyLovPt5W%2fccATapLkJ1%2brMaspw%2bHzJNgItpkSU2Ab%2bJCXpoqfIYhT58imSFgfzU1hnMTenNRq%2fqq7AdYU7OXAq14fskFIPsXHDwa6RtHxdsbWONIenArKksNVyx8U3I9xx6bovG8BFgN5mLzIuF6vTkzGiWvDPOgASPOTA7vjfjHK6ZAg0BSC5LlQ%2bYEdJk2%2fQ1pwYt7FFEc1dNnXp5eM7Nw6n4F4OGaLm4IOpGZJG%2fTebWvNs63caEpHEZUA969rh7"},{"key":{"id":"e95551d8-85bf-4046-b1f3-720f1b299258","title":"yuiy","createdBy":"","bookedBy":null,"timeZone":"India Standard Time","slotDate":"2021-01-22T18:30:00","slotStartTime":"00:00:00","slotEndTime":"00:20:00","slotDuration":"00:20:00"},"value":"T1R%2bERrUiqJ4pYoR%2fjZxlwQlxcTqIsoqaH7eLNRp3y59WWysh%2f%2flwoZ3mFqz46qExaplwJrB83V%2fqJo%2fATl75elGT%2b4DpzG80LW6pTMA91UsXsu8ZAbBVrrWNCDxgyLovPt5W%2fccATapLkJ1%2brMaspw%2bHzJNgItpkSU2Ab%2bJCXpoqfIYhT58imSFgfzU1hnMTenNRq%2fqq7AdYU7OXAq14fskFIPsXHDwa6RtHxdsbWONIenArKksNVyx8U3I9xx6bovG8BFgN5mLzIuF6vTkzGiWvDPOgASPOTA7vjfjHK6ZAg0BSC5LlQ%2bYEdJk2%2fQ1pwYt7FFEc1dNnXp5eM7Nw6n4F4OGaLm4IOpGZJG%2fTebWvNs63caEpHEZUA969rh7"},{"key":{"id":"f89d05dd-f454-47ee-a59f-bd95e45933f3","title":"title","createdBy":"","bookedBy":null,"timeZone":"India Standard Time","slotDate":"2021-01-22T18:30:00","slotStartTime":"00:00:00","slotEndTime":"00:20:00","slotDuration":"00:20:00"},"value":"T1R%2bERrUiqIuBgxTG7F3HW7QoeNjrLGsrp0RyTCGaxQ5%2bwT8qbAimllx1xkCGlWzI6IqleU9VXJG9pN0V6xsNORBKS9%2f2n8XORSDPQxD6qV2VXteUucmbhL7hUAasdt5cO%2bxsWycCryErUgUW7TcUqLbkNgq%2fRzMSoanX1cD8uNJu4vOXjinooB%2f%2fcf6GW9Athpl8VMkp4aXcVM1oU2JjTpXvVGE50rpgm85KnNVR7tsanoqiU%2f0eN5ZOuXSX%2b37grwzKFOedt36CNqdsFOEmw%2bYEdJk2%2fQ1ogtJPWl6g1F2LiCLpOu2mWFRgX9keXOl0tpAIh588Mu2D0h2oOvBd3kO4Q%2fQM23ogpm8mngDrNUlKVN6nsE%2bfBJ50qzuGrs%2f"}]} Compressed Body: 8wgAAB+LCAAAAAAAAArtVcmuozgU/ZVSpNo1EpMZagdJIPAIZIBA0q8XBgwhDGZMIKX693aSp+5Xrd72qlpC4HvOPfaRfbmefX+fRUPX4xK1axyj4n32jUBZTL7vM1ZAEQRcxDIcz8cISiIfyXIUMXEiRwgl77Pf3mdJ1na9DUv0lKy1J1jAz5j1xFJUxah9Is8YlTArPsIfJO4K3D89dEaV4BaWfYYrwv9ODOVo+smZLAociGSW4mWeoXjikII8L1IAApkGENEiR9Ymk/ZZX7xcTEM2PaGoRbBHsTr9bSXEOP9AqqEonroSnXD1khpVnMEv+x5WMWzjLy7hnrKH4wWZ67VZNDFBMxTLuoz0jaO/0fRfSUTa9i8ZyaQf3Gd6WcWfSfYncjG08GMnPrOPHbvCYnipXGb3lQ2Xu9bLGmMTDBWJkupqy2qP0F43ksBl86M6+hjf9Z62QDhw87BTl93+6E0eZ50mOSGa9Tg09sZrwVc2aUxM3opbiAAVuktYflHfdYm2fKF214rMeF3QDdJJCdVD2/r2fDGmk4Wvmx74RBlFigtrKzcZIm3XsKtvZLC6m3Zq9HW+91glJIA5D2rcJMbx7AIpK/damtw95lytXVTZu+ZhpBGV+OiJTqA0DJ90uWZsumC1uEFh16/GuAt9xzZQpbRveWcfplHyOEMeRyHEV11StdQGpXU3Bk24uvldz/zrYuOkyn7juIp4vSSX1ZtwUlJa3c+BVWyJp+MyNnOWLL1l6tuxFzVtSYreroIaoLVo34SK13hHh1bJG06tn0yd5Loo9K92J3ARXNar5clTZEFuz+LjrP6lhJEMAGBiiZJAmFA8zQtUyCQcJbJ0woSsLLNA+lVL2OTrIyZhcjmNxW1bjJHbGB1u4EpElr2ruQnIvj91Z5JCnuKGT1ypNXdeaJYjrIub2aoSd/i/iP/rIk4kOaZBHFMJD3iKFxGiSAdOqDCWAeKBzHEJ948i/hj9AlVsDGo6urqocStf3GJkX1pL79qa3k3uXIfjlnTZ8OZKTahkZVGMzJjP9cK/G4LRFMiTD4Gpy7VNH4Sxs52d+raXyQmxlRQ4u/1isx0XQnNgD0GPvCEqw7Mlnj0FdnEPIofMPHb+FM3badl6qeeLbuQ1Vpjb6aOl7u7rPYZVwEQLabDNgb86wSWrMFZff1SUCLovK/25LqTDOq95GESHNYM91ry4dXA96EtAt3VaSuCtsg87se9ghZvMI1oa2eDkDME+ICY4MW1v9zfNQXHPCXO7iTvNWZaPm+BTk8Vpb278QkgZjbWyuVU7A1v62i4N5BwFTkH3tWKcgSStB3ZBn1nsXNWYyx2eNOtku2Y5nNalVFbporW94u1gC1W3fFyBqgno5j7obUcSyVn98WP2J3rEEffzCAAA 
13:03 (1.0.0) [Information] (52) Http Request Information:
Request Id: 27d75ce7-5369-4e18-ae83-a39ee0109ef1 Executing At: 17-01-2021 07:33:50 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
13:03 (1.0.0) [Information] (52) Get Customer Email a@gmail.com
13:03 (1.0.0) [Information] (52) Http Response Information:
Request Id: 27d75ce7-5369-4e18-ae83-a39ee0109ef1 Executed At: 17-01-2021 07:33:50 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
13:03 (1.0.0) [Information] (52) Http Request Information:
Request Id: 9057ed59-f1fb-4fd3-a289-975cdfacf621 Executing At: 17-01-2021 07:33:50 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetCustomerAvailableSlots Method Type: GET QueryString: ?pageNumber=0&pageSize=10&customerInfo=26eca53c21344dea874c99cc1df9ceef Request Body:  Compressed Body:  
13:03 (1.0.0) [Information] (52) Get all available slots for the customer
13:03 (1.0.0) [Information] (55) Http Response Information:
Request Id: 9057ed59-f1fb-4fd3-a289-975cdfacf621 Executed At: 17-01-2021 07:33:52 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetCustomerAvailableSlots Method Type: GET QueryString: ?pageNumber=0&pageSize=10&customerInfo=26eca53c21344dea874c99cc1df9ceef Response Status Code: 200 Response Body: {"customerModel":{"id":"26eca53c21344dea874c99cc1df9ceef","firstName":"MF","lastName":"ML","gender":"","email":""},"slotModelsInforamtion":[{"key":{"id":"97635c92-4941-4c21-a447-5a5905ae073e","title":"yuiy","createdBy":"","bookedBy":null,"timeZone":"India Standard Time","slotDate":"2021-01-22T18:30:00","slotStartTime":"00:00:00","slotEndTime":"00:20:00","slotDuration":"00:20:00"},"value":"T1R%2bERrUiqIPXun%2bfnvN9BteeSGIfXT2kYBxWoozGt0L5bu3CbsBEsSYUyU3LZy9f%2bMxuqNPUr5%2fqJo%2fATl75elGT%2b4DpzG80LW6pTMA91UsXsu8ZAbBVrrWNCDxgyLovPt5W%2fccATapLkJ1%2brMaspw%2bHzJNgItpkSU2Ab%2bJCXpoqfIYhT58imSFgfzU1hnMTenNRq%2fqq7AdYU7OXAq14fskFIPsXHDwa6RtHxdsbWONIenArKksNVyx8U3I9xx6bovG8BFgN5mLzIuF6vTkzGiWvDPOgASPOTA7vjfjHK6ZAg0BSC5LlQ%2bYEdJk2%2fQ1pwYt7FFEc1dNnXp5eM7Nw6n4F4OGaLm4IOpGZJG%2fTebWvNs63caEpHEZUA969rh7"},{"key":{"id":"e95551d8-85bf-4046-b1f3-720f1b299258","title":"yuiy","createdBy":"","bookedBy":null,"timeZone":"India Standard Time","slotDate":"2021-01-22T18:30:00","slotStartTime":"00:00:00","slotEndTime":"00:20:00","slotDuration":"00:20:00"},"value":"T1R%2bERrUiqJ4pYoR%2fjZxlwQlxcTqIsoqaH7eLNRp3y59WWysh%2f%2flwoZ3mFqz46qExaplwJrB83V%2fqJo%2fATl75elGT%2b4DpzG80LW6pTMA91UsXsu8ZAbBVrrWNCDxgyLovPt5W%2fccATapLkJ1%2brMaspw%2bHzJNgItpkSU2Ab%2bJCXpoqfIYhT58imSFgfzU1hnMTenNRq%2fqq7AdYU7OXAq14fskFIPsXHDwa6RtHxdsbWONIenArKksNVyx8U3I9xx6bovG8BFgN5mLzIuF6vTkzGiWvDPOgASPOTA7vjfjHK6ZAg0BSC5LlQ%2bYEdJk2%2fQ1pwYt7FFEc1dNnXp5eM7Nw6n4F4OGaLm4IOpGZJG%2fTebWvNs63caEpHEZUA969rh7"},{"key":{"id":"f89d05dd-f454-47ee-a59f-bd95e45933f3","title":"title","createdBy":"","bookedBy":null,"timeZone":"India Standard Time","slotDate":"2021-01-22T18:30:00","slotStartTime":"00:00:00","slotEndTime":"00:20:00","slotDuration":"00:20:00"},"value":"T1R%2bERrUiqIuBgxTG7F3HW7QoeNjrLGsrp0RyTCGaxQ5%2bwT8qbAimllx1xkCGlWzI6IqleU9VXJG9pN0V6xsNORBKS9%2f2n8XORSDPQxD6qV2VXteUucmbhL7hUAasdt5cO%2bxsWycCryErUgUW7TcUqLbkNgq%2fRzMSoanX1cD8uNJu4vOXjinooB%2f%2fcf6GW9Athpl8VMkp4aXcVM1oU2JjTpXvVGE50rpgm85KnNVR7tsanoqiU%2f0eN5ZOuXSX%2b37grwzKFOedt36CNqdsFOEmw%2bYEdJk2%2fQ1ogtJPWl6g1F2LiCLpOu2mWFRgX9keXOl0tpAIh588Mu2D0h2oOvBd3kO4Q%2fQM23ogpm8mngDrNUlKVN6nsE%2bfBJ50qzuGrs%2f"}]} Compressed Body: 8wgAAB+LCAAAAAAAAArtVcmuozgU/ZVSpNo1EpMZagdJIPAIZIBA0q8XBgwhDGZMIKX693aSp+5Xrd72qlpC4HvOPfaRfbmefX+fRUPX4xK1axyj4n32jUBZTL7vM1ZAEQRcxDIcz8cISiIfyXIUMXEiRwgl77Pf3mdJ1na9DUv0lKy1J1jAz5j1xFJUxah9Is8YlTArPsIfJO4K3D89dEaV4BaWfYYrwv9ODOVo+smZLAociGSW4mWeoXjikII8L1IAApkGENEiR9Ymk/ZZX7xcTEM2PaGoRbBHsTr9bSXEOP9AqqEonroSnXD1khpVnMEv+x5WMWzjLy7hnrKH4wWZ67VZNDFBMxTLuoz0jaO/0fRfSUTa9i8ZyaQf3Gd6WcWfSfYncjG08GMnPrOPHbvCYnipXGb3lQ2Xu9bLGmMTDBWJkupqy2qP0F43ksBl86M6+hjf9Z62QDhw87BTl93+6E0eZ50mOSGa9Tg09sZrwVc2aUxM3opbiAAVuktYflHfdYm2fKF214rMeF3QDdJJCdVD2/r2fDGmk4Wvmx74RBlFigtrKzcZIm3XsKtvZLC6m3Zq9HW+91glJIA5D2rcJMbx7AIpK/damtw95lytXVTZu+ZhpBGV+OiJTqA0DJ90uWZsumC1uEFh16/GuAt9xzZQpbRveWcfplHyOEMeRyHEV11StdQGpXU3Bk24uvldz/zrYuOkyn7juIp4vSSX1ZtwUlJa3c+BVWyJp+MyNnOWLL1l6tuxFzVtSYreroIaoLVo34SK13hHh1bJG06tn0yd5Loo9K92J3ARXNar5clTZEFuz+LjrP6lhJEMAGBiiZJAmFA8zQtUyCQcJbJ0woSsLLNA+lVL2OTrIyZhcjmNxW1bjJHbGB1u4EpElr2ruQnIvj91Z5JCnuKGT1ypNXdeaJYjrIub2aoSd/i/iP/rIk4kOaZBHFMJD3iKFxGiSAdOqDCWAeKBzHEJ948i/hj9AlVsDGo6urqocStf3GJkX1pL79qa3k3uXIfjlnTZ8OZKTahkZVGMzJjP9cK/G4LRFMiTD4Gpy7VNH4Sxs52d+raXyQmxlRQ4u/1isx0XQnNgD0GPvCEqw7Mlnj0FdnEPIofMPHb+FM3badl6qeeLbuQ1Vpjb6aOl7u7rPYZVwEQLabDNgb86wSWrMFZff1SUCLovK/25LqTDOq95GESHNYM91ry4dXA96EtAt3VaSuCtsg87se9ghZvMI1oa2eDkDME+ICY4MW1v9zfNQXHPCXO7iTvNWZaPm+BTk8Vpb278QkgZjbWyuVU7A1v62i4N5BwFTkH3tWKcgSStB3ZBn1nsXNWYyx2eNOtku2Y5nNalVFbporW94u1gC1W3fFyBqgno5j7obUcSyVn98WP2J3rEEffzCAAA 
15:58 (1.0.0) [Information] (1) Starting web host
15:58 (1.0.0) [Information] (5) Http Request Information:
Request Id: d676061c-db8d-43ca-a5fa-6a60af4f9533 Executing At: 17-01-2021 11:58:19 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Request Body:  Compressed Body:  
15:58 (1.0.0) [Information] (5) Http Response Information:
Request Id: d676061c-db8d-43ca-a5fa-6a60af4f9533 Executed At: 17-01-2021 11:58:19 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Response Status Code: 200 Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>
      html
      {
        box-sizing: border-box;
        overflow: -moz-scrollbars-vertical;
        overflow-y: scroll;
      }

      *,
      *:before,
      *:after
      {
        box-sizing: inherit;
      }

      body
      {
        margin:0;
        background: #fafafa;
      }
    </style>
    
    
  </head>

  <body>
    <div id="swagger-ui"></div>

    <script src="./swagger-ui-bundle.js" charset="UTF-8"> </script>
    <script src="./swagger-ui-standalone-preset.js" charset="UTF-8"> </script>
    <script>
window.onload = function() {
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = undefined;
  }
  var urls = [{"url":"/swagger/v1/swagger.json","name":"v1"}];

  const disableTryItOutPlugin = function() {
    return {
      statePlugins: {
      spec: {
        wrapSelectors: {
          allowTryItOutFor: function() {
            return function() {
                return true;
              }
            }
          }
        }
      }
    }
  }

  // Build a system
  var ui = SwaggerUIBundle({
    url: url,
    urls: urls,  
    validatorUrl: null,
    oauth2RedirectUrl: window.location.origin + "/swagger/oauth2-redirect.html",

    docExpansion: "none", 
    operationsSorter: "none", 
    defaultModelsExpandDepth: 1, 
    defaultModelExpandDepth: 1, 
    tagsSorter: "none", 
    
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
        SwaggerUIBundle.plugins.DownloadUrl,
        disableTryItOutPlugin
    ],
    layout: "StandaloneLayout"
  });

  if ("client_id") {
    ui.initOAuth({
      clientId: "client_id",
      clientSecret: "client_secret",
      realm: "realm",
      appName: "app_name",
      scopeSeparator: " ",
      additionalQueryStringParams: {},
      usePkceWithAuthorizationCodeGrant: false
    });
  }

  window.ui = ui;
}
    </script>
    
  </body>
</html>
 Compressed Body: KQoAAB+LCAAAAAAAAAqlVoFu2zYQ/RVWBdKkjaQ5BYpBcwKsSbsFSBe3jjEMUVbQ0lniQpECSdlxivz7jhQlK4mKYpgNWMe7x0fq+O7oYPoiDMnvV58uyEoqog01LCM500axZWOYFGTZiJwDPhjPSRiepGL64uzy9Oqv2QdSmopbh30STkVxnAYg0gB9hExLoLmz0K7AUJKVVGkwCFpcfQx/9jiMGmY4nMw3tChAkcX5NG49PsyZuCUKOE7UZstBlwAmDYjZ1oA+A3cmzrRGT6lghZ4o1i1X2LCojYxwsUyKHQuraAFxLYohzYquLSp8e3T39ihqg5rdg8ao8+E4/n/Uk3d3k3dPqJ1vSO1e2w+IS3tnf+sMQpbyLkQGJooEbZXj66Prlx1ArkGtuNwkJKzkfagzJTlf4pmEGMCDp3wEHG4T0iL74EMqOvP1YW8lS0ANwcBBVwbUDzbKRAmKmTHupcy3I7Mrqgomkp8Ge13S7LZQEpWakJcrar9DQpfCeJjD3e809jJ1A7tkl/OcrQnLreZ6LaFipzH6PdweTKZYbYhW2RPZhW3dRP9Y8T0Xvt2Pm3ryQyIsSpFTLgWEtQKk+Y+cONowkctNJAWXNCfHZNWIzBb3/kGb2DVVpFEcIx7JZYadQIpIA1VZGVXUZOV+jJjj/eu/927eHMQHLsNsRfbtzL09SxBxEIUpyQmZeGbieXPIZA6LL+ensqrxVYSx064nNy3NAwGu4fEUzB+smIC8RQz2qTF6/S0N0EyDJA26bMXrSWdijmwFHqaBoBU41HqSBg83SGaZsPK0sY2OLjlcqe25uWzMjDeorJH8ECxr0yixk6HtlNDidTJw15ANhoRsFK3nwCEzUg2B9kM5lle39kepkpF1u49f//uAAcioBgbF8agMRoeDQW96wz18TcYxee9uAUr0Vhuo+iNhmDPfvRfn753w93dnmdgf3xbs6bmxPuyqcE05yynmZ2GhouEdVtLGlEdfIGcK8+eiT+UpFbMn9oYMRNBOC5WfF7luiUrwJZvL7MNdTYXG+QnOE6hGDPvNyBqUo9ZzqbB7PUegKGnDzSeUM9eOKT+D2pQJmYxBxhGGFt9doNtm9ZVhO3v1ctcKXvnE5AD1BV42roHa0/b+tj1gfq+7U3xyKJFHRLRm+vAZaN53mpnDtYCbjr1Te88+wt9iojO5cb0GD61fhoyX2+NFON3Kxtik7DZz4Xxp4KRo+0XXeNIg4wxbCSYqDXYNh0VMMHP5K8qgUyEWvEOeY0Yfzep31/rmkGERDTDaOdIdTgHllQU4YxCgdf0HthobQvNr23b6qM5QWXOoKarLVjo28OHcPGdWdJR/bkBt5/jvSxQzxFa2Zzz0uEbD7DaDP5kp7duh+u+dWE9Rab8pKnDnK4qN1Neu761twnzpuFptGEZ2F+Pw0mjvRH8P4uXY/sML/gWWz4gVKQoAAA== 
15:58 (1.0.0) [Information] (4) Http Request Information:
Request Id: 916167cc-c5dd-43ff-aafc-4f86055eaeac Executing At: 17-01-2021 11:58:20 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Request Body:  Compressed Body:  
15:58 (1.0.0) [Information] (4) Http Response Information:
Request Id: 916167cc-c5dd-43ff-aafc-4f86055eaeac Executed At: 17-01-2021 11:58:21 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Response Status Code: 200 Response Body: {
  "x-generator": "NSwag v13.9.4.0 (NJsonSchema v10.3.1.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Bookmyslot Customer API",
    "description": "Bookmyslot Customer API to manage customer data",
    "termsOfService": "None",
    "contact": {
      "name": "TA",
      "email": ""
    },
    "license": {
      "name": ""
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://localhost:44382"
    }
  ],
  "paths": {
    "/api/v1/CustomerBookedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer booked slots",
        "operationId": "CustomerBookedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer booked slots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer completed slots",
        "operationId": "CustomerBookedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer completed slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer cancelled slots",
        "operationId": "CustomerBookedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer cancelled slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customers",
        "operationId": "Customer_Get",
        "responses": {
          "200": {
            "description": "Returns all customers"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create new customer",
        "operationId": "Customer_Post",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns email id of created customer"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update existing customer",
        "operationId": "Customer_Put",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer/{email}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customer by email",
        "operationId": "Customer_Get2",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "description": "customer email id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer details"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerYetToBeBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer YetToBeBookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerYetToBeBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer  YetToBeBookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer BookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer BookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CompletedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CompletedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CancelledSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CancelledSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetDistinctCustomersNearestSlotFromToday",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetCustomerAvailableSlots": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetCustomerAvailableSlots",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          },
          {
            "name": "customerInfo",
            "in": "query",
            "description": "customer info",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/email/ResendSlotMeetingInformation": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Resend slot information email to the customers",
        "operationId": "Email_ResendSlotMeetingInformation",
        "requestBody": {
          "x-name": "resendSlotInformation",
          "description": "slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendSlotInformation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot": {
      "get": {
        "tags": [
          "Slot"
        ],
        "summary": "Gets slot",
        "operationId": "Slot_Get",
        "parameters": [
          {
            "name": "slotId",
            "in": "query",
            "description": "slot id",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot"
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "slot id inappropriate",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Create new slot for the user",
        "operationId": "Slot_Post",
        "requestBody": {
          "x-name": "slotModel",
          "description": "slot model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns slot id of created slot"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot/CancelSlot": {
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Cancel User slot",
        "operationId": "Slot_CancelSlot",
        "requestBody": {
          "x-name": "cancelSlot",
          "description": "user slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelSlot"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/SlotScheduler": {
      "post": {
        "tags": [
          "SlotScheduler"
        ],
        "operationId": "SlotScheduler_Post",
        "requestBody": {
          "x-name": "slotSchedulerModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotSchedulerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {}
          }
        }
      },
      "CustomerModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "firstName",
          "lastName",
          "gender"
        ],
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "minLength": 1
          },
          "lastName": {
            "type": "string",
            "minLength": 1
          },
          "gender": {
            "type": "string",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ResendSlotInformation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "resendSlotModel": {
            "type": "string",
            "nullable": true
          },
          "resendTo": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "title",
          "timeZone",
          "slotDate",
          "slotStartTime",
          "slotEndTime"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "default": "00000000-0000-0000-0000-000000000000"
          },
          "title": {
            "type": "string",
            "minLength": 1
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "default": "India Standard Time",
            "minLength": 1
          },
          "slotDate": {
            "type": "string",
            "format": "date-time",
            "minLength": 1
          },
          "slotDateUtc": {
            "type": "string",
            "format": "date-time"
          },
          "slotStartTime": {
            "type": "string",
            "format": "time-span",
            "default": "10:00:00",
            "minLength": 1
          },
          "slotEndTime": {
            "type": "string",
            "format": "time-span",
            "default": "11:00:00",
            "minLength": 1
          },
          "slotDuration": {
            "type": "string",
            "format": "time-span"
          }
        }
      },
      "CancelSlot": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotKey": {
            "type": "string",
            "nullable": true
          },
          "cancelledBy": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotSchedulerModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotModelKey": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          }
        }
      }
    }
  }
} Compressed Body: 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 
15:58 (1.0.0) [Information] (6) Http Request Information:
Request Id: 28afa606-5be1-4724-99be-2984b1efedcd Executing At: 17-01-2021 11:58:53 Schema:https Host: localhost:44382 Path: /api/v1/Slot Method Type: POST QueryString:  Request Body: {"id":"00000000-0000-0000-0000-000000000000","title":"string","createdBy":"string","bookedBy":"string","timeZone":"India Standard Time","slotDate":"2021-01-18T11:58:27.653Z","slotDateUtc":"2021-01-17T11:58:27.653Z","slotStartTime":"10:00:00","slotEndTime":"11:00:00","slotDuration":"string"} Compressed Body: TQEAAB+LCAAAAAAAAAp1j80KwjAMgF9l5OykmcyNHmUePDsvo5e6FinOFrp4EPHdrZ0/bMwQcsj3JSFwF2CUAC6AvSOdKZ8QsBBAhjodR3ryxp5is/Vaklab2xQcnTvP9clcdOPssGhnlZHJnqRV0qukDixKfeeoCnujlLEMU4YpljUiz0ueFct1vmpG5oHasVz8kcMxT8OhoCPj7JVfvLXqB3ECq6uXZJwd/fSAJ+kSav9NAQAA 
15:59 (1.0.0) [Information] (6) Http Response Information:
Request Id: 28afa606-5be1-4724-99be-2984b1efedcd Executed At: 17-01-2021 11:59:21 Schema:https Host: localhost:44382 Path: /api/v1/Slot Method Type: POST QueryString:  Response Status Code: 400 Response Body: ["slot start date cannot be less than todays date"] Compressed Body: NwAAAB+LCAAAAAAAAApTio5RKs7JL1EoLkksKlFISSxJVUhOzMsDiiSlKuSkFhcrlGQk5imU5KckVhaD5WOUYpUAX4pkjTcAAAA= 
15:59 (1.0.0) [Information] (6) Http Request Information:
Request Id: a38a7829-0924-43dc-b85b-b36eae88e7e5 Executing At: 17-01-2021 11:59:25 Schema:https Host: localhost:44382 Path: /api/v1/Slot Method Type: POST QueryString:  Request Body: {"id":"00000000-0000-0000-0000-000000000000","title":"string","createdBy":"string","bookedBy":"string","timeZone":"India Standard Time","slotDate":"2021-01-18T11:58:27.653Z","slotDateUtc":"2021-01-17T11:58:27.653Z","slotStartTime":"10:00:00","slotEndTime":"11:00:00","slotDuration":"string"} Compressed Body: TQEAAB+LCAAAAAAAAAp1j80KwjAMgF9l5OykmcyNHmUePDsvo5e6FinOFrp4EPHdrZ0/bMwQcsj3JSFwF2CUAC6AvSOdKZ8QsBBAhjodR3ryxp5is/Vaklab2xQcnTvP9clcdOPssGhnlZHJnqRV0qukDixKfeeoCnujlLEMU4YpljUiz0ueFct1vmpG5oHasVz8kcMxT8OhoCPj7JVfvLXqB3ECq6uXZJwd/fSAJ+kSav9NAQAA 
16:00 (1.0.0) [Information] (1) Starting web host
16:00 (1.0.0) [Information] (8) Http Request Information:
Request Id: e42e6c9f-21b3-4390-aaca-5ba8eadc1948 Executing At: 17-01-2021 12:00:51 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:00 (1.0.0) [Information] (8) Http Response Information:
Request Id: e42e6c9f-21b3-4390-aaca-5ba8eadc1948 Executed At: 17-01-2021 12:00:51 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Response Status Code: 200 Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>
      html
      {
        box-sizing: border-box;
        overflow: -moz-scrollbars-vertical;
        overflow-y: scroll;
      }

      *,
      *:before,
      *:after
      {
        box-sizing: inherit;
      }

      body
      {
        margin:0;
        background: #fafafa;
      }
    </style>
    
    
  </head>

  <body>
    <div id="swagger-ui"></div>

    <script src="./swagger-ui-bundle.js" charset="UTF-8"> </script>
    <script src="./swagger-ui-standalone-preset.js" charset="UTF-8"> </script>
    <script>
window.onload = function() {
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = undefined;
  }
  var urls = [{"url":"/swagger/v1/swagger.json","name":"v1"}];

  const disableTryItOutPlugin = function() {
    return {
      statePlugins: {
      spec: {
        wrapSelectors: {
          allowTryItOutFor: function() {
            return function() {
                return true;
              }
            }
          }
        }
      }
    }
  }

  // Build a system
  var ui = SwaggerUIBundle({
    url: url,
    urls: urls,  
    validatorUrl: null,
    oauth2RedirectUrl: window.location.origin + "/swagger/oauth2-redirect.html",

    docExpansion: "none", 
    operationsSorter: "none", 
    defaultModelsExpandDepth: 1, 
    defaultModelExpandDepth: 1, 
    tagsSorter: "none", 
    
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
        SwaggerUIBundle.plugins.DownloadUrl,
        disableTryItOutPlugin
    ],
    layout: "StandaloneLayout"
  });

  if ("client_id") {
    ui.initOAuth({
      clientId: "client_id",
      clientSecret: "client_secret",
      realm: "realm",
      appName: "app_name",
      scopeSeparator: " ",
      additionalQueryStringParams: {},
      usePkceWithAuthorizationCodeGrant: false
    });
  }

  window.ui = ui;
}
    </script>
    
  </body>
</html>
 Compressed Body: KQoAAB+LCAAAAAAAAAqlVoFu2zYQ/RVWBdKkjaQ5BYpBcwKsSbsFSBe3jjEMUVbQ0lniQpECSdlxivz7jhQlK4mKYpgNWMe7x0fq+O7oYPoiDMnvV58uyEoqog01LCM500axZWOYFGTZiJwDPhjPSRiepGL64uzy9Oqv2QdSmopbh30STkVxnAYg0gB9hExLoLmz0K7AUJKVVGkwCFpcfQx/9jiMGmY4nMw3tChAkcX5NG49PsyZuCUKOE7UZstBlwAmDYjZ1oA+A3cmzrRGT6lghZ4o1i1X2LCojYxwsUyKHQuraAFxLYohzYquLSp8e3T39ihqg5rdg8ao8+E4/n/Uk3d3k3dPqJ1vSO1e2w+IS3tnf+sMQpbyLkQGJooEbZXj66Prlx1ArkGtuNwkJKzkfagzJTlf4pmEGMCDp3wEHG4T0iL74EMqOvP1YW8lS0ANwcBBVwbUDzbKRAmKmTHupcy3I7Mrqgomkp8Ge13S7LZQEpWakJcrar9DQpfCeJjD3e809jJ1A7tkl/OcrQnLreZ6LaFipzH6PdweTKZYbYhW2RPZhW3dRP9Y8T0Xvt2Pm3ryQyIsSpFTLgWEtQKk+Y+cONowkctNJAWXNCfHZNWIzBb3/kGb2DVVpFEcIx7JZYadQIpIA1VZGVXUZOV+jJjj/eu/927eHMQHLsNsRfbtzL09SxBxEIUpyQmZeGbieXPIZA6LL+ensqrxVYSx064nNy3NAwGu4fEUzB+smIC8RQz2qTF6/S0N0EyDJA26bMXrSWdijmwFHqaBoBU41HqSBg83SGaZsPK0sY2OLjlcqe25uWzMjDeorJH8ECxr0yixk6HtlNDidTJw15ANhoRsFK3nwCEzUg2B9kM5lle39kepkpF1u49f//uAAcioBgbF8agMRoeDQW96wz18TcYxee9uAUr0Vhuo+iNhmDPfvRfn753w93dnmdgf3xbs6bmxPuyqcE05yynmZ2GhouEdVtLGlEdfIGcK8+eiT+UpFbMn9oYMRNBOC5WfF7luiUrwJZvL7MNdTYXG+QnOE6hGDPvNyBqUo9ZzqbB7PUegKGnDzSeUM9eOKT+D2pQJmYxBxhGGFt9doNtm9ZVhO3v1ctcKXvnE5AD1BV42roHa0/b+tj1gfq+7U3xyKJFHRLRm+vAZaN53mpnDtYCbjr1Te88+wt9iojO5cb0GD61fhoyX2+NFON3Kxtik7DZz4Xxp4KRo+0XXeNIg4wxbCSYqDXYNh0VMMHP5K8qgUyEWvEOeY0Yfzep31/rmkGERDTDaOdIdTgHllQU4YxCgdf0HthobQvNr23b6qM5QWXOoKarLVjo28OHcPGdWdJR/bkBt5/jvSxQzxFa2Zzz0uEbD7DaDP5kp7duh+u+dWE9Rab8pKnDnK4qN1Neu761twnzpuFptGEZ2F+Pw0mjvRH8P4uXY/sML/gWWz4gVKQoAAA== 
16:00 (1.0.0) [Information] (8) Http Request Information:
Request Id: 7d673a3d-c974-4555-99f2-3e024883e585 Executing At: 17-01-2021 12:00:52 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:00 (1.0.0) [Information] (8) Http Response Information:
Request Id: 7d673a3d-c974-4555-99f2-3e024883e585 Executed At: 17-01-2021 12:00:53 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Response Status Code: 200 Response Body: {
  "x-generator": "NSwag v13.9.4.0 (NJsonSchema v10.3.1.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Bookmyslot Customer API",
    "description": "Bookmyslot Customer API to manage customer data",
    "termsOfService": "None",
    "contact": {
      "name": "TA",
      "email": ""
    },
    "license": {
      "name": ""
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://localhost:44382"
    }
  ],
  "paths": {
    "/api/v1/CustomerBookedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer booked slots",
        "operationId": "CustomerBookedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer booked slots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer completed slots",
        "operationId": "CustomerBookedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer completed slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer cancelled slots",
        "operationId": "CustomerBookedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer cancelled slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customers",
        "operationId": "Customer_Get",
        "responses": {
          "200": {
            "description": "Returns all customers"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create new customer",
        "operationId": "Customer_Post",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns email id of created customer"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update existing customer",
        "operationId": "Customer_Put",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer/{email}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customer by email",
        "operationId": "Customer_Get2",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "description": "customer email id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer details"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerYetToBeBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer YetToBeBookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerYetToBeBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer  YetToBeBookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer BookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer BookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CompletedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CompletedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CancelledSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CancelledSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetDistinctCustomersNearestSlotFromToday",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetCustomerAvailableSlots": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetCustomerAvailableSlots",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          },
          {
            "name": "customerInfo",
            "in": "query",
            "description": "customer info",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/email/ResendSlotMeetingInformation": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Resend slot information email to the customers",
        "operationId": "Email_ResendSlotMeetingInformation",
        "requestBody": {
          "x-name": "resendSlotInformation",
          "description": "slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendSlotInformation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot": {
      "get": {
        "tags": [
          "Slot"
        ],
        "summary": "Gets slot",
        "operationId": "Slot_Get",
        "parameters": [
          {
            "name": "slotId",
            "in": "query",
            "description": "slot id",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot"
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "slot id inappropriate",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Create new slot for the user",
        "operationId": "Slot_Post",
        "requestBody": {
          "x-name": "slotModel",
          "description": "slot model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns slot id of created slot"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot/CancelSlot": {
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Cancel User slot",
        "operationId": "Slot_CancelSlot",
        "requestBody": {
          "x-name": "cancelSlot",
          "description": "user slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelSlot"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/SlotScheduler": {
      "post": {
        "tags": [
          "SlotScheduler"
        ],
        "operationId": "SlotScheduler_Post",
        "requestBody": {
          "x-name": "slotSchedulerModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotSchedulerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {}
          }
        }
      },
      "CustomerModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "firstName",
          "lastName",
          "gender"
        ],
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "minLength": 1
          },
          "lastName": {
            "type": "string",
            "minLength": 1
          },
          "gender": {
            "type": "string",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ResendSlotInformation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "resendSlotModel": {
            "type": "string",
            "nullable": true
          },
          "resendTo": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "title",
          "timeZone",
          "slotDate",
          "slotStartTime",
          "slotEndTime"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "default": "00000000-0000-0000-0000-000000000000"
          },
          "title": {
            "type": "string",
            "minLength": 1
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "default": "India Standard Time",
            "minLength": 1
          },
          "slotDate": {
            "type": "string",
            "format": "date-time",
            "minLength": 1
          },
          "slotDateUtc": {
            "type": "string",
            "format": "date-time"
          },
          "slotStartTime": {
            "type": "string",
            "format": "time-span",
            "default": "10:00:00",
            "minLength": 1
          },
          "slotEndTime": {
            "type": "string",
            "format": "time-span",
            "default": "11:00:00",
            "minLength": 1
          },
          "slotDuration": {
            "type": "string",
            "format": "time-span"
          }
        }
      },
      "CancelSlot": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotKey": {
            "type": "string",
            "nullable": true
          },
          "cancelledBy": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotSchedulerModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotModelKey": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          }
        }
      }
    }
  }
} Compressed Body: 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 
16:01 (1.0.0) [Information] (5) Http Request Information:
Request Id: 8363dbd2-4d0c-44e0-8393-c07a4ac38b56 Executing At: 17-01-2021 12:01:05 Schema:https Host: localhost:44382 Path: /api/v1/Slot Method Type: POST QueryString:  Request Body: {"id":"00000000-0000-0000-0000-000000000000","title":"string","createdBy":"string","bookedBy":"string","timeZone":"India Standard Time","slotDate":"2021-01-18T12:00:59.318Z","slotDateUtc":"2021-01-17T12:00:59.318Z","slotStartTime":"10:00:00","slotEndTime":"11:00:00","slotDuration":"string"} Compressed Body: TQEAAB+LCAAAAAAAAAp1j8EOgjAMhl+F9CxmnTEiR4MHz+KF7DLZYhZhS0Y9GOO7OwbGQLCHHvp97Z/CS4BRAnIBbKx0oX1LwEoAGWp0XOnIG3uLw9prSVodnnNwde6+NCfT6srZ4dDJKiOTM0mrpFdJGViUusZREe5GiTOOKcMUsxJ5zli+3a83mFUT80L1VN79kUOYpyEo6Mh6Z3ywx0erfhBnsHh4ScbZyU9v+ADTqToTTQEAAA== 
16:02 (1.0.0) [Information] (5) Http Response Information:
Request Id: 8363dbd2-4d0c-44e0-8393-c07a4ac38b56 Executed At: 17-01-2021 12:02:55 Schema:https Host: localhost:44382 Path: /api/v1/Slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "b9976f5f-07bc-4225-ae6e-7d845aa9095a" Compressed Body: KgAAAB+LCAAAAAAAAApTilFKsrQ0N0szTdM1ME9K1jUxMjLVTUw1S9U1T7EwMU1MtDSwNE2MUVICAJoVYf8qAAAA 
16:05 (1.0.0) [Information] (1) Starting web host
16:05 (1.0.0) [Information] (4) Http Request Information:
Request Id: 72de95bc-75a1-4ecb-8b19-e9e10f0ad389 Executing At: 17-01-2021 12:05:13 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:05 (1.0.0) [Information] (4) Http Response Information:
Request Id: 72de95bc-75a1-4ecb-8b19-e9e10f0ad389 Executed At: 17-01-2021 12:05:14 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Response Status Code: 200 Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>
      html
      {
        box-sizing: border-box;
        overflow: -moz-scrollbars-vertical;
        overflow-y: scroll;
      }

      *,
      *:before,
      *:after
      {
        box-sizing: inherit;
      }

      body
      {
        margin:0;
        background: #fafafa;
      }
    </style>
    
    
  </head>

  <body>
    <div id="swagger-ui"></div>

    <script src="./swagger-ui-bundle.js" charset="UTF-8"> </script>
    <script src="./swagger-ui-standalone-preset.js" charset="UTF-8"> </script>
    <script>
window.onload = function() {
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = undefined;
  }
  var urls = [{"url":"/swagger/v1/swagger.json","name":"v1"}];

  const disableTryItOutPlugin = function() {
    return {
      statePlugins: {
      spec: {
        wrapSelectors: {
          allowTryItOutFor: function() {
            return function() {
                return true;
              }
            }
          }
        }
      }
    }
  }

  // Build a system
  var ui = SwaggerUIBundle({
    url: url,
    urls: urls,  
    validatorUrl: null,
    oauth2RedirectUrl: window.location.origin + "/swagger/oauth2-redirect.html",

    docExpansion: "none", 
    operationsSorter: "none", 
    defaultModelsExpandDepth: 1, 
    defaultModelExpandDepth: 1, 
    tagsSorter: "none", 
    
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
        SwaggerUIBundle.plugins.DownloadUrl,
        disableTryItOutPlugin
    ],
    layout: "StandaloneLayout"
  });

  if ("client_id") {
    ui.initOAuth({
      clientId: "client_id",
      clientSecret: "client_secret",
      realm: "realm",
      appName: "app_name",
      scopeSeparator: " ",
      additionalQueryStringParams: {},
      usePkceWithAuthorizationCodeGrant: false
    });
  }

  window.ui = ui;
}
    </script>
    
  </body>
</html>
 Compressed Body: KQoAAB+LCAAAAAAAAAqlVoFu2zYQ/RVWBdKkjaQ5BYpBcwKsSbsFSBe3jjEMUVbQ0lniQpECSdlxivz7jhQlK4mKYpgNWMe7x0fq+O7oYPoiDMnvV58uyEoqog01LCM500axZWOYFGTZiJwDPhjPSRiepGL64uzy9Oqv2QdSmopbh30STkVxnAYg0gB9hExLoLmz0K7AUJKVVGkwCFpcfQx/9jiMGmY4nMw3tChAkcX5NG49PsyZuCUKOE7UZstBlwAmDYjZ1oA+A3cmzrRGT6lghZ4o1i1X2LCojYxwsUyKHQuraAFxLYohzYquLSp8e3T39ihqg5rdg8ao8+E4/n/Uk3d3k3dPqJ1vSO1e2w+IS3tnf+sMQpbyLkQGJooEbZXj66Prlx1ArkGtuNwkJKzkfagzJTlf4pmEGMCDp3wEHG4T0iL74EMqOvP1YW8lS0ANwcBBVwbUDzbKRAmKmTHupcy3I7Mrqgomkp8Ge13S7LZQEpWakJcrar9DQpfCeJjD3e809jJ1A7tkl/OcrQnLreZ6LaFipzH6PdweTKZYbYhW2RPZhW3dRP9Y8T0Xvt2Pm3ryQyIsSpFTLgWEtQKk+Y+cONowkctNJAWXNCfHZNWIzBb3/kGb2DVVpFEcIx7JZYadQIpIA1VZGVXUZOV+jJjj/eu/927eHMQHLsNsRfbtzL09SxBxEIUpyQmZeGbieXPIZA6LL+ensqrxVYSx064nNy3NAwGu4fEUzB+smIC8RQz2qTF6/S0N0EyDJA26bMXrSWdijmwFHqaBoBU41HqSBg83SGaZsPK0sY2OLjlcqe25uWzMjDeorJH8ECxr0yixk6HtlNDidTJw15ANhoRsFK3nwCEzUg2B9kM5lle39kepkpF1u49f//uAAcioBgbF8agMRoeDQW96wz18TcYxee9uAUr0Vhuo+iNhmDPfvRfn753w93dnmdgf3xbs6bmxPuyqcE05yynmZ2GhouEdVtLGlEdfIGcK8+eiT+UpFbMn9oYMRNBOC5WfF7luiUrwJZvL7MNdTYXG+QnOE6hGDPvNyBqUo9ZzqbB7PUegKGnDzSeUM9eOKT+D2pQJmYxBxhGGFt9doNtm9ZVhO3v1ctcKXvnE5AD1BV42roHa0/b+tj1gfq+7U3xyKJFHRLRm+vAZaN53mpnDtYCbjr1Te88+wt9iojO5cb0GD61fhoyX2+NFON3Kxtik7DZz4Xxp4KRo+0XXeNIg4wxbCSYqDXYNh0VMMHP5K8qgUyEWvEOeY0Yfzep31/rmkGERDTDaOdIdTgHllQU4YxCgdf0HthobQvNr23b6qM5QWXOoKarLVjo28OHcPGdWdJR/bkBt5/jvSxQzxFa2Zzz0uEbD7DaDP5kp7duh+u+dWE9Rab8pKnDnK4qN1Neu761twnzpuFptGEZ2F+Pw0mjvRH8P4uXY/sML/gWWz4gVKQoAAA== 
16:05 (1.0.0) [Information] (5) Http Request Information:
Request Id: 749455ed-80d0-41b0-919e-7dc95b586d1a Executing At: 17-01-2021 12:05:14 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:05 (1.0.0) [Information] (5) Http Response Information:
Request Id: 749455ed-80d0-41b0-919e-7dc95b586d1a Executed At: 17-01-2021 12:05:15 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Response Status Code: 200 Response Body: {
  "x-generator": "NSwag v13.9.4.0 (NJsonSchema v10.3.1.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Bookmyslot Customer API",
    "description": "Bookmyslot Customer API to manage customer data",
    "termsOfService": "None",
    "contact": {
      "name": "TA",
      "email": ""
    },
    "license": {
      "name": ""
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://localhost:44382"
    }
  ],
  "paths": {
    "/api/v1/CustomerBookedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer booked slots",
        "operationId": "CustomerBookedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer booked slots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer completed slots",
        "operationId": "CustomerBookedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer completed slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer cancelled slots",
        "operationId": "CustomerBookedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer cancelled slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customers",
        "operationId": "Customer_Get",
        "responses": {
          "200": {
            "description": "Returns all customers"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create new customer",
        "operationId": "Customer_Post",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns email id of created customer"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update existing customer",
        "operationId": "Customer_Put",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer/{email}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customer by email",
        "operationId": "Customer_Get2",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "description": "customer email id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer details"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerYetToBeBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer YetToBeBookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerYetToBeBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer  YetToBeBookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer BookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer BookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CompletedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CompletedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CancelledSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CancelledSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetDistinctCustomersNearestSlotFromToday",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetCustomerAvailableSlots": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetCustomerAvailableSlots",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          },
          {
            "name": "customerInfo",
            "in": "query",
            "description": "customer info",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/email/ResendSlotMeetingInformation": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Resend slot information email to the customers",
        "operationId": "Email_ResendSlotMeetingInformation",
        "requestBody": {
          "x-name": "resendSlotInformation",
          "description": "slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendSlotInformation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot": {
      "get": {
        "tags": [
          "Slot"
        ],
        "summary": "Gets slot",
        "operationId": "Slot_Get",
        "parameters": [
          {
            "name": "slotId",
            "in": "query",
            "description": "slot id",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot"
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "slot id inappropriate",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Create new slot for the user",
        "operationId": "Slot_Post",
        "requestBody": {
          "x-name": "slotModel",
          "description": "slot model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns slot id of created slot"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot/CancelSlot": {
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Cancel User slot",
        "operationId": "Slot_CancelSlot",
        "requestBody": {
          "x-name": "cancelSlot",
          "description": "user slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelSlot"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/SlotScheduler": {
      "post": {
        "tags": [
          "SlotScheduler"
        ],
        "operationId": "SlotScheduler_Post",
        "requestBody": {
          "x-name": "slotSchedulerModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotSchedulerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {}
          }
        }
      },
      "CustomerModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "firstName",
          "lastName",
          "gender"
        ],
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "minLength": 1
          },
          "lastName": {
            "type": "string",
            "minLength": 1
          },
          "gender": {
            "type": "string",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ResendSlotInformation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "resendSlotModel": {
            "type": "string",
            "nullable": true
          },
          "resendTo": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "title",
          "timeZone",
          "slotDate",
          "slotStartTime",
          "slotEndTime"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "default": "00000000-0000-0000-0000-000000000000"
          },
          "title": {
            "type": "string",
            "minLength": 1
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "default": "India Standard Time",
            "minLength": 1
          },
          "slotDate": {
            "type": "string",
            "format": "date-time",
            "minLength": 1
          },
          "slotDateUtc": {
            "type": "string",
            "format": "date-time"
          },
          "slotStartTime": {
            "type": "string",
            "format": "time-span",
            "default": "10:00:00",
            "minLength": 1
          },
          "slotEndTime": {
            "type": "string",
            "format": "time-span",
            "default": "11:00:00",
            "minLength": 1
          },
          "slotDuration": {
            "type": "string",
            "format": "time-span"
          }
        }
      },
      "CancelSlot": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotKey": {
            "type": "string",
            "nullable": true
          },
          "cancelledBy": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotSchedulerModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotModelKey": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          }
        }
      }
    }
  }
} Compressed Body: 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 
16:05 (1.0.0) [Information] (9) Http Request Information:
Request Id: d178523b-ba69-48a2-95e5-b152c3b65ca9 Executing At: 17-01-2021 12:05:27 Schema:https Host: localhost:44382 Path: /api/v1/Slot Method Type: POST QueryString:  Request Body: {"id":"00000000-0000-0000-0000-000000000000","title":"string","createdBy":"string","bookedBy":"string","timeZone":"India Standard Time","slotDate":"2021-01-18T12:05:21.696Z","slotDateUtc":"2021-01-17T12:05:21.696Z","slotStartTime":"10:00:00","slotEndTime":"11:00:00","slotDuration":"string"} Compressed Body: TQEAAB+LCAAAAAAAAAp1j80KwjAMgF9l5OykKTi1R5kHz87L6KWuRYqzhS4eRHx3a+cPGzOEHPJ9SQjcJVgtQUhg78gnyickzCSQpdakkY6CdafUbIJRZPTmNgZH789TfbIXU3vXL9o5bVW2J+W0CjqrIktS13oq494kccYxZ5jjqkIu2EJwnBfroh6YB2qG8vKPHI8F6g9FHZlgr/zirdM/iCNYXoMi693gpwc8AeELxVRNAQAA 
16:05 (1.0.0) [Information] (5) Http Response Information:
Request Id: d178523b-ba69-48a2-95e5-b152c3b65ca9 Executed At: 17-01-2021 12:05:31 Schema:https Host: localhost:44382 Path: /api/v1/Slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "1cb38479-67e4-42df-a683-e362e8054ae7" Compressed Body: KgAAAB+LCAAAAAAAAApTilEyTE4ytjAxt9Q1M0810TUxSknTTTSzMNZNNTYzSrUwMDVJTDWPUVICAFBdwiAqAAAA 
16:10 (1.0.0) [Information] (1) Starting web host
16:10 (1.0.0) [Information] (4) Http Request Information:
Request Id: c2a9ecc6-c051-4a41-8720-2dc38afe8f41 Executing At: 17-01-2021 12:10:13 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:10 (1.0.0) [Information] (4) Http Response Information:
Request Id: c2a9ecc6-c051-4a41-8720-2dc38afe8f41 Executed At: 17-01-2021 12:10:14 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Response Status Code: 200 Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>
      html
      {
        box-sizing: border-box;
        overflow: -moz-scrollbars-vertical;
        overflow-y: scroll;
      }

      *,
      *:before,
      *:after
      {
        box-sizing: inherit;
      }

      body
      {
        margin:0;
        background: #fafafa;
      }
    </style>
    
    
  </head>

  <body>
    <div id="swagger-ui"></div>

    <script src="./swagger-ui-bundle.js" charset="UTF-8"> </script>
    <script src="./swagger-ui-standalone-preset.js" charset="UTF-8"> </script>
    <script>
window.onload = function() {
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = undefined;
  }
  var urls = [{"url":"/swagger/v1/swagger.json","name":"v1"}];

  const disableTryItOutPlugin = function() {
    return {
      statePlugins: {
      spec: {
        wrapSelectors: {
          allowTryItOutFor: function() {
            return function() {
                return true;
              }
            }
          }
        }
      }
    }
  }

  // Build a system
  var ui = SwaggerUIBundle({
    url: url,
    urls: urls,  
    validatorUrl: null,
    oauth2RedirectUrl: window.location.origin + "/swagger/oauth2-redirect.html",

    docExpansion: "none", 
    operationsSorter: "none", 
    defaultModelsExpandDepth: 1, 
    defaultModelExpandDepth: 1, 
    tagsSorter: "none", 
    
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
        SwaggerUIBundle.plugins.DownloadUrl,
        disableTryItOutPlugin
    ],
    layout: "StandaloneLayout"
  });

  if ("client_id") {
    ui.initOAuth({
      clientId: "client_id",
      clientSecret: "client_secret",
      realm: "realm",
      appName: "app_name",
      scopeSeparator: " ",
      additionalQueryStringParams: {},
      usePkceWithAuthorizationCodeGrant: false
    });
  }

  window.ui = ui;
}
    </script>
    
  </body>
</html>
 Compressed Body: KQoAAB+LCAAAAAAAAAqlVoFu2zYQ/RVWBdKkjaQ5BYpBcwKsSbsFSBe3jjEMUVbQ0lniQpECSdlxivz7jhQlK4mKYpgNWMe7x0fq+O7oYPoiDMnvV58uyEoqog01LCM500axZWOYFGTZiJwDPhjPSRiepGL64uzy9Oqv2QdSmopbh30STkVxnAYg0gB9hExLoLmz0K7AUJKVVGkwCFpcfQx/9jiMGmY4nMw3tChAkcX5NG49PsyZuCUKOE7UZstBlwAmDYjZ1oA+A3cmzrRGT6lghZ4o1i1X2LCojYxwsUyKHQuraAFxLYohzYquLSp8e3T39ihqg5rdg8ao8+E4/n/Uk3d3k3dPqJ1vSO1e2w+IS3tnf+sMQpbyLkQGJooEbZXj66Prlx1ArkGtuNwkJKzkfagzJTlf4pmEGMCDp3wEHG4T0iL74EMqOvP1YW8lS0ANwcBBVwbUDzbKRAmKmTHupcy3I7Mrqgomkp8Ge13S7LZQEpWakJcrar9DQpfCeJjD3e809jJ1A7tkl/OcrQnLreZ6LaFipzH6PdweTKZYbYhW2RPZhW3dRP9Y8T0Xvt2Pm3ryQyIsSpFTLgWEtQKk+Y+cONowkctNJAWXNCfHZNWIzBb3/kGb2DVVpFEcIx7JZYadQIpIA1VZGVXUZOV+jJjj/eu/927eHMQHLsNsRfbtzL09SxBxEIUpyQmZeGbieXPIZA6LL+ensqrxVYSx064nNy3NAwGu4fEUzB+smIC8RQz2qTF6/S0N0EyDJA26bMXrSWdijmwFHqaBoBU41HqSBg83SGaZsPK0sY2OLjlcqe25uWzMjDeorJH8ECxr0yixk6HtlNDidTJw15ANhoRsFK3nwCEzUg2B9kM5lle39kepkpF1u49f//uAAcioBgbF8agMRoeDQW96wz18TcYxee9uAUr0Vhuo+iNhmDPfvRfn753w93dnmdgf3xbs6bmxPuyqcE05yynmZ2GhouEdVtLGlEdfIGcK8+eiT+UpFbMn9oYMRNBOC5WfF7luiUrwJZvL7MNdTYXG+QnOE6hGDPvNyBqUo9ZzqbB7PUegKGnDzSeUM9eOKT+D2pQJmYxBxhGGFt9doNtm9ZVhO3v1ctcKXvnE5AD1BV42roHa0/b+tj1gfq+7U3xyKJFHRLRm+vAZaN53mpnDtYCbjr1Te88+wt9iojO5cb0GD61fhoyX2+NFON3Kxtik7DZz4Xxp4KRo+0XXeNIg4wxbCSYqDXYNh0VMMHP5K8qgUyEWvEOeY0Yfzep31/rmkGERDTDaOdIdTgHllQU4YxCgdf0HthobQvNr23b6qM5QWXOoKarLVjo28OHcPGdWdJR/bkBt5/jvSxQzxFa2Zzz0uEbD7DaDP5kp7duh+u+dWE9Rab8pKnDnK4qN1Neu761twnzpuFptGEZ2F+Pw0mjvRH8P4uXY/sML/gWWz4gVKQoAAA== 
16:10 (1.0.0) [Information] (5) Http Request Information:
Request Id: d013b1b8-b766-4d04-b5f4-77e8fc957729 Executing At: 17-01-2021 12:10:14 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:10 (1.0.0) [Information] (5) Http Response Information:
Request Id: d013b1b8-b766-4d04-b5f4-77e8fc957729 Executed At: 17-01-2021 12:10:15 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Response Status Code: 200 Response Body: {
  "x-generator": "NSwag v13.9.4.0 (NJsonSchema v10.3.1.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Bookmyslot Customer API",
    "description": "Bookmyslot Customer API to manage customer data",
    "termsOfService": "None",
    "contact": {
      "name": "TA",
      "email": ""
    },
    "license": {
      "name": ""
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://localhost:44382"
    }
  ],
  "paths": {
    "/api/v1/CustomerBookedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer booked slots",
        "operationId": "CustomerBookedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer booked slots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer completed slots",
        "operationId": "CustomerBookedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer completed slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer cancelled slots",
        "operationId": "CustomerBookedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer cancelled slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customers",
        "operationId": "Customer_Get",
        "responses": {
          "200": {
            "description": "Returns all customers"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create new customer",
        "operationId": "Customer_Post",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns email id of created customer"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update existing customer",
        "operationId": "Customer_Put",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer/{email}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customer by email",
        "operationId": "Customer_Get2",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "description": "customer email id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer details"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerYetToBeBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer YetToBeBookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerYetToBeBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer  YetToBeBookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer BookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer BookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CompletedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CompletedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CancelledSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CancelledSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetDistinctCustomersNearestSlotFromToday",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetCustomerAvailableSlots": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetCustomerAvailableSlots",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          },
          {
            "name": "customerInfo",
            "in": "query",
            "description": "customer info",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/email/ResendSlotMeetingInformation": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Resend slot information email to the customers",
        "operationId": "Email_ResendSlotMeetingInformation",
        "requestBody": {
          "x-name": "resendSlotInformation",
          "description": "slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendSlotInformation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot": {
      "get": {
        "tags": [
          "Slot"
        ],
        "summary": "Gets slot",
        "operationId": "Slot_Get",
        "parameters": [
          {
            "name": "slotId",
            "in": "query",
            "description": "slot id",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot"
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "slot id inappropriate",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Create new slot for the user",
        "operationId": "Slot_Post",
        "requestBody": {
          "x-name": "slotModel",
          "description": "slot model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns slot id of created slot"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot/CancelSlot": {
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Cancel User slot",
        "operationId": "Slot_CancelSlot",
        "requestBody": {
          "x-name": "cancelSlot",
          "description": "user slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelSlot"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/SlotScheduler": {
      "post": {
        "tags": [
          "SlotScheduler"
        ],
        "operationId": "SlotScheduler_Post",
        "requestBody": {
          "x-name": "slotSchedulerModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotSchedulerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {}
          }
        }
      },
      "CustomerModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "firstName",
          "lastName",
          "gender"
        ],
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "minLength": 1
          },
          "lastName": {
            "type": "string",
            "minLength": 1
          },
          "gender": {
            "type": "string",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ResendSlotInformation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "resendSlotModel": {
            "type": "string",
            "nullable": true
          },
          "resendTo": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "title",
          "timeZone",
          "slotDate",
          "slotStartTime",
          "slotEndTime"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "default": "00000000-0000-0000-0000-000000000000"
          },
          "title": {
            "type": "string",
            "minLength": 1
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "default": "India Standard Time",
            "minLength": 1
          },
          "slotDate": {
            "type": "string",
            "format": "date-time",
            "minLength": 1
          },
          "slotDateUtc": {
            "type": "string",
            "format": "date-time"
          },
          "slotStartTime": {
            "type": "string",
            "format": "time-span",
            "default": "10:00:00",
            "minLength": 1
          },
          "slotEndTime": {
            "type": "string",
            "format": "time-span",
            "default": "11:00:00",
            "minLength": 1
          },
          "slotDuration": {
            "type": "string",
            "format": "time-span"
          }
        }
      },
      "CancelSlot": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotKey": {
            "type": "string",
            "nullable": true
          },
          "cancelledBy": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotSchedulerModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotModelKey": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          }
        }
      }
    }
  }
} Compressed Body: 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 
16:10 (1.0.0) [Information] (4) Http Request Information:
Request Id: 743be1f5-0236-4a43-8393-60f305b7af8a Executing At: 17-01-2021 12:10:28 Schema:https Host: localhost:44382 Path: /api/v1/Slot Method Type: POST QueryString:  Request Body: {"id":"00000000-0000-0000-0000-000000000000","title":"string","createdBy":"string","bookedBy":"string","timeZone":"India Standard Time","slotDate":"2021-01-18T12:10:21.305Z","slotDateUtc":"2021-01-17T12:10:21.305Z","slotStartTime":"10:00:00","slotEndTime":"11:00:00","slotDuration":"string"} Compressed Body: TQEAAB+LCAAAAAAAAAp1j80KwjAMgF9l5GylqYiyo8yDZ+dl9FLXIsXZQhcPIr67tfOHjhlCDvm+JATuEqyWUErg72AT5RMSZhLIUmfSSE/BulNqtsEoMnpzG4Oj9+epPtmLabwbFu2ctqrYk3JaBV3UkSWp7zxVcW+SBBfIODJc1yhK5KXA+YIvm8w8UJvLqz9yPBZoOBT1KPBXfvHW6R/EEayuQZH1LvvpAU9j9vyPTQEAAA== 
16:10 (1.0.0) [Information] (4) Http Response Information:
Request Id: 743be1f5-0236-4a43-8393-60f305b7af8a Executed At: 17-01-2021 12:10:32 Schema:https Host: localhost:44382 Path: /api/v1/Slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "5e16ded1-1da2-4ae7-b75a-5047509b8a8a" Compressed Body: KgAAAB+LCAAAAAAAAApTilEyTTU0S0lNMdQ1TEk00jVJTDXXTTI3TdQ1NTAxNzWwTLJItEiMUVICAJZ724gqAAAA 
16:14 (1.0.0) [Information] (1) Starting web host
16:14 (1.0.0) [Information] (11) Http Request Information:
Request Id: bb1c53b2-814d-4e53-b6b5-2a0cb44aee3e Executing At: 17-01-2021 12:14:16 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:14 (1.0.0) [Information] (11) Http Response Information:
Request Id: bb1c53b2-814d-4e53-b6b5-2a0cb44aee3e Executed At: 17-01-2021 12:14:17 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Response Status Code: 200 Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>
      html
      {
        box-sizing: border-box;
        overflow: -moz-scrollbars-vertical;
        overflow-y: scroll;
      }

      *,
      *:before,
      *:after
      {
        box-sizing: inherit;
      }

      body
      {
        margin:0;
        background: #fafafa;
      }
    </style>
    
    
  </head>

  <body>
    <div id="swagger-ui"></div>

    <script src="./swagger-ui-bundle.js" charset="UTF-8"> </script>
    <script src="./swagger-ui-standalone-preset.js" charset="UTF-8"> </script>
    <script>
window.onload = function() {
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = undefined;
  }
  var urls = [{"url":"/swagger/v1/swagger.json","name":"v1"}];

  const disableTryItOutPlugin = function() {
    return {
      statePlugins: {
      spec: {
        wrapSelectors: {
          allowTryItOutFor: function() {
            return function() {
                return true;
              }
            }
          }
        }
      }
    }
  }

  // Build a system
  var ui = SwaggerUIBundle({
    url: url,
    urls: urls,  
    validatorUrl: null,
    oauth2RedirectUrl: window.location.origin + "/swagger/oauth2-redirect.html",

    docExpansion: "none", 
    operationsSorter: "none", 
    defaultModelsExpandDepth: 1, 
    defaultModelExpandDepth: 1, 
    tagsSorter: "none", 
    
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
        SwaggerUIBundle.plugins.DownloadUrl,
        disableTryItOutPlugin
    ],
    layout: "StandaloneLayout"
  });

  if ("client_id") {
    ui.initOAuth({
      clientId: "client_id",
      clientSecret: "client_secret",
      realm: "realm",
      appName: "app_name",
      scopeSeparator: " ",
      additionalQueryStringParams: {},
      usePkceWithAuthorizationCodeGrant: false
    });
  }

  window.ui = ui;
}
    </script>
    
  </body>
</html>
 Compressed Body: KQoAAB+LCAAAAAAAAAqlVoFu2zYQ/RVWBdKkjaQ5BYpBcwKsSbsFSBe3jjEMUVbQ0lniQpECSdlxivz7jhQlK4mKYpgNWMe7x0fq+O7oYPoiDMnvV58uyEoqog01LCM500axZWOYFGTZiJwDPhjPSRiepGL64uzy9Oqv2QdSmopbh30STkVxnAYg0gB9hExLoLmz0K7AUJKVVGkwCFpcfQx/9jiMGmY4nMw3tChAkcX5NG49PsyZuCUKOE7UZstBlwAmDYjZ1oA+A3cmzrRGT6lghZ4o1i1X2LCojYxwsUyKHQuraAFxLYohzYquLSp8e3T39ihqg5rdg8ao8+E4/n/Uk3d3k3dPqJ1vSO1e2w+IS3tnf+sMQpbyLkQGJooEbZXj66Prlx1ArkGtuNwkJKzkfagzJTlf4pmEGMCDp3wEHG4T0iL74EMqOvP1YW8lS0ANwcBBVwbUDzbKRAmKmTHupcy3I7Mrqgomkp8Ge13S7LZQEpWakJcrar9DQpfCeJjD3e809jJ1A7tkl/OcrQnLreZ6LaFipzH6PdweTKZYbYhW2RPZhW3dRP9Y8T0Xvt2Pm3ryQyIsSpFTLgWEtQKk+Y+cONowkctNJAWXNCfHZNWIzBb3/kGb2DVVpFEcIx7JZYadQIpIA1VZGVXUZOV+jJjj/eu/927eHMQHLsNsRfbtzL09SxBxEIUpyQmZeGbieXPIZA6LL+ensqrxVYSx064nNy3NAwGu4fEUzB+smIC8RQz2qTF6/S0N0EyDJA26bMXrSWdijmwFHqaBoBU41HqSBg83SGaZsPK0sY2OLjlcqe25uWzMjDeorJH8ECxr0yixk6HtlNDidTJw15ANhoRsFK3nwCEzUg2B9kM5lle39kepkpF1u49f//uAAcioBgbF8agMRoeDQW96wz18TcYxee9uAUr0Vhuo+iNhmDPfvRfn753w93dnmdgf3xbs6bmxPuyqcE05yynmZ2GhouEdVtLGlEdfIGcK8+eiT+UpFbMn9oYMRNBOC5WfF7luiUrwJZvL7MNdTYXG+QnOE6hGDPvNyBqUo9ZzqbB7PUegKGnDzSeUM9eOKT+D2pQJmYxBxhGGFt9doNtm9ZVhO3v1ctcKXvnE5AD1BV42roHa0/b+tj1gfq+7U3xyKJFHRLRm+vAZaN53mpnDtYCbjr1Te88+wt9iojO5cb0GD61fhoyX2+NFON3Kxtik7DZz4Xxp4KRo+0XXeNIg4wxbCSYqDXYNh0VMMHP5K8qgUyEWvEOeY0Yfzep31/rmkGERDTDaOdIdTgHllQU4YxCgdf0HthobQvNr23b6qM5QWXOoKarLVjo28OHcPGdWdJR/bkBt5/jvSxQzxFa2Zzz0uEbD7DaDP5kp7duh+u+dWE9Rab8pKnDnK4qN1Neu761twnzpuFptGEZ2F+Pw0mjvRH8P4uXY/sML/gWWz4gVKQoAAA== 
16:14 (1.0.0) [Information] (5) Http Request Information:
Request Id: b6d90adb-def4-4177-94b7-5fe518fba672 Executing At: 17-01-2021 12:14:17 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:14 (1.0.0) [Information] (5) Http Response Information:
Request Id: b6d90adb-def4-4177-94b7-5fe518fba672 Executed At: 17-01-2021 12:14:19 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Response Status Code: 200 Response Body: {
  "x-generator": "NSwag v13.9.4.0 (NJsonSchema v10.3.1.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Bookmyslot Customer API",
    "description": "Bookmyslot Customer API to manage customer data",
    "termsOfService": "None",
    "contact": {
      "name": "TA",
      "email": ""
    },
    "license": {
      "name": ""
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://localhost:44382"
    }
  ],
  "paths": {
    "/api/v1/CustomerBookedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer booked slots",
        "operationId": "CustomerBookedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer booked slots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer completed slots",
        "operationId": "CustomerBookedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer completed slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer cancelled slots",
        "operationId": "CustomerBookedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer cancelled slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customers",
        "operationId": "Customer_Get",
        "responses": {
          "200": {
            "description": "Returns all customers"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create new customer",
        "operationId": "Customer_Post",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns email id of created customer"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update existing customer",
        "operationId": "Customer_Put",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer/{email}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customer by email",
        "operationId": "Customer_Get2",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "description": "customer email id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer details"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerYetToBeBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer YetToBeBookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerYetToBeBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer  YetToBeBookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer BookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer BookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CompletedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CompletedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CancelledSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CancelledSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetDistinctCustomersNearestSlotFromToday",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetCustomerAvailableSlots": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetCustomerAvailableSlots",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          },
          {
            "name": "customerInfo",
            "in": "query",
            "description": "customer info",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/email/ResendSlotMeetingInformation": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Resend slot information email to the customers",
        "operationId": "Email_ResendSlotMeetingInformation",
        "requestBody": {
          "x-name": "resendSlotInformation",
          "description": "slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendSlotInformation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot": {
      "get": {
        "tags": [
          "Slot"
        ],
        "summary": "Gets slot",
        "operationId": "Slot_Get",
        "parameters": [
          {
            "name": "slotId",
            "in": "query",
            "description": "slot id",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot"
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "slot id inappropriate",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Create new slot for the user",
        "operationId": "Slot_Post",
        "requestBody": {
          "x-name": "slotModel",
          "description": "slot model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns slot id of created slot"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot/CancelSlot": {
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Cancel User slot",
        "operationId": "Slot_CancelSlot",
        "requestBody": {
          "x-name": "cancelSlot",
          "description": "user slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelSlot"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/SlotScheduler": {
      "post": {
        "tags": [
          "SlotScheduler"
        ],
        "operationId": "SlotScheduler_Post",
        "requestBody": {
          "x-name": "slotSchedulerModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotSchedulerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {}
          }
        }
      },
      "CustomerModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "firstName",
          "lastName",
          "gender"
        ],
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "minLength": 1
          },
          "lastName": {
            "type": "string",
            "minLength": 1
          },
          "gender": {
            "type": "string",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ResendSlotInformation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "resendSlotModel": {
            "type": "string",
            "nullable": true
          },
          "resendTo": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "title",
          "timeZone",
          "slotDate",
          "slotStartTime",
          "slotEndTime"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "default": "00000000-0000-0000-0000-000000000000"
          },
          "title": {
            "type": "string",
            "minLength": 1
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "default": "India Standard Time",
            "minLength": 1
          },
          "slotDate": {
            "type": "string",
            "format": "date-time",
            "minLength": 1
          },
          "slotDateUtc": {
            "type": "string",
            "format": "date-time"
          },
          "slotStartTime": {
            "type": "string",
            "format": "time-span",
            "default": "10:00:00",
            "minLength": 1
          },
          "slotEndTime": {
            "type": "string",
            "format": "time-span",
            "default": "11:00:00",
            "minLength": 1
          },
          "slotDuration": {
            "type": "string",
            "format": "time-span"
          }
        }
      },
      "CancelSlot": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotKey": {
            "type": "string",
            "nullable": true
          },
          "cancelledBy": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotSchedulerModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotModelKey": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          }
        }
      }
    }
  }
} Compressed Body: Hn8AAB+LCAAAAAAAAArtXVtv2zYU/iuCt4cViG9JBmx5a5JuyLZmQZM+bPNQMBLtqJNEjaTceIX/+w51sy6UJdmSIjtMh64RKZ4rPx4eXjT4OqMzR9Nmg+fhAjuYIk7obHABD27vv6CFtpyejX4cnY8m2ne3vzDi3OtP2EbweDI6G039x/gLJw4jcz4SFaDodDQRf968mQ1OouaJix3kmkHTZ6I4UWg6cyJKQmbEI25yCwe1Lwn5x14xi3DtymOc2Jhqb+9u4vdFdQMznZouN4mz9SWNE81GDlpgTY8eG4ijVGMcU5v9Pr/HdGnqIRO3xMGpSjpxONJ5im3x3EF2+MrD28QLoggUZ1pBGfwJC9aJNi0g5zC8pU35e0tMWSz5chpViqrMBgxEgTqiwl/RaykKHg0Ze+LcZRfjsUV0ZD0Rxi/Oz89+OE3QDf7xd9y2i/gTy1hvDKYeL6fjSPXCGti4B2uMf8Y8/zT9vmhhgbOq9S2DFmkhooJ8kxuOxU/EblSfebaN6CqQGVhiG3d49JvQhOsArcx74MbQRUDXN0bwbp7wpyIJM025iIJZwddkEqXkzjpBxKrg4SRf0Qwd4V8PCwklNZjfiXP6jbW8ckNKjFPTWUja8BnyLAs9Br2UUw9n62w8dPPO89AlzIy66TRdYb3NYhQzF2AGZ10lKD2dTKTiSJDhA+YedQoMrgkoorZv4rQH5eWZDc4n51WpOiQkMCeeI7ebQBTs5N0+KkeuCwDhszb+DEhbULHUwEGVbymeB6x9M9aJDboF2mwcvMnGd5SAae1rzAGzQOeyZlL2Kni0LtdhZcstkWUCWMPvGqZUjFNKi6Guvq+uRRO8jDrI0oJBIVLllq6Y+GUtG36qof0VOJkFeNc7wNcjxprB/KycCvb7CftpsyvgV8B/iMPnIQA/cnRsWT0E/oixhoA/I6cC/p4Cf8rsCvgV8G/AQgH/TsDfFKjvCuU1sFsgdq5242CDLCvJXLOJhBjJVC6hsVyC9ogMjWLImbGse7zm7Exn4WUqUQ4xQ9vwcUUx4lhz8Je4O9XAkDufwRyI+N5zSYyVFEaeh/kU7ntiYMi85/Se027c5+2CN7b5Z2XvLPXNUs+8SgvWhA8KvZoUG1GeOVdhS5C5rgn007pA76/paKahkbmm+z5lJByqxeSnAqw+AZbXNl59dMH4WMPPJuOwJLMTaAkmFWYdHWad18Us5uk6ZkwDEJkDenkUizWwnOQKrrpY/VKB/7FNhsdf/aBg/dKTYu1xFYQn9SbHpw1mLmXk05sUxO4RaYUSBN0eJEdRmdr9UJoNNeQYp6CqNcRXIf8Rg//9E6L5JbA/MH8gl7iFDW8bejsPEzLmqg4YG/LJlbAKLardbz1ZDZOYXy2JqSWxDXCoZHWDA0E/R4AGoV9h/gHsgFBYrzY8q4XJtoP+djY8NwD3JTuUayK+2u98GKCftpOK8VWMv8EKFeM3ifut7HduAve3b1Cui/tqu/Nh4H7KTgr3Fe4r3N833g8R/9rfjKPHkMhuMSAl46L8J0rsB2KgVWMDwD7QX/OAS4T1FQVsLLd/hxb41rMfc/uaGj/ZLlaCFlIyol5wBjyueXZaUM/Ac+RZYUWA6P3nBic1tXVv/ocPUFfTSUEtGz2btmf7qpmMJvI6phPXGU3q6/y0F+OyOnykrhuo3h9f6bGAOqNx9PvbJUgvLiZpdv71AsNvkURqvFXj7QGPtye73HXkXxG2U5xTvE0wuHesxxcknalI5dUevVMXIx1NpOJvRx5/wAw7fhbuPcbiEM9N8q6xTJRS9wjku2CndeX4JGAmNwkJd05zovGnzRWJFUIXn/6n7SLucfaIxg0Xtyg1an6W1deTkx/kIh79CUp1GqlHQ07d+wzVFQR9HG+Cuep+895d5rvCI8qHimh22+A8VhDe+TbUgjGjzcNDyZzpwhOk9s8cv1wWs42LUhWw7D4dCP0Xwh4IXihxqYm4fJHgdc6sDuNSk5oAnLjQJOw/1I/hPeC8IibvfauJIFz5RhOfy57fZuLPZA7zVoD6cXiIGomLTKqCuzrReKRB5DjYPCSNJ9vGM5+y9hHkqhNXJhne566TomakRhAYK1nP7SuqJXV0/LCmLjvpS9ylZgHHMzKI7wAZniW5+nOXcSHR2rYBQgr58bvNxK9xc0WBbE9APCX6gcaolX1578kr0TnmQ8jJYGTvN4mtlOHJZ3keYTIuQpumwLW032Y/AbVxoZR4kcz5fTLZYSHfo2NNkMfPWHwKK2N+ZBi+nyAL2oKuy80CT9i2UJ71KXd7UxFTEq+qYLmyNft8d4m/U9YVQcYR91gpxeI9m9V2bNZnLLhIqEtVmA4oA0LZLmniZ8Ac8bG1chNIe4WcqqRKYedZ75J8ylxx2FxfniOLpdlPDyG54X5uUsZv/SE3p1wLFRYtYG20LDwogQaRZu/OURJy7k4Udl79hp2FuCKtdKt4Un1dUYys0hW9+AuKLVmxUl8qWKhvt0+V+PZmf4S8hzenohM56Qfy0mYpFr5LeAvjAUmcYOM/098QjYrErONatkITTkg4ovwBXi8ofwfK90tfDBrzq5nSVdbkUZnwZyj5K/opTzzvHXvVA58wK3656rJ3BR+n7Jbmxld3p5ky941jmEgDR3YMRA1N6sz17bHpN824rrhge8ib5e0j11tgrwr1BGw0Q1+QHjIXOeX2nk4uJuK/hhQZI1z3gkwbFeTaC9JXLUiy06SgaHGn6+hF6OZX3CnGxR8BaxVaKwcu2Uzei5vjveCjY5t0MNYVGST6Z5Q2E/9bD/4He0yUtB5/AAA= 
16:15 (1.0.0) [Information] (14) Http Request Information:
Request Id: 52495751-568e-4af0-930c-0d71c9e97c30 Executing At: 17-01-2021 12:15:37 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:15 (1.0.0) [Information] (15) Http Request Information:
Request Id: 058f5622-c40a-413f-a683-5dfc67858576 Executing At: 17-01-2021 12:15:37 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
16:15 (1.0.0) [Information] (14) Get Customer Email a@gmail.com
16:15 (1.0.0) [Information] (15) Get all distinct customers nearest single slot
16:15 (1.0.0) [Information] (14) Http Response Information:
Request Id: 52495751-568e-4af0-930c-0d71c9e97c30 Executed At: 17-01-2021 12:15:38 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
16:15 (1.0.0) [Error] (15) 058f5622-c40a-413f-a683-5dfc67858576 Invalid column name 'SlotDate'.
Invalid column name 'ModifiedDate'.
Invalid column name 'SlotDate'.
Invalid column name 'slotDate'.

16:15 (1.0.0) [Error] (15) 058f5622-c40a-413f-a683-5dfc67858576    at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__126_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 418
   at Bookmyslot.Api.SlotScheduler.Repositories.CustomerSlotRepository.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Repositories\CustomerSlotRepository.cs:line 29
   at Bookmyslot.Api.SlotScheduler.Business.CustomerSlotBusiness.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Business\CustomerSlotBusiness.cs:line 25
   at Bookmyslot.Api.Controllers.CustomerSlotController.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\BookMySlot\Bookmyslot.Api\Controllers\CustomerSlotController.cs:line 49
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.SwaggerUiIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.RedirectToIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
16:15 (1.0.0) [Information] (15) Http Response Information:
Request Id: 058f5622-c40a-413f-a683-5dfc67858576 Executed At: 17-01-2021 12:15:39 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 500 Response Body: ["Internal Server Error"] Compressed Body: HQAAAB+LCAAAAAAAAApTio5R8swrSS3KS8xRCE4tKkstUnAtKsovilGKVQIApHQvcB0AAAA= 
16:18 (1.0.0) [Information] (22) Http Request Information:
Request Id: 7fe385c5-36c1-49a3-8ae4-cbd5ea4e4167 Executing At: 17-01-2021 12:18:05 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:18 (1.0.0) [Information] (22) Get Customer Email a@gmail.com
16:18 (1.0.0) [Information] (24) Http Response Information:
Request Id: 7fe385c5-36c1-49a3-8ae4-cbd5ea4e4167 Executed At: 17-01-2021 12:18:05 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
16:18 (1.0.0) [Information] (22) Http Request Information:
Request Id: d4072c9f-b4e9-45df-a02d-6f686ba720ac Executing At: 17-01-2021 12:18:11 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Request Body: {"title":"uiui","slotDate":"2021-01-23T20:00:00.000Z","timeZone":"India Standard Time","slotStartTime":"0:0:0","slotEndTime":"0:20:0"} Compressed Body: nAAAAB+LCAAAAAAAAApNjbEKgDAMBX9FMqukdeusg7NOkqVQh4C2UNNJ/HerBREy3R0vcBIIy7YSGILEiQlqgmML0lspVKNWDapGd7NGg8+1iLi8pfC+LsGXcvSObTWJ9c5GV83ZfXOZRikkl3nE4OcG737meUJwwQ2aVm85nAAAAA== 
16:18 (1.0.0) [Error] (22) d4072c9f-b4e9-45df-a02d-6f686ba720ac Cannot return null from an action method with a return type of 'Microsoft.AspNetCore.Mvc.IActionResult'.

16:18 (1.0.0) [Error] (22) d4072c9f-b4e9-45df-a02d-6f686ba720ac    at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.EnsureActionResultNotNull(ObjectMethodExecutor executor, IActionResult actionResult)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.SwaggerUiIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.RedirectToIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
16:18 (1.0.0) [Information] (22) Http Response Information:
Request Id: d4072c9f-b4e9-45df-a02d-6f686ba720ac Executed At: 17-01-2021 12:18:58 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Response Status Code: 500 Response Body: ["Internal Server Error"] Compressed Body: HQAAAB+LCAAAAAAAAApTio5R8swrSS3KS8xRCE4tKkstUnAtKsovilGKVQIApHQvcB0AAAA= 
16:21 (1.0.0) [Information] (27) Http Request Information:
Request Id: 004be55d-09d4-43ce-b2f6-c4df155dc7b6 Executing At: 17-01-2021 12:21:21 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:21 (1.0.0) [Information] (27) Get Customer Email a@gmail.com
16:21 (1.0.0) [Information] (28) Http Response Information:
Request Id: 004be55d-09d4-43ce-b2f6-c4df155dc7b6 Executed At: 17-01-2021 12:21:21 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
16:23 (1.0.0) [Information] (32) Http Request Information:
Request Id: 72dbcbe7-2837-4983-9846-af5c026c5d0b Executing At: 17-01-2021 12:23:06 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:23 (1.0.0) [Information] (32) Get Customer Email a@gmail.com
16:23 (1.0.0) [Information] (34) Http Response Information:
Request Id: 72dbcbe7-2837-4983-9846-af5c026c5d0b Executed At: 17-01-2021 12:23:06 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
16:23 (1.0.0) [Information] (32) Http Request Information:
Request Id: 22908405-dda0-4c3f-8815-bd0843387dbe Executing At: 17-01-2021 12:23:11 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
16:23 (1.0.0) [Information] (32) Get all distinct customers nearest single slot
16:23 (1.0.0) [Error] (34) 22908405-dda0-4c3f-8815-bd0843387dbe Invalid column name 'SlotDate'.
Invalid column name 'ModifiedDate'.
Invalid column name 'SlotDate'.
Invalid column name 'slotDate'.

16:23 (1.0.0) [Error] (34) 22908405-dda0-4c3f-8815-bd0843387dbe    at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__126_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 418
   at Bookmyslot.Api.SlotScheduler.Repositories.CustomerSlotRepository.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Repositories\CustomerSlotRepository.cs:line 29
   at Bookmyslot.Api.SlotScheduler.Business.CustomerSlotBusiness.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Business\CustomerSlotBusiness.cs:line 25
   at Bookmyslot.Api.Controllers.CustomerSlotController.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\BookMySlot\Bookmyslot.Api\Controllers\CustomerSlotController.cs:line 49
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.SwaggerUiIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.RedirectToIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
16:23 (1.0.0) [Information] (34) Http Response Information:
Request Id: 22908405-dda0-4c3f-8815-bd0843387dbe Executed At: 17-01-2021 12:23:11 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 500 Response Body: ["Internal Server Error"] Compressed Body: HQAAAB+LCAAAAAAAAApTio5R8swrSS3KS8xRCE4tKkstUnAtKsovilGKVQIApHQvcB0AAAA= 
16:23 (1.0.0) [Information] (36) Http Request Information:
Request Id: f612f722-c7cb-448b-b441-b0b66f4afcf5 Executing At: 17-01-2021 12:23:51 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:23 (1.0.0) [Information] (36) Get Customer Email a@gmail.com
16:23 (1.0.0) [Information] (36) Http Response Information:
Request Id: f612f722-c7cb-448b-b441-b0b66f4afcf5 Executed At: 17-01-2021 12:23:51 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
16:23 (1.0.0) [Information] (38) Http Request Information:
Request Id: bbe6f862-0f6d-4e1e-b498-6b269f3191c6 Executing At: 17-01-2021 12:23:51 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
16:23 (1.0.0) [Information] (38) Get all distinct customers nearest single slot
16:23 (1.0.0) [Error] (38) bbe6f862-0f6d-4e1e-b498-6b269f3191c6 Invalid column name 'SlotDate'.
Invalid column name 'ModifiedDate'.
Invalid column name 'SlotDate'.
Invalid column name 'slotDate'.

16:23 (1.0.0) [Error] (38) bbe6f862-0f6d-4e1e-b498-6b269f3191c6    at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__126_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 418
   at Bookmyslot.Api.SlotScheduler.Repositories.CustomerSlotRepository.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Repositories\CustomerSlotRepository.cs:line 29
   at Bookmyslot.Api.SlotScheduler.Business.CustomerSlotBusiness.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Business\CustomerSlotBusiness.cs:line 25
   at Bookmyslot.Api.Controllers.CustomerSlotController.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\BookMySlot\Bookmyslot.Api\Controllers\CustomerSlotController.cs:line 49
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.SwaggerUiIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.RedirectToIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
16:23 (1.0.0) [Information] (38) Http Response Information:
Request Id: bbe6f862-0f6d-4e1e-b498-6b269f3191c6 Executed At: 17-01-2021 12:23:51 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 500 Response Body: ["Internal Server Error"] Compressed Body: HQAAAB+LCAAAAAAAAApTio5R8swrSS3KS8xRCE4tKkstUnAtKsovilGKVQIApHQvcB0AAAA= 
16:24 (1.0.0) [Information] (36) Http Request Information:
Request Id: 4df44bf7-1382-45ff-88c3-9519c45b5840 Executing At: 17-01-2021 12:24:33 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:24 (1.0.0) [Information] (36) Get Customer Email a@gmail.com
16:24 (1.0.0) [Information] (37) Http Response Information:
Request Id: 4df44bf7-1382-45ff-88c3-9519c45b5840 Executed At: 17-01-2021 12:24:33 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
16:24 (1.0.0) [Information] (37) Http Request Information:
Request Id: cc164ed2-9ba6-4cbc-aa10-7f57849fd426 Executing At: 17-01-2021 12:24:33 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
16:24 (1.0.0) [Information] (37) Get all distinct customers nearest single slot
16:24 (1.0.0) [Error] (37) cc164ed2-9ba6-4cbc-aa10-7f57849fd426 Invalid column name 'SlotDate'.
Invalid column name 'ModifiedDate'.
Invalid column name 'SlotDate'.
Invalid column name 'slotDate'.

16:24 (1.0.0) [Error] (37) cc164ed2-9ba6-4cbc-aa10-7f57849fd426    at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__126_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 418
   at Bookmyslot.Api.SlotScheduler.Repositories.CustomerSlotRepository.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Repositories\CustomerSlotRepository.cs:line 29
   at Bookmyslot.Api.SlotScheduler.Business.CustomerSlotBusiness.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Business\CustomerSlotBusiness.cs:line 25
   at Bookmyslot.Api.Controllers.CustomerSlotController.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\BookMySlot\Bookmyslot.Api\Controllers\CustomerSlotController.cs:line 49
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.SwaggerUiIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.RedirectToIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
16:24 (1.0.0) [Information] (37) Http Response Information:
Request Id: cc164ed2-9ba6-4cbc-aa10-7f57849fd426 Executed At: 17-01-2021 12:24:33 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 500 Response Body: ["Internal Server Error"] Compressed Body: HQAAAB+LCAAAAAAAAApTio5R8swrSS3KS8xRCE4tKkstUnAtKsovilGKVQIApHQvcB0AAAA= 
16:26 (1.0.0) [Information] (44) Http Request Information:
Request Id: 9a639751-e655-4466-9bb3-89842b87b733 Executing At: 17-01-2021 12:26:11 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:26 (1.0.0) [Information] (44) Get Customer Email a@gmail.com
16:26 (1.0.0) [Information] (46) Http Response Information:
Request Id: 9a639751-e655-4466-9bb3-89842b87b733 Executed At: 17-01-2021 12:26:12 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
16:26 (1.0.0) [Information] (45) Http Request Information:
Request Id: 2b676cb5-53dc-4c52-a84a-a815acf72dcc Executing At: 17-01-2021 12:26:12 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
16:26 (1.0.0) [Information] (45) Get all distinct customers nearest single slot
16:26 (1.0.0) [Error] (45) 2b676cb5-53dc-4c52-a84a-a815acf72dcc Invalid column name 'SlotDate'.
Invalid column name 'ModifiedDate'.
Invalid column name 'SlotDate'.
Invalid column name 'slotDate'.

16:26 (1.0.0) [Error] (45) 2b676cb5-53dc-4c52-a84a-a815acf72dcc    at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__126_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 418
   at Bookmyslot.Api.SlotScheduler.Repositories.CustomerSlotRepository.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Repositories\CustomerSlotRepository.cs:line 29
   at Bookmyslot.Api.SlotScheduler.Business.CustomerSlotBusiness.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Business\CustomerSlotBusiness.cs:line 25
   at Bookmyslot.Api.Controllers.CustomerSlotController.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\BookMySlot\Bookmyslot.Api\Controllers\CustomerSlotController.cs:line 49
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.SwaggerUiIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.RedirectToIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
16:26 (1.0.0) [Information] (45) Http Response Information:
Request Id: 2b676cb5-53dc-4c52-a84a-a815acf72dcc Executed At: 17-01-2021 12:26:12 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 500 Response Body: ["Internal Server Error"] Compressed Body: HQAAAB+LCAAAAAAAAApTio5R8swrSS3KS8xRCE4tKkstUnAtKsovilGKVQIApHQvcB0AAAA= 
16:28 (1.0.0) [Information] (48) Http Request Information:
Request Id: 13b06f86-b5bb-41dc-85d8-8ca1be230e84 Executing At: 17-01-2021 12:28:01 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:28 (1.0.0) [Information] (48) Get Customer Email a@gmail.com
16:28 (1.0.0) [Information] (48) Http Response Information:
Request Id: 13b06f86-b5bb-41dc-85d8-8ca1be230e84 Executed At: 17-01-2021 12:28:01 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
16:28 (1.0.0) [Information] (50) Http Request Information:
Request Id: 45f1ffb2-c323-42dc-94da-1945f8fa47d3 Executing At: 17-01-2021 12:28:01 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
16:28 (1.0.0) [Information] (50) Get all distinct customers nearest single slot
16:28 (1.0.0) [Error] (50) 45f1ffb2-c323-42dc-94da-1945f8fa47d3 Invalid column name 'SlotDate'.
Invalid column name 'ModifiedDate'.
Invalid column name 'SlotDate'.
Invalid column name 'slotDate'.

16:28 (1.0.0) [Error] (50) 45f1ffb2-c323-42dc-94da-1945f8fa47d3    at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__126_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 418
   at Bookmyslot.Api.SlotScheduler.Repositories.CustomerSlotRepository.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Repositories\CustomerSlotRepository.cs:line 29
   at Bookmyslot.Api.SlotScheduler.Business.CustomerSlotBusiness.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Business\CustomerSlotBusiness.cs:line 25
   at Bookmyslot.Api.Controllers.CustomerSlotController.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\BookMySlot\Bookmyslot.Api\Controllers\CustomerSlotController.cs:line 49
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.SwaggerUiIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.RedirectToIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
16:28 (1.0.0) [Information] (50) Http Response Information:
Request Id: 45f1ffb2-c323-42dc-94da-1945f8fa47d3 Executed At: 17-01-2021 12:28:01 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 500 Response Body: ["Internal Server Error"] Compressed Body: HQAAAB+LCAAAAAAAAApTio5R8swrSS3KS8xRCE4tKkstUnAtKsovilGKVQIApHQvcB0AAAA= 
16:30 (1.0.0) [Information] (52) Http Request Information:
Request Id: 7f3e0339-b0d7-4204-847c-6f766fc37a62 Executing At: 17-01-2021 12:30:34 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:30 (1.0.0) [Information] (52) Get Customer Email a@gmail.com
16:30 (1.0.0) [Information] (53) Http Response Information:
Request Id: 7f3e0339-b0d7-4204-847c-6f766fc37a62 Executed At: 17-01-2021 12:30:34 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
16:30 (1.0.0) [Information] (55) Http Request Information:
Request Id: 90363ba6-5780-46e3-8e5c-3789dbdbbcac Executing At: 17-01-2021 12:30:35 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
16:30 (1.0.0) [Information] (55) Get all distinct customers nearest single slot
16:30 (1.0.0) [Error] (55) 90363ba6-5780-46e3-8e5c-3789dbdbbcac Invalid column name 'SlotDate'.
Invalid column name 'ModifiedDate'.
Invalid column name 'SlotDate'.
Invalid column name 'slotDate'.

16:30 (1.0.0) [Error] (55) 90363ba6-5780-46e3-8e5c-3789dbdbbcac    at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__126_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 418
   at Bookmyslot.Api.SlotScheduler.Repositories.CustomerSlotRepository.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Repositories\CustomerSlotRepository.cs:line 29
   at Bookmyslot.Api.SlotScheduler.Business.CustomerSlotBusiness.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Business\CustomerSlotBusiness.cs:line 25
   at Bookmyslot.Api.Controllers.CustomerSlotController.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\BookMySlot\Bookmyslot.Api\Controllers\CustomerSlotController.cs:line 49
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.SwaggerUiIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.RedirectToIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
16:30 (1.0.0) [Information] (55) Http Response Information:
Request Id: 90363ba6-5780-46e3-8e5c-3789dbdbbcac Executed At: 17-01-2021 12:30:35 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 500 Response Body: ["Internal Server Error"] Compressed Body: HQAAAB+LCAAAAAAAAApTio5R8swrSS3KS8xRCE4tKkstUnAtKsovilGKVQIApHQvcB0AAAA= 
16:42 (1.0.0) [Information] (58) Http Request Information:
Request Id: 34acb0c0-b7d0-492d-b924-f273563d4243 Executing At: 17-01-2021 12:42:24 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:42 (1.0.0) [Information] (58) Get Customer Email a@gmail.com
16:42 (1.0.0) [Information] (58) Http Response Information:
Request Id: 34acb0c0-b7d0-492d-b924-f273563d4243 Executed At: 17-01-2021 12:42:24 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
16:42 (1.0.0) [Information] (59) Http Request Information:
Request Id: bf059949-4f2e-4527-9b07-8833416be0ae Executing At: 17-01-2021 12:42:24 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
16:42 (1.0.0) [Information] (59) Get all distinct customers nearest single slot
16:42 (1.0.0) [Error] (58) bf059949-4f2e-4527-9b07-8833416be0ae Invalid column name 'SlotDate'.
Invalid column name 'ModifiedDate'.
Invalid column name 'SlotDate'.
Invalid column name 'slotDate'.

16:42 (1.0.0) [Error] (58) bf059949-4f2e-4527-9b07-8833416be0ae    at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__126_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 418
   at Bookmyslot.Api.SlotScheduler.Repositories.CustomerSlotRepository.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Repositories\CustomerSlotRepository.cs:line 29
   at Bookmyslot.Api.SlotScheduler.Business.CustomerSlotBusiness.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Business\CustomerSlotBusiness.cs:line 25
   at Bookmyslot.Api.Controllers.CustomerSlotController.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\BookMySlot\Bookmyslot.Api\Controllers\CustomerSlotController.cs:line 49
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.SwaggerUiIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.RedirectToIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
16:42 (1.0.0) [Information] (58) Http Response Information:
Request Id: bf059949-4f2e-4527-9b07-8833416be0ae Executed At: 17-01-2021 12:42:24 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 500 Response Body: ["Internal Server Error"] Compressed Body: HQAAAB+LCAAAAAAAAApTio5R8swrSS3KS8xRCE4tKkstUnAtKsovilGKVQIApHQvcB0AAAA= 
16:47 (1.0.0) [Information] (65) Http Request Information:
Request Id: f86ec13d-40b6-41c5-a530-2996915df666 Executing At: 17-01-2021 12:47:59 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:47 (1.0.0) [Information] (65) Get Customer Email a@gmail.com
16:47 (1.0.0) [Information] (67) Http Request Information:
Request Id: ec3396a7-6808-43d1-ba89-303401254eca Executing At: 17-01-2021 12:47:59 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
16:47 (1.0.0) [Information] (67) Get all distinct customers nearest single slot
16:47 (1.0.0) [Information] (65) Http Response Information:
Request Id: f86ec13d-40b6-41c5-a530-2996915df666 Executed At: 17-01-2021 12:47:59 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
16:47 (1.0.0) [Error] (68) ec3396a7-6808-43d1-ba89-303401254eca Invalid column name 'SlotDate'.
Invalid column name 'ModifiedDate'.
Invalid column name 'SlotDate'.
Invalid column name 'slotDate'.

16:47 (1.0.0) [Error] (68) ec3396a7-6808-43d1-ba89-303401254eca    at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__126_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 418
   at Bookmyslot.Api.SlotScheduler.Repositories.CustomerSlotRepository.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Repositories\CustomerSlotRepository.cs:line 29
   at Bookmyslot.Api.SlotScheduler.Business.CustomerSlotBusiness.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Business\CustomerSlotBusiness.cs:line 25
   at Bookmyslot.Api.Controllers.CustomerSlotController.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\BookMySlot\Bookmyslot.Api\Controllers\CustomerSlotController.cs:line 49
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.SwaggerUiIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.RedirectToIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
16:47 (1.0.0) [Information] (68) Http Response Information:
Request Id: ec3396a7-6808-43d1-ba89-303401254eca Executed At: 17-01-2021 12:47:59 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 500 Response Body: ["Internal Server Error"] Compressed Body: HQAAAB+LCAAAAAAAAApTio5R8swrSS3KS8xRCE4tKkstUnAtKsovilGKVQIApHQvcB0AAAA= 
16:48 (1.0.0) [Information] (70) Http Request Information:
Request Id: f05d7c75-7c1d-4b51-914b-14e4e9347418 Executing At: 17-01-2021 12:48:43 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:48 (1.0.0) [Information] (70) Get Customer Email a@gmail.com
16:48 (1.0.0) [Information] (72) Http Response Information:
Request Id: f05d7c75-7c1d-4b51-914b-14e4e9347418 Executed At: 17-01-2021 12:48:43 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
16:48 (1.0.0) [Information] (71) Http Request Information:
Request Id: e4bcfa67-cb53-4119-b09d-1f39da79ee71 Executing At: 17-01-2021 12:48:43 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
16:48 (1.0.0) [Information] (71) Get all distinct customers nearest single slot
16:48 (1.0.0) [Error] (71) e4bcfa67-cb53-4119-b09d-1f39da79ee71 Invalid column name 'SlotDate'.
Invalid column name 'ModifiedDate'.
Invalid column name 'SlotDate'.
Invalid column name 'slotDate'.

16:48 (1.0.0) [Error] (71) e4bcfa67-cb53-4119-b09d-1f39da79ee71    at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__126_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 418
   at Bookmyslot.Api.SlotScheduler.Repositories.CustomerSlotRepository.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Repositories\CustomerSlotRepository.cs:line 29
   at Bookmyslot.Api.SlotScheduler.Business.CustomerSlotBusiness.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Business\CustomerSlotBusiness.cs:line 25
   at Bookmyslot.Api.Controllers.CustomerSlotController.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\BookMySlot\Bookmyslot.Api\Controllers\CustomerSlotController.cs:line 49
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.SwaggerUiIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.RedirectToIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
16:48 (1.0.0) [Information] (71) Http Response Information:
Request Id: e4bcfa67-cb53-4119-b09d-1f39da79ee71 Executed At: 17-01-2021 12:48:44 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 500 Response Body: ["Internal Server Error"] Compressed Body: HQAAAB+LCAAAAAAAAApTio5R8swrSS3KS8xRCE4tKkstUnAtKsovilGKVQIApHQvcB0AAAA= 
16:48 (1.0.0) [Information] (70) Http Request Information:
Request Id: 8aa41145-bc0a-4c29-8518-afb2e7cd88c7 Executing At: 17-01-2021 12:48:45 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:48 (1.0.0) [Information] (70) Get Customer Email a@gmail.com
16:48 (1.0.0) [Information] (73) Http Response Information:
Request Id: 8aa41145-bc0a-4c29-8518-afb2e7cd88c7 Executed At: 17-01-2021 12:48:45 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
16:48 (1.0.0) [Information] (71) Http Request Information:
Request Id: 81bc3990-bd31-4163-95e8-302adf046267 Executing At: 17-01-2021 12:48:45 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
16:48 (1.0.0) [Information] (71) Get all distinct customers nearest single slot
16:48 (1.0.0) [Error] (70) 81bc3990-bd31-4163-95e8-302adf046267 Invalid column name 'SlotDate'.
Invalid column name 'ModifiedDate'.
Invalid column name 'SlotDate'.
Invalid column name 'slotDate'.

16:48 (1.0.0) [Error] (70) 81bc3990-bd31-4163-95e8-302adf046267    at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__126_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 418
   at Bookmyslot.Api.SlotScheduler.Repositories.CustomerSlotRepository.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Repositories\CustomerSlotRepository.cs:line 29
   at Bookmyslot.Api.SlotScheduler.Business.CustomerSlotBusiness.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Business\CustomerSlotBusiness.cs:line 25
   at Bookmyslot.Api.Controllers.CustomerSlotController.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\BookMySlot\Bookmyslot.Api\Controllers\CustomerSlotController.cs:line 49
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.SwaggerUiIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.RedirectToIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
16:48 (1.0.0) [Information] (70) Http Response Information:
Request Id: 81bc3990-bd31-4163-95e8-302adf046267 Executed At: 17-01-2021 12:48:46 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 500 Response Body: ["Internal Server Error"] Compressed Body: HQAAAB+LCAAAAAAAAApTio5R8swrSS3KS8xRCE4tKkstUnAtKsovilGKVQIApHQvcB0AAAA= 
16:49 (1.0.0) [Information] (68) Http Request Information:
Request Id: ba970d69-fe24-47c0-b597-ac7322aa7c74 Executing At: 17-01-2021 12:49:24 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:49 (1.0.0) [Information] (68) Get Customer Email a@gmail.com
16:49 (1.0.0) [Information] (67) Http Response Information:
Request Id: ba970d69-fe24-47c0-b597-ac7322aa7c74 Executed At: 17-01-2021 12:49:24 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
16:49 (1.0.0) [Information] (68) Http Request Information:
Request Id: 8b13e723-3bb9-4601-9bb8-e4989970fac3 Executing At: 17-01-2021 12:49:24 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
16:49 (1.0.0) [Information] (68) Get all distinct customers nearest single slot
16:49 (1.0.0) [Error] (68) 8b13e723-3bb9-4601-9bb8-e4989970fac3 Invalid column name 'SlotDate'.
Invalid column name 'ModifiedDate'.
Invalid column name 'SlotDate'.
Invalid column name 'slotDate'.

16:49 (1.0.0) [Error] (68) 8b13e723-3bb9-4601-9bb8-e4989970fac3    at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__126_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 418
   at Bookmyslot.Api.SlotScheduler.Repositories.CustomerSlotRepository.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Repositories\CustomerSlotRepository.cs:line 29
   at Bookmyslot.Api.SlotScheduler.Business.CustomerSlotBusiness.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Business\CustomerSlotBusiness.cs:line 25
   at Bookmyslot.Api.Controllers.CustomerSlotController.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\BookMySlot\Bookmyslot.Api\Controllers\CustomerSlotController.cs:line 49
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.SwaggerUiIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.RedirectToIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
16:49 (1.0.0) [Information] (68) Http Response Information:
Request Id: 8b13e723-3bb9-4601-9bb8-e4989970fac3 Executed At: 17-01-2021 12:49:25 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 500 Response Body: ["Internal Server Error"] Compressed Body: HQAAAB+LCAAAAAAAAApTio5R8swrSS3KS8xRCE4tKkstUnAtKsovilGKVQIApHQvcB0AAAA= 
16:50 (1.0.0) [Information] (65) Http Request Information:
Request Id: cc035f51-e360-48e5-beae-f7c59bc61100 Executing At: 17-01-2021 12:50:05 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:50 (1.0.0) [Information] (65) Get Customer Email a@gmail.com
16:50 (1.0.0) [Information] (65) Http Response Information:
Request Id: cc035f51-e360-48e5-beae-f7c59bc61100 Executed At: 17-01-2021 12:50:05 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
16:50 (1.0.0) [Information] (63) Http Request Information:
Request Id: d1d58da4-e50a-450c-bec8-2987d3409a13 Executing At: 17-01-2021 12:50:05 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
16:50 (1.0.0) [Information] (63) Get all distinct customers nearest single slot
16:50 (1.0.0) [Error] (63) d1d58da4-e50a-450c-bec8-2987d3409a13 Invalid column name 'SlotDate'.
Invalid column name 'ModifiedDate'.
Invalid column name 'SlotDate'.
Invalid column name 'slotDate'.

16:50 (1.0.0) [Error] (63) d1d58da4-e50a-450c-bec8-2987d3409a13    at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__126_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 418
   at Bookmyslot.Api.SlotScheduler.Repositories.CustomerSlotRepository.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Repositories\CustomerSlotRepository.cs:line 29
   at Bookmyslot.Api.SlotScheduler.Business.CustomerSlotBusiness.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Business\CustomerSlotBusiness.cs:line 25
   at Bookmyslot.Api.Controllers.CustomerSlotController.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\BookMySlot\Bookmyslot.Api\Controllers\CustomerSlotController.cs:line 49
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.SwaggerUiIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.RedirectToIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
16:50 (1.0.0) [Information] (63) Http Response Information:
Request Id: d1d58da4-e50a-450c-bec8-2987d3409a13 Executed At: 17-01-2021 12:50:06 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 500 Response Body: ["Internal Server Error"] Compressed Body: HQAAAB+LCAAAAAAAAApTio5R8swrSS3KS8xRCE4tKkstUnAtKsovilGKVQIApHQvcB0AAAA= 
16:50 (1.0.0) [Information] (64) Http Request Information:
Request Id: 0f698421-bbdd-481a-9494-dad38103b330 Executing At: 17-01-2021 12:50:57 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:50 (1.0.0) [Information] (64) Get Customer Email a@gmail.com
16:50 (1.0.0) [Information] (60) Http Request Information:
Request Id: b6396ebf-a30d-4ec1-a824-cafa95d11b33 Executing At: 17-01-2021 12:50:57 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
16:50 (1.0.0) [Information] (60) Get all distinct customers nearest single slot
16:50 (1.0.0) [Information] (59) Http Response Information:
Request Id: 0f698421-bbdd-481a-9494-dad38103b330 Executed At: 17-01-2021 12:50:57 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
16:50 (1.0.0) [Error] (59) b6396ebf-a30d-4ec1-a824-cafa95d11b33 Invalid column name 'SlotDate'.
Invalid column name 'ModifiedDate'.
Invalid column name 'SlotDate'.
Invalid column name 'slotDate'.

16:50 (1.0.0) [Error] (59) b6396ebf-a30d-4ec1-a824-cafa95d11b33    at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__126_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 418
   at Bookmyslot.Api.SlotScheduler.Repositories.CustomerSlotRepository.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Repositories\CustomerSlotRepository.cs:line 29
   at Bookmyslot.Api.SlotScheduler.Business.CustomerSlotBusiness.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Business\CustomerSlotBusiness.cs:line 25
   at Bookmyslot.Api.Controllers.CustomerSlotController.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\BookMySlot\Bookmyslot.Api\Controllers\CustomerSlotController.cs:line 49
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.SwaggerUiIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.RedirectToIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
16:50 (1.0.0) [Information] (59) Http Response Information:
Request Id: b6396ebf-a30d-4ec1-a824-cafa95d11b33 Executed At: 17-01-2021 12:50:57 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 500 Response Body: ["Internal Server Error"] Compressed Body: HQAAAB+LCAAAAAAAAApTio5R8swrSS3KS8xRCE4tKkstUnAtKsovilGKVQIApHQvcB0AAAA= 
16:52 (1.0.0) [Information] (1) Starting web host
16:52 (1.0.0) [Information] (9) Http Request Information:
Request Id: 242db9b4-5178-4ade-b6d2-f2c9f51fec7f Executing At: 17-01-2021 12:52:31 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:52 (1.0.0) [Information] (4) Http Request Information:
Request Id: fec17b51-002e-4a51-9fde-f7ca9ec780e7 Executing At: 17-01-2021 12:52:31 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
16:52 (1.0.0) [Information] (10) Http Request Information:
Request Id: a2c24696-ea2d-45b2-a8d5-f9e76ad86cb9 Executing At: 17-01-2021 12:52:31 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:52 (1.0.0) [Information] (10) Get Customer Email a@gmail.com
16:52 (1.0.0) [Information] (9) Get all distinct customers nearest single slot
16:52 (1.0.0) [Information] (4) Http Response Information:
Request Id: 242db9b4-5178-4ade-b6d2-f2c9f51fec7f Executed At: 17-01-2021 12:52:31 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Response Status Code: 200 Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>
      html
      {
        box-sizing: border-box;
        overflow: -moz-scrollbars-vertical;
        overflow-y: scroll;
      }

      *,
      *:before,
      *:after
      {
        box-sizing: inherit;
      }

      body
      {
        margin:0;
        background: #fafafa;
      }
    </style>
    
    
  </head>

  <body>
    <div id="swagger-ui"></div>

    <script src="./swagger-ui-bundle.js" charset="UTF-8"> </script>
    <script src="./swagger-ui-standalone-preset.js" charset="UTF-8"> </script>
    <script>
window.onload = function() {
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = undefined;
  }
  var urls = [{"url":"/swagger/v1/swagger.json","name":"v1"}];

  const disableTryItOutPlugin = function() {
    return {
      statePlugins: {
      spec: {
        wrapSelectors: {
          allowTryItOutFor: function() {
            return function() {
                return true;
              }
            }
          }
        }
      }
    }
  }

  // Build a system
  var ui = SwaggerUIBundle({
    url: url,
    urls: urls,  
    validatorUrl: null,
    oauth2RedirectUrl: window.location.origin + "/swagger/oauth2-redirect.html",

    docExpansion: "none", 
    operationsSorter: "none", 
    defaultModelsExpandDepth: 1, 
    defaultModelExpandDepth: 1, 
    tagsSorter: "none", 
    
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
        SwaggerUIBundle.plugins.DownloadUrl,
        disableTryItOutPlugin
    ],
    layout: "StandaloneLayout"
  });

  if ("client_id") {
    ui.initOAuth({
      clientId: "client_id",
      clientSecret: "client_secret",
      realm: "realm",
      appName: "app_name",
      scopeSeparator: " ",
      additionalQueryStringParams: {},
      usePkceWithAuthorizationCodeGrant: false
    });
  }

  window.ui = ui;
}
    </script>
    
  </body>
</html>
 Compressed Body: KQoAAB+LCAAAAAAAAAqlVoFu2zYQ/RVWBdKkjaQ5BYpBcwKsSbsFSBe3jjEMUVbQ0lniQpECSdlxivz7jhQlK4mKYpgNWMe7x0fq+O7oYPoiDMnvV58uyEoqog01LCM500axZWOYFGTZiJwDPhjPSRiepGL64uzy9Oqv2QdSmopbh30STkVxnAYg0gB9hExLoLmz0K7AUJKVVGkwCFpcfQx/9jiMGmY4nMw3tChAkcX5NG49PsyZuCUKOE7UZstBlwAmDYjZ1oA+A3cmzrRGT6lghZ4o1i1X2LCojYxwsUyKHQuraAFxLYohzYquLSp8e3T39ihqg5rdg8ao8+E4/n/Uk3d3k3dPqJ1vSO1e2w+IS3tnf+sMQpbyLkQGJooEbZXj66Prlx1ArkGtuNwkJKzkfagzJTlf4pmEGMCDp3wEHG4T0iL74EMqOvP1YW8lS0ANwcBBVwbUDzbKRAmKmTHupcy3I7Mrqgomkp8Ge13S7LZQEpWakJcrar9DQpfCeJjD3e809jJ1A7tkl/OcrQnLreZ6LaFipzH6PdweTKZYbYhW2RPZhW3dRP9Y8T0Xvt2Pm3ryQyIsSpFTLgWEtQKk+Y+cONowkctNJAWXNCfHZNWIzBb3/kGb2DVVpFEcIx7JZYadQIpIA1VZGVXUZOV+jJjj/eu/927eHMQHLsNsRfbtzL09SxBxEIUpyQmZeGbieXPIZA6LL+ensqrxVYSx064nNy3NAwGu4fEUzB+smIC8RQz2qTF6/S0N0EyDJA26bMXrSWdijmwFHqaBoBU41HqSBg83SGaZsPK0sY2OLjlcqe25uWzMjDeorJH8ECxr0yixk6HtlNDidTJw15ANhoRsFK3nwCEzUg2B9kM5lle39kepkpF1u49f//uAAcioBgbF8agMRoeDQW96wz18TcYxee9uAUr0Vhuo+iNhmDPfvRfn753w93dnmdgf3xbs6bmxPuyqcE05yynmZ2GhouEdVtLGlEdfIGcK8+eiT+UpFbMn9oYMRNBOC5WfF7luiUrwJZvL7MNdTYXG+QnOE6hGDPvNyBqUo9ZzqbB7PUegKGnDzSeUM9eOKT+D2pQJmYxBxhGGFt9doNtm9ZVhO3v1ctcKXvnE5AD1BV42roHa0/b+tj1gfq+7U3xyKJFHRLRm+vAZaN53mpnDtYCbjr1Te88+wt9iojO5cb0GD61fhoyX2+NFON3Kxtik7DZz4Xxp4KRo+0XXeNIg4wxbCSYqDXYNh0VMMHP5K8qgUyEWvEOeY0Yfzep31/rmkGERDTDaOdIdTgHllQU4YxCgdf0HthobQvNr23b6qM5QWXOoKarLVjo28OHcPGdWdJR/bkBt5/jvSxQzxFa2Zzz0uEbD7DaDP5kp7duh+u+dWE9Rab8pKnDnK4qN1Neu761twnzpuFptGEZ2F+Pw0mjvRH8P4uXY/sML/gWWz4gVKQoAAA== 
16:52 (1.0.0) [Information] (14) Http Request Information:
Request Id: c87de963-a11b-4453-8cf2-1b4e69418192 Executing At: 17-01-2021 12:52:32 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:52 (1.0.0) [Information] (4) Http Response Information:
Request Id: a2c24696-ea2d-45b2-a8d5-f9e76ad86cb9 Executed At: 17-01-2021 12:52:33 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
16:52 (1.0.0) [Error] (9) fec17b51-002e-4a51-9fde-f7ca9ec780e7 Invalid column name 'SlotDate'.
Invalid column name 'ModifiedDate'.
Invalid column name 'SlotDate'.
Invalid column name 'slotDate'.

16:52 (1.0.0) [Error] (9) fec17b51-002e-4a51-9fde-f7ca9ec780e7    at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__126_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 418
   at Bookmyslot.Api.SlotScheduler.Repositories.CustomerSlotRepository.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Repositories\CustomerSlotRepository.cs:line 29
   at Bookmyslot.Api.SlotScheduler.Business.CustomerSlotBusiness.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Business\CustomerSlotBusiness.cs:line 25
   at Bookmyslot.Api.Controllers.CustomerSlotController.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\BookMySlot\Bookmyslot.Api\Controllers\CustomerSlotController.cs:line 49
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.SwaggerUiIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.RedirectToIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.<Invoke>g__AwaitMatcher|8_0(EndpointRoutingMiddleware middleware, HttpContext httpContext, Task`1 matcherTask)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
16:52 (1.0.0) [Information] (9) Http Response Information:
Request Id: fec17b51-002e-4a51-9fde-f7ca9ec780e7 Executed At: 17-01-2021 12:52:33 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 500 Response Body: ["Internal Server Error"] Compressed Body: HQAAAB+LCAAAAAAAAApTio5R8swrSS3KS8xRCE4tKkstUnAtKsovilGKVQIApHQvcB0AAAA= 
16:52 (1.0.0) [Information] (14) Http Response Information:
Request Id: c87de963-a11b-4453-8cf2-1b4e69418192 Executed At: 17-01-2021 12:52:35 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Response Status Code: 200 Response Body: {
  "x-generator": "NSwag v13.9.4.0 (NJsonSchema v10.3.1.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Bookmyslot Customer API",
    "description": "Bookmyslot Customer API to manage customer data",
    "termsOfService": "None",
    "contact": {
      "name": "TA",
      "email": ""
    },
    "license": {
      "name": ""
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://localhost:44382"
    }
  ],
  "paths": {
    "/api/v1/CustomerBookedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer booked slots",
        "operationId": "CustomerBookedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer booked slots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer completed slots",
        "operationId": "CustomerBookedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer completed slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer cancelled slots",
        "operationId": "CustomerBookedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer cancelled slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customers",
        "operationId": "Customer_Get",
        "responses": {
          "200": {
            "description": "Returns all customers"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create new customer",
        "operationId": "Customer_Post",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns email id of created customer"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update existing customer",
        "operationId": "Customer_Put",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer/{email}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customer by email",
        "operationId": "Customer_Get2",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "description": "customer email id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer details"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerYetToBeBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer YetToBeBookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerYetToBeBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer  YetToBeBookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer BookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer BookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CompletedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CompletedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CancelledSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CancelledSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetDistinctCustomersNearestSlotFromToday",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetCustomerAvailableSlots": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetCustomerAvailableSlots",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          },
          {
            "name": "customerInfo",
            "in": "query",
            "description": "customer info",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/email/ResendSlotMeetingInformation": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Resend slot information email to the customers",
        "operationId": "Email_ResendSlotMeetingInformation",
        "requestBody": {
          "x-name": "resendSlotInformation",
          "description": "slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendSlotInformation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot": {
      "get": {
        "tags": [
          "Slot"
        ],
        "summary": "Gets slot",
        "operationId": "Slot_Get",
        "parameters": [
          {
            "name": "slotId",
            "in": "query",
            "description": "slot id",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot"
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "slot id inappropriate",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Create new slot for the user",
        "operationId": "Slot_Post",
        "requestBody": {
          "x-name": "slotModel",
          "description": "slot model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns slot id of created slot"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot/CancelSlot": {
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Cancel User slot",
        "operationId": "Slot_CancelSlot",
        "requestBody": {
          "x-name": "cancelSlot",
          "description": "user slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelSlot"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/SlotScheduler": {
      "post": {
        "tags": [
          "SlotScheduler"
        ],
        "operationId": "SlotScheduler_Post",
        "requestBody": {
          "x-name": "slotSchedulerModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotSchedulerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {}
          }
        }
      },
      "CustomerModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "firstName",
          "lastName",
          "gender"
        ],
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "minLength": 1
          },
          "lastName": {
            "type": "string",
            "minLength": 1
          },
          "gender": {
            "type": "string",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ResendSlotInformation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "resendSlotModel": {
            "type": "string",
            "nullable": true
          },
          "resendTo": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "title",
          "timeZone",
          "slotDate",
          "slotStartTime",
          "slotEndTime"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "default": "00000000-0000-0000-0000-000000000000"
          },
          "title": {
            "type": "string",
            "minLength": 1
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "default": "India Standard Time",
            "minLength": 1
          },
          "slotDate": {
            "type": "string",
            "format": "date-time",
            "minLength": 1
          },
          "slotDateUtc": {
            "type": "string",
            "format": "date-time"
          },
          "slotStartTime": {
            "type": "string",
            "format": "time-span",
            "default": "10:00:00",
            "minLength": 1
          },
          "slotEndTime": {
            "type": "string",
            "format": "time-span",
            "default": "11:00:00",
            "minLength": 1
          },
          "slotDuration": {
            "type": "string",
            "format": "time-span"
          }
        }
      },
      "CancelSlot": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotKey": {
            "type": "string",
            "nullable": true
          },
          "cancelledBy": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotSchedulerModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotModelKey": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          }
        }
      }
    }
  }
} Compressed Body: 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 
16:52 (1.0.0) [Information] (14) Http Request Information:
Request Id: 335e1d77-3433-4f95-a924-402c8a3d949a Executing At: 17-01-2021 12:52:47 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:52 (1.0.0) [Information] (14) Get Customer Email a@gmail.com
16:52 (1.0.0) [Information] (14) Http Response Information:
Request Id: 335e1d77-3433-4f95-a924-402c8a3d949a Executed At: 17-01-2021 12:52:47 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
16:52 (1.0.0) [Information] (14) Http Request Information:
Request Id: 9f327d45-e436-4597-9a33-45589d07268d Executing At: 17-01-2021 12:52:48 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
16:52 (1.0.0) [Information] (14) Get all distinct customers nearest single slot
16:52 (1.0.0) [Error] (14) 9f327d45-e436-4597-9a33-45589d07268d Invalid column name 'SlotDate'.
Invalid column name 'ModifiedDate'.
Invalid column name 'SlotDate'.
Invalid column name 'slotDate'.

16:52 (1.0.0) [Error] (14) 9f327d45-e436-4597-9a33-45589d07268d    at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__126_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 418
   at Bookmyslot.Api.SlotScheduler.Repositories.CustomerSlotRepository.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Repositories\CustomerSlotRepository.cs:line 29
   at Bookmyslot.Api.SlotScheduler.Business.CustomerSlotBusiness.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Business\CustomerSlotBusiness.cs:line 25
   at Bookmyslot.Api.Controllers.CustomerSlotController.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\BookMySlot\Bookmyslot.Api\Controllers\CustomerSlotController.cs:line 49
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.SwaggerUiIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.RedirectToIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
16:52 (1.0.0) [Information] (14) Http Response Information:
Request Id: 9f327d45-e436-4597-9a33-45589d07268d Executed At: 17-01-2021 12:52:48 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 500 Response Body: ["Internal Server Error"] Compressed Body: HQAAAB+LCAAAAAAAAApTio5R8swrSS3KS8xRCE4tKkstUnAtKsovilGKVQIApHQvcB0AAAA= 
16:53 (1.0.0) [Information] (4) Http Request Information:
Request Id: bd2ab11d-2506-4f16-a54b-7436d6f9e255 Executing At: 17-01-2021 12:53:16 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:53 (1.0.0) [Information] (4) Get Customer Email a@gmail.com
16:53 (1.0.0) [Information] (18) Http Request Information:
Request Id: 99f4bb0b-d094-4ed3-8d1e-463a3c362e60 Executing At: 17-01-2021 12:53:16 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
16:53 (1.0.0) [Information] (18) Get all distinct customers nearest single slot
16:53 (1.0.0) [Information] (16) Http Response Information:
Request Id: bd2ab11d-2506-4f16-a54b-7436d6f9e255 Executed At: 17-01-2021 12:53:19 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
16:53 (1.0.0) [Error] (17) 99f4bb0b-d094-4ed3-8d1e-463a3c362e60 Invalid column name 'SlotDate'.
Invalid column name 'ModifiedDate'.
Invalid column name 'SlotDate'.
Invalid column name 'slotDate'.

16:53 (1.0.0) [Error] (17) 99f4bb0b-d094-4ed3-8d1e-463a3c362e60    at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__126_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 418
   at Bookmyslot.Api.SlotScheduler.Repositories.CustomerSlotRepository.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Repositories\CustomerSlotRepository.cs:line 29
   at Bookmyslot.Api.SlotScheduler.Business.CustomerSlotBusiness.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Business\CustomerSlotBusiness.cs:line 25
   at Bookmyslot.Api.Controllers.CustomerSlotController.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\BookMySlot\Bookmyslot.Api\Controllers\CustomerSlotController.cs:line 49
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.SwaggerUiIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.RedirectToIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
16:53 (1.0.0) [Information] (17) Http Response Information:
Request Id: 99f4bb0b-d094-4ed3-8d1e-463a3c362e60 Executed At: 17-01-2021 12:53:19 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 500 Response Body: ["Internal Server Error"] Compressed Body: HQAAAB+LCAAAAAAAAApTio5R8swrSS3KS8xRCE4tKkstUnAtKsovilGKVQIApHQvcB0AAAA= 
16:53 (1.0.0) [Information] (19) Http Request Information:
Request Id: a6b24107-175f-46ef-b6c7-2b6729476af7 Executing At: 17-01-2021 12:53:41 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:53 (1.0.0) [Information] (19) Get Customer Email a@gmail.com
16:53 (1.0.0) [Information] (20) Http Request Information:
Request Id: 659b9f17-38e5-4562-af0c-ef8bcb1e3446 Executing At: 17-01-2021 12:53:41 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
16:53 (1.0.0) [Information] (21) Http Response Information:
Request Id: a6b24107-175f-46ef-b6c7-2b6729476af7 Executed At: 17-01-2021 12:53:41 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
16:53 (1.0.0) [Information] (20) Get all distinct customers nearest single slot
16:53 (1.0.0) [Error] (20) 659b9f17-38e5-4562-af0c-ef8bcb1e3446 Invalid column name 'SlotDate'.
Invalid column name 'ModifiedDate'.
Invalid column name 'SlotDate'.
Invalid column name 'slotDate'.

16:53 (1.0.0) [Error] (20) 659b9f17-38e5-4562-af0c-ef8bcb1e3446    at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__126_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 418
   at Bookmyslot.Api.SlotScheduler.Repositories.CustomerSlotRepository.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Repositories\CustomerSlotRepository.cs:line 29
   at Bookmyslot.Api.SlotScheduler.Business.CustomerSlotBusiness.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Business\CustomerSlotBusiness.cs:line 25
   at Bookmyslot.Api.Controllers.CustomerSlotController.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\BookMySlot\Bookmyslot.Api\Controllers\CustomerSlotController.cs:line 49
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.SwaggerUiIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.RedirectToIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
16:54 (1.0.0) [Information] (20) Http Response Information:
Request Id: 659b9f17-38e5-4562-af0c-ef8bcb1e3446 Executed At: 17-01-2021 12:54:03 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 500 Response Body: ["Internal Server Error"] Compressed Body: HQAAAB+LCAAAAAAAAApTio5R8swrSS3KS8xRCE4tKkstUnAtKsovilGKVQIApHQvcB0AAAA= 
16:54 (1.0.0) [Information] (19) Http Request Information:
Request Id: d31ba4c1-2766-40a9-af67-b5bce59f0393 Executing At: 17-01-2021 12:54:06 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:54 (1.0.0) [Information] (19) Get Customer Email a@gmail.com
16:54 (1.0.0) [Information] (19) Http Response Information:
Request Id: d31ba4c1-2766-40a9-af67-b5bce59f0393 Executed At: 17-01-2021 12:54:06 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
16:54 (1.0.0) [Information] (22) Http Request Information:
Request Id: 2f40f6cc-79bd-47bd-8c08-c464307e245c Executing At: 17-01-2021 12:54:06 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
16:54 (1.0.0) [Information] (22) Get all distinct customers nearest single slot
16:54 (1.0.0) [Error] (21) 2f40f6cc-79bd-47bd-8c08-c464307e245c Invalid column name 'SlotDate'.
Invalid column name 'ModifiedDate'.
Invalid column name 'SlotDate'.
Invalid column name 'slotDate'.

16:54 (1.0.0) [Error] (21) 2f40f6cc-79bd-47bd-8c08-c464307e245c    at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__126_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 418
   at Bookmyslot.Api.SlotScheduler.Repositories.CustomerSlotRepository.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Repositories\CustomerSlotRepository.cs:line 29
   at Bookmyslot.Api.SlotScheduler.Business.CustomerSlotBusiness.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Business\CustomerSlotBusiness.cs:line 25
   at Bookmyslot.Api.Controllers.CustomerSlotController.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\BookMySlot\Bookmyslot.Api\Controllers\CustomerSlotController.cs:line 49
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.SwaggerUiIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.RedirectToIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
16:54 (1.0.0) [Information] (21) Http Response Information:
Request Id: 2f40f6cc-79bd-47bd-8c08-c464307e245c Executed At: 17-01-2021 12:54:11 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 500 Response Body: ["Internal Server Error"] Compressed Body: HQAAAB+LCAAAAAAAAApTio5R8swrSS3KS8xRCE4tKkstUnAtKsovilGKVQIApHQvcB0AAAA= 
16:54 (1.0.0) [Information] (19) Http Request Information:
Request Id: 126315dc-180f-4004-827a-a8d083a3c987 Executing At: 17-01-2021 12:54:14 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:54 (1.0.0) [Information] (19) Get Customer Email a@gmail.com
16:54 (1.0.0) [Information] (19) Http Response Information:
Request Id: 126315dc-180f-4004-827a-a8d083a3c987 Executed At: 17-01-2021 12:54:15 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
16:54 (1.0.0) [Information] (19) Http Request Information:
Request Id: 83454dfe-9eae-471d-9364-2b5f7e187f27 Executing At: 17-01-2021 12:54:15 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
16:54 (1.0.0) [Information] (19) Get all distinct customers nearest single slot
16:54 (1.0.0) [Error] (23) 83454dfe-9eae-471d-9364-2b5f7e187f27 Invalid column name 'SlotDate'.
Invalid column name 'ModifiedDate'.
Invalid column name 'SlotDate'.
Invalid column name 'slotDate'.

16:54 (1.0.0) [Error] (23) 83454dfe-9eae-471d-9364-2b5f7e187f27    at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__126_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Dapper.SqlMapper.QueryAsync[T](IDbConnection cnn, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 418
   at Bookmyslot.Api.SlotScheduler.Repositories.CustomerSlotRepository.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Repositories\CustomerSlotRepository.cs:line 29
   at Bookmyslot.Api.SlotScheduler.Business.CustomerSlotBusiness.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Business\CustomerSlotBusiness.cs:line 25
   at Bookmyslot.Api.Controllers.CustomerSlotController.GetDistinctCustomersNearestSlotFromToday(PageParameterModel pageParameterModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\BookMySlot\Bookmyslot.Api\Controllers\CustomerSlotController.cs:line 49
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.SwaggerUiIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.RedirectToIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
16:54 (1.0.0) [Information] (23) Http Response Information:
Request Id: 83454dfe-9eae-471d-9364-2b5f7e187f27 Executed At: 17-01-2021 12:54:28 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 500 Response Body: ["Internal Server Error"] Compressed Body: HQAAAB+LCAAAAAAAAApTio5R8swrSS3KS8xRCE4tKkstUnAtKsovilGKVQIApHQvcB0AAAA= 
16:54 (1.0.0) [Information] (19) Http Request Information:
Request Id: c0aae7cd-28f5-467a-b1f0-21315e498bef Executing At: 17-01-2021 12:54:30 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:54 (1.0.0) [Information] (19) Get Customer Email a@gmail.com
16:54 (1.0.0) [Information] (20) Http Response Information:
Request Id: c0aae7cd-28f5-467a-b1f0-21315e498bef Executed At: 17-01-2021 12:54:31 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
16:54 (1.0.0) [Information] (20) Http Request Information:
Request Id: ec2d2863-e8d6-4af0-bfda-dbe8f37108ae Executing At: 17-01-2021 12:54:31 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
16:54 (1.0.0) [Information] (20) Get all distinct customers nearest single slot
16:57 (1.0.0) [Information] (1) Starting web host
16:57 (1.0.0) [Information] (4) Http Request Information:
Request Id: 81a0307e-4616-40f5-80d8-420a3372f355 Executing At: 17-01-2021 12:57:44 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:57 (1.0.0) [Information] (4) Http Response Information:
Request Id: 81a0307e-4616-40f5-80d8-420a3372f355 Executed At: 17-01-2021 12:57:45 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Response Status Code: 200 Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>
      html
      {
        box-sizing: border-box;
        overflow: -moz-scrollbars-vertical;
        overflow-y: scroll;
      }

      *,
      *:before,
      *:after
      {
        box-sizing: inherit;
      }

      body
      {
        margin:0;
        background: #fafafa;
      }
    </style>
    
    
  </head>

  <body>
    <div id="swagger-ui"></div>

    <script src="./swagger-ui-bundle.js" charset="UTF-8"> </script>
    <script src="./swagger-ui-standalone-preset.js" charset="UTF-8"> </script>
    <script>
window.onload = function() {
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = undefined;
  }
  var urls = [{"url":"/swagger/v1/swagger.json","name":"v1"}];

  const disableTryItOutPlugin = function() {
    return {
      statePlugins: {
      spec: {
        wrapSelectors: {
          allowTryItOutFor: function() {
            return function() {
                return true;
              }
            }
          }
        }
      }
    }
  }

  // Build a system
  var ui = SwaggerUIBundle({
    url: url,
    urls: urls,  
    validatorUrl: null,
    oauth2RedirectUrl: window.location.origin + "/swagger/oauth2-redirect.html",

    docExpansion: "none", 
    operationsSorter: "none", 
    defaultModelsExpandDepth: 1, 
    defaultModelExpandDepth: 1, 
    tagsSorter: "none", 
    
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
        SwaggerUIBundle.plugins.DownloadUrl,
        disableTryItOutPlugin
    ],
    layout: "StandaloneLayout"
  });

  if ("client_id") {
    ui.initOAuth({
      clientId: "client_id",
      clientSecret: "client_secret",
      realm: "realm",
      appName: "app_name",
      scopeSeparator: " ",
      additionalQueryStringParams: {},
      usePkceWithAuthorizationCodeGrant: false
    });
  }

  window.ui = ui;
}
    </script>
    
  </body>
</html>
 Compressed Body: KQoAAB+LCAAAAAAAAAqlVoFu2zYQ/RVWBdKkjaQ5BYpBcwKsSbsFSBe3jjEMUVbQ0lniQpECSdlxivz7jhQlK4mKYpgNWMe7x0fq+O7oYPoiDMnvV58uyEoqog01LCM500axZWOYFGTZiJwDPhjPSRiepGL64uzy9Oqv2QdSmopbh30STkVxnAYg0gB9hExLoLmz0K7AUJKVVGkwCFpcfQx/9jiMGmY4nMw3tChAkcX5NG49PsyZuCUKOE7UZstBlwAmDYjZ1oA+A3cmzrRGT6lghZ4o1i1X2LCojYxwsUyKHQuraAFxLYohzYquLSp8e3T39ihqg5rdg8ao8+E4/n/Uk3d3k3dPqJ1vSO1e2w+IS3tnf+sMQpbyLkQGJooEbZXj66Prlx1ArkGtuNwkJKzkfagzJTlf4pmEGMCDp3wEHG4T0iL74EMqOvP1YW8lS0ANwcBBVwbUDzbKRAmKmTHupcy3I7Mrqgomkp8Ge13S7LZQEpWakJcrar9DQpfCeJjD3e809jJ1A7tkl/OcrQnLreZ6LaFipzH6PdweTKZYbYhW2RPZhW3dRP9Y8T0Xvt2Pm3ryQyIsSpFTLgWEtQKk+Y+cONowkctNJAWXNCfHZNWIzBb3/kGb2DVVpFEcIx7JZYadQIpIA1VZGVXUZOV+jJjj/eu/927eHMQHLsNsRfbtzL09SxBxEIUpyQmZeGbieXPIZA6LL+ensqrxVYSx064nNy3NAwGu4fEUzB+smIC8RQz2qTF6/S0N0EyDJA26bMXrSWdijmwFHqaBoBU41HqSBg83SGaZsPK0sY2OLjlcqe25uWzMjDeorJH8ECxr0yixk6HtlNDidTJw15ANhoRsFK3nwCEzUg2B9kM5lle39kepkpF1u49f//uAAcioBgbF8agMRoeDQW96wz18TcYxee9uAUr0Vhuo+iNhmDPfvRfn753w93dnmdgf3xbs6bmxPuyqcE05yynmZ2GhouEdVtLGlEdfIGcK8+eiT+UpFbMn9oYMRNBOC5WfF7luiUrwJZvL7MNdTYXG+QnOE6hGDPvNyBqUo9ZzqbB7PUegKGnDzSeUM9eOKT+D2pQJmYxBxhGGFt9doNtm9ZVhO3v1ctcKXvnE5AD1BV42roHa0/b+tj1gfq+7U3xyKJFHRLRm+vAZaN53mpnDtYCbjr1Te88+wt9iojO5cb0GD61fhoyX2+NFON3Kxtik7DZz4Xxp4KRo+0XXeNIg4wxbCSYqDXYNh0VMMHP5K8qgUyEWvEOeY0Yfzep31/rmkGERDTDaOdIdTgHllQU4YxCgdf0HthobQvNr23b6qM5QWXOoKarLVjo28OHcPGdWdJR/bkBt5/jvSxQzxFa2Zzz0uEbD7DaDP5kp7duh+u+dWE9Rab8pKnDnK4qN1Neu761twnzpuFptGEZ2F+Pw0mjvRH8P4uXY/sML/gWWz4gVKQoAAA== 
16:57 (1.0.0) [Information] (4) Http Request Information:
Request Id: 186da05c-42c8-468b-8c46-4541cb5b7ea5 Executing At: 17-01-2021 12:57:46 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:57 (1.0.0) [Information] (4) Http Response Information:
Request Id: 186da05c-42c8-468b-8c46-4541cb5b7ea5 Executed At: 17-01-2021 12:57:48 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Response Status Code: 200 Response Body: {
  "x-generator": "NSwag v13.9.4.0 (NJsonSchema v10.3.1.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Bookmyslot Customer API",
    "description": "Bookmyslot Customer API to manage customer data",
    "termsOfService": "None",
    "contact": {
      "name": "TA",
      "email": ""
    },
    "license": {
      "name": ""
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://localhost:44382"
    }
  ],
  "paths": {
    "/api/v1/CustomerBookedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer booked slots",
        "operationId": "CustomerBookedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer booked slots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer completed slots",
        "operationId": "CustomerBookedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer completed slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer cancelled slots",
        "operationId": "CustomerBookedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer cancelled slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customers",
        "operationId": "Customer_Get",
        "responses": {
          "200": {
            "description": "Returns all customers"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create new customer",
        "operationId": "Customer_Post",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns email id of created customer"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update existing customer",
        "operationId": "Customer_Put",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer/{email}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customer by email",
        "operationId": "Customer_Get2",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "description": "customer email id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer details"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerYetToBeBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer YetToBeBookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerYetToBeBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer  YetToBeBookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer BookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer BookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CompletedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CompletedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CancelledSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CancelledSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetDistinctCustomersNearestSlotFromToday",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetCustomerAvailableSlots": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetCustomerAvailableSlots",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          },
          {
            "name": "customerInfo",
            "in": "query",
            "description": "customer info",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/email/ResendSlotMeetingInformation": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Resend slot information email to the customers",
        "operationId": "Email_ResendSlotMeetingInformation",
        "requestBody": {
          "x-name": "resendSlotInformation",
          "description": "slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendSlotInformation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot": {
      "get": {
        "tags": [
          "Slot"
        ],
        "summary": "Gets slot",
        "operationId": "Slot_Get",
        "parameters": [
          {
            "name": "slotId",
            "in": "query",
            "description": "slot id",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot"
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "slot id inappropriate",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Create new slot for the user",
        "operationId": "Slot_Post",
        "requestBody": {
          "x-name": "slotModel",
          "description": "slot model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns slot id of created slot"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot/CancelSlot": {
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Cancel User slot",
        "operationId": "Slot_CancelSlot",
        "requestBody": {
          "x-name": "cancelSlot",
          "description": "user slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelSlot"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/SlotScheduler": {
      "post": {
        "tags": [
          "SlotScheduler"
        ],
        "operationId": "SlotScheduler_Post",
        "requestBody": {
          "x-name": "slotSchedulerModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotSchedulerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {}
          }
        }
      },
      "CustomerModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "firstName",
          "lastName",
          "gender"
        ],
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "minLength": 1
          },
          "lastName": {
            "type": "string",
            "minLength": 1
          },
          "gender": {
            "type": "string",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ResendSlotInformation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "resendSlotModel": {
            "type": "string",
            "nullable": true
          },
          "resendTo": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "title",
          "timeZone",
          "slotDate",
          "slotStartTime",
          "slotEndTime"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "default": "00000000-0000-0000-0000-000000000000"
          },
          "title": {
            "type": "string",
            "minLength": 1
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "default": "India Standard Time",
            "minLength": 1
          },
          "slotDate": {
            "type": "string",
            "format": "date-time",
            "minLength": 1
          },
          "slotDateUtc": {
            "type": "string",
            "format": "date-time"
          },
          "slotStartTime": {
            "type": "string",
            "format": "time-span",
            "default": "10:00:00",
            "minLength": 1
          },
          "slotEndTime": {
            "type": "string",
            "format": "time-span",
            "default": "11:00:00",
            "minLength": 1
          },
          "slotDuration": {
            "type": "string",
            "format": "time-span"
          }
        }
      },
      "CancelSlot": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotKey": {
            "type": "string",
            "nullable": true
          },
          "cancelledBy": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotSchedulerModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotModelKey": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          }
        }
      }
    }
  }
} Compressed Body: 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 
16:57 (1.0.0) [Information] (4) Http Request Information:
Request Id: fce0471d-8c63-4ddc-a0d4-d936ea245b4d Executing At: 17-01-2021 12:57:55 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:57 (1.0.0) [Information] (5) Http Request Information:
Request Id: 74350b23-0a26-4553-baba-7697d20e3a52 Executing At: 17-01-2021 12:57:56 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
16:57 (1.0.0) [Information] (4) Get Customer Email a@gmail.com
16:58 (1.0.0) [Information] (5) Get all distinct customers nearest single slot
16:58 (1.0.0) [Information] (14) Http Response Information:
Request Id: 74350b23-0a26-4553-baba-7697d20e3a52 Executed At: 17-01-2021 12:58:07 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 404 Response Body: ["no records found"] Compressed Body: GAAAAB+LCAAAAAAAAApTio5RystXKEpNzi9KKVZIyy/NS4lRilUCACgTBEUYAAAA 
16:58 (1.0.0) [Information] (5) Http Response Information:
Request Id: fce0471d-8c63-4ddc-a0d4-d936ea245b4d Executed At: 17-01-2021 12:58:07 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
16:58 (1.0.0) [Information] (15) Http Request Information:
Request Id: 3e1e0a48-23b7-4802-8c06-de1521088e4d Executing At: 17-01-2021 12:58:36 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
16:58 (1.0.0) [Information] (15) Get Customer Email a@gmail.com
16:58 (1.0.0) [Information] (15) Http Response Information:
Request Id: 3e1e0a48-23b7-4802-8c06-de1521088e4d Executed At: 17-01-2021 12:58:36 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
16:58 (1.0.0) [Information] (15) Http Request Information:
Request Id: f71541dd-d04d-4b69-bfe9-481e4ceb4acd Executing At: 17-01-2021 12:58:36 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
16:58 (1.0.0) [Information] (15) Get all distinct customers nearest single slot
16:58 (1.0.0) [Information] (16) Http Response Information:
Request Id: f71541dd-d04d-4b69-bfe9-481e4ceb4acd Executed At: 17-01-2021 12:58:36 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 404 Response Body: ["no records found"] Compressed Body: GAAAAB+LCAAAAAAAAApTio5RystXKEpNzi9KKVZIyy/NS4lRilUCACgTBEUYAAAA 
17:00 (1.0.0) [Information] (20) Http Request Information:
Request Id: ae1f3863-ced7-4110-ada9-93b6577df752 Executing At: 17-01-2021 13:00:13 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
17:00 (1.0.0) [Information] (20) Get Customer Email a@gmail.com
17:00 (1.0.0) [Information] (22) Http Request Information:
Request Id: 11ade341-6ebc-4827-ad62-40e77335503d Executing At: 17-01-2021 13:00:13 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
17:00 (1.0.0) [Information] (23) Http Response Information:
Request Id: ae1f3863-ced7-4110-ada9-93b6577df752 Executed At: 17-01-2021 13:00:13 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
17:00 (1.0.0) [Information] (22) Get all distinct customers nearest single slot
17:00 (1.0.0) [Information] (20) Http Response Information:
Request Id: 11ade341-6ebc-4827-ad62-40e77335503d Executed At: 17-01-2021 13:00:13 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 404 Response Body: ["no records found"] Compressed Body: GAAAAB+LCAAAAAAAAApTio5RystXKEpNzi9KKVZIyy/NS4lRilUCACgTBEUYAAAA 
17:01 (1.0.0) [Information] (25) Http Request Information:
Request Id: c4ac251d-6adf-4556-b7bb-3d5225aa0250 Executing At: 17-01-2021 13:01:01 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
17:01 (1.0.0) [Information] (25) Get Customer Email a@gmail.com
17:01 (1.0.0) [Information] (25) Http Response Information:
Request Id: c4ac251d-6adf-4556-b7bb-3d5225aa0250 Executed At: 17-01-2021 13:01:01 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
17:01 (1.0.0) [Information] (25) Http Request Information:
Request Id: e3a1a420-f6a3-4e3f-a30e-a1439d566dbb Executing At: 17-01-2021 13:01:01 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
17:01 (1.0.0) [Information] (25) Get all distinct customers nearest single slot
17:01 (1.0.0) [Information] (25) Http Response Information:
Request Id: e3a1a420-f6a3-4e3f-a30e-a1439d566dbb Executed At: 17-01-2021 13:01:01 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 404 Response Body: ["no records found"] Compressed Body: GAAAAB+LCAAAAAAAAApTio5RystXKEpNzi9KKVZIyy/NS4lRilUCACgTBEUYAAAA 
17:01 (1.0.0) [Information] (26) Http Request Information:
Request Id: 241edaf0-6cd2-4713-a6bf-b82caf9efeb2 Executing At: 17-01-2021 13:01:11 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
17:01 (1.0.0) [Information] (26) Get Customer Email a@gmail.com
17:01 (1.0.0) [Information] (26) Http Response Information:
Request Id: 241edaf0-6cd2-4713-a6bf-b82caf9efeb2 Executed At: 17-01-2021 13:01:11 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
17:17 (1.0.0) [Information] (29) Http Request Information:
Request Id: 3c4217ca-a838-4abe-b8f7-0aa0c2596f7d Executing At: 17-01-2021 13:17:19 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
17:17 (1.0.0) [Information] (29) Get Customer Email a@gmail.com
17:17 (1.0.0) [Information] (31) Http Response Information:
Request Id: 3c4217ca-a838-4abe-b8f7-0aa0c2596f7d Executed At: 17-01-2021 13:17:19 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
17:22 (1.0.0) [Information] (35) Http Request Information:
Request Id: 092e4edd-a796-4ffa-9249-c79c5f855ff5 Executing At: 17-01-2021 13:22:13 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
17:22 (1.0.0) [Information] (35) Get Customer Email a@gmail.com
17:22 (1.0.0) [Information] (37) Http Response Information:
Request Id: 092e4edd-a796-4ffa-9249-c79c5f855ff5 Executed At: 17-01-2021 13:22:13 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
17:23 (1.0.0) [Information] (39) Http Request Information:
Request Id: 2c4dd0f6-67e2-4b2b-af77-67640d805a2c Executing At: 17-01-2021 13:23:44 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
17:23 (1.0.0) [Information] (39) Get Customer Email a@gmail.com
17:23 (1.0.0) [Information] (40) Http Response Information:
Request Id: 2c4dd0f6-67e2-4b2b-af77-67640d805a2c Executed At: 17-01-2021 13:23:45 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
17:23 (1.0.0) [Information] (40) Http Request Information:
Request Id: b767556d-12d6-4b58-a9c0-6d622379956b Executing At: 17-01-2021 13:23:45 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
17:23 (1.0.0) [Information] (40) Get all distinct customers nearest single slot
17:23 (1.0.0) [Information] (40) Http Response Information:
Request Id: b767556d-12d6-4b58-a9c0-6d622379956b Executed At: 17-01-2021 13:23:45 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 404 Response Body: ["no records found"] Compressed Body: GAAAAB+LCAAAAAAAAApTio5RystXKEpNzi9KKVZIyy/NS4lRilUCACgTBEUYAAAA 
17:23 (1.0.0) [Information] (39) Http Request Information:
Request Id: d1a28a80-8c0a-4ae8-bddc-50c05064f63a Executing At: 17-01-2021 13:23:55 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
17:23 (1.0.0) [Information] (39) Get Customer Email a@gmail.com
17:23 (1.0.0) [Information] (39) Http Response Information:
Request Id: d1a28a80-8c0a-4ae8-bddc-50c05064f63a Executed At: 17-01-2021 13:23:55 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
18:37 (1.0.0) [Information] (1) Starting web host
18:37 (1.0.0) [Information] (4) Http Request Information:
Request Id: a82b8f30-57f8-4cf0-9538-92615371ce39 Executing At: 17-01-2021 14:37:24 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Request Body:  Compressed Body:  
18:37 (1.0.0) [Information] (5) Http Request Information:
Request Id: e81e52c0-3e8a-4157-b787-4ea4a85f938a Executing At: 17-01-2021 14:37:24 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Request Body: {"title":"huhu","slotDate":"2021-01-24T00:00:00.000Z","timeZone":"India Standard Time","slotStartTime":"4:0:0","slotEndTime":"4:20:0"} Compressed Body: nAAAAB+LCAAAAAAAAApNjLEKgCAURX8l3lzxkibnGpprkrcIBgqmYK8p+vdEIYI7nXO4cBOwY78TSAJ72YugJTh95ElzpQLF0OHQiXFDlGU9IqpSsjt2FUMtl2CcblbWwehkmi277y7TxJXkcpT55nNzMD8jinrgBXRqDoucAAAA 
18:37 (1.0.0) [Information] (4) Http Response Information:
Request Id: a82b8f30-57f8-4cf0-9538-92615371ce39 Executed At: 17-01-2021 14:37:24 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Response Status Code: 200 Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>
      html
      {
        box-sizing: border-box;
        overflow: -moz-scrollbars-vertical;
        overflow-y: scroll;
      }

      *,
      *:before,
      *:after
      {
        box-sizing: inherit;
      }

      body
      {
        margin:0;
        background: #fafafa;
      }
    </style>
    
    
  </head>

  <body>
    <div id="swagger-ui"></div>

    <script src="./swagger-ui-bundle.js" charset="UTF-8"> </script>
    <script src="./swagger-ui-standalone-preset.js" charset="UTF-8"> </script>
    <script>
window.onload = function() {
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = undefined;
  }
  var urls = [{"url":"/swagger/v1/swagger.json","name":"v1"}];

  const disableTryItOutPlugin = function() {
    return {
      statePlugins: {
      spec: {
        wrapSelectors: {
          allowTryItOutFor: function() {
            return function() {
                return true;
              }
            }
          }
        }
      }
    }
  }

  // Build a system
  var ui = SwaggerUIBundle({
    url: url,
    urls: urls,  
    validatorUrl: null,
    oauth2RedirectUrl: window.location.origin + "/swagger/oauth2-redirect.html",

    docExpansion: "none", 
    operationsSorter: "none", 
    defaultModelsExpandDepth: 1, 
    defaultModelExpandDepth: 1, 
    tagsSorter: "none", 
    
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
        SwaggerUIBundle.plugins.DownloadUrl,
        disableTryItOutPlugin
    ],
    layout: "StandaloneLayout"
  });

  if ("client_id") {
    ui.initOAuth({
      clientId: "client_id",
      clientSecret: "client_secret",
      realm: "realm",
      appName: "app_name",
      scopeSeparator: " ",
      additionalQueryStringParams: {},
      usePkceWithAuthorizationCodeGrant: false
    });
  }

  window.ui = ui;
}
    </script>
    
  </body>
</html>
 Compressed Body: KQoAAB+LCAAAAAAAAAqlVoFu2zYQ/RVWBdKkjaQ5BYpBcwKsSbsFSBe3jjEMUVbQ0lniQpECSdlxivz7jhQlK4mKYpgNWMe7x0fq+O7oYPoiDMnvV58uyEoqog01LCM500axZWOYFGTZiJwDPhjPSRiepGL64uzy9Oqv2QdSmopbh30STkVxnAYg0gB9hExLoLmz0K7AUJKVVGkwCFpcfQx/9jiMGmY4nMw3tChAkcX5NG49PsyZuCUKOE7UZstBlwAmDYjZ1oA+A3cmzrRGT6lghZ4o1i1X2LCojYxwsUyKHQuraAFxLYohzYquLSp8e3T39ihqg5rdg8ao8+E4/n/Uk3d3k3dPqJ1vSO1e2w+IS3tnf+sMQpbyLkQGJooEbZXj66Prlx1ArkGtuNwkJKzkfagzJTlf4pmEGMCDp3wEHG4T0iL74EMqOvP1YW8lS0ANwcBBVwbUDzbKRAmKmTHupcy3I7Mrqgomkp8Ge13S7LZQEpWakJcrar9DQpfCeJjD3e809jJ1A7tkl/OcrQnLreZ6LaFipzH6PdweTKZYbYhW2RPZhW3dRP9Y8T0Xvt2Pm3ryQyIsSpFTLgWEtQKk+Y+cONowkctNJAWXNCfHZNWIzBb3/kGb2DVVpFEcIx7JZYadQIpIA1VZGVXUZOV+jJjj/eu/927eHMQHLsNsRfbtzL09SxBxEIUpyQmZeGbieXPIZA6LL+ensqrxVYSx064nNy3NAwGu4fEUzB+smIC8RQz2qTF6/S0N0EyDJA26bMXrSWdijmwFHqaBoBU41HqSBg83SGaZsPK0sY2OLjlcqe25uWzMjDeorJH8ECxr0yixk6HtlNDidTJw15ANhoRsFK3nwCEzUg2B9kM5lle39kepkpF1u49f//uAAcioBgbF8agMRoeDQW96wz18TcYxee9uAUr0Vhuo+iNhmDPfvRfn753w93dnmdgf3xbs6bmxPuyqcE05yynmZ2GhouEdVtLGlEdfIGcK8+eiT+UpFbMn9oYMRNBOC5WfF7luiUrwJZvL7MNdTYXG+QnOE6hGDPvNyBqUo9ZzqbB7PUegKGnDzSeUM9eOKT+D2pQJmYxBxhGGFt9doNtm9ZVhO3v1ctcKXvnE5AD1BV42roHa0/b+tj1gfq+7U3xyKJFHRLRm+vAZaN53mpnDtYCbjr1Te88+wt9iojO5cb0GD61fhoyX2+NFON3Kxtik7DZz4Xxp4KRo+0XXeNIg4wxbCSYqDXYNh0VMMHP5K8qgUyEWvEOeY0Yfzep31/rmkGERDTDaOdIdTgHllQU4YxCgdf0HthobQvNr23b6qM5QWXOoKarLVjo28OHcPGdWdJR/bkBt5/jvSxQzxFa2Zzz0uEbD7DaDP5kp7duh+u+dWE9Rab8pKnDnK4qN1Neu761twnzpuFptGEZ2F+Pw0mjvRH8P4uXY/sML/gWWz4gVKQoAAA== 
18:37 (1.0.0) [Information] (11) Http Request Information:
Request Id: dac32a33-7d2d-4d95-b10b-07d978a56065 Executing At: 17-01-2021 14:37:39 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Request Body:  Compressed Body:  
18:37 (1.0.0) [Information] (4) Http Response Information:
Request Id: e81e52c0-3e8a-4157-b787-4ea4a85f938a Executed At: 17-01-2021 14:37:41 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "30976ce3-4374-44e2-bf56-b42067cccf08" Compressed Body: KgAAAB+LCAAAAAAAAApTilEyNrA0N0tONdY1MTY30TUxSTXSTUozNdNNMjEyMDNPTk5OM7CIUVICAHkkh3QqAAAA 
18:37 (1.0.0) [Information] (11) Http Response Information:
Request Id: dac32a33-7d2d-4d95-b10b-07d978a56065 Executed At: 17-01-2021 14:37:41 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Response Status Code: 200 Response Body: {
  "x-generator": "NSwag v13.9.4.0 (NJsonSchema v10.3.1.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Bookmyslot Customer API",
    "description": "Bookmyslot Customer API to manage customer data",
    "termsOfService": "None",
    "contact": {
      "name": "TA",
      "email": ""
    },
    "license": {
      "name": ""
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://localhost:44382"
    }
  ],
  "paths": {
    "/api/v1/CustomerBookedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer booked slots",
        "operationId": "CustomerBookedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer booked slots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer completed slots",
        "operationId": "CustomerBookedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer completed slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer cancelled slots",
        "operationId": "CustomerBookedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer cancelled slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customers",
        "operationId": "Customer_Get",
        "responses": {
          "200": {
            "description": "Returns all customers"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create new customer",
        "operationId": "Customer_Post",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns email id of created customer"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update existing customer",
        "operationId": "Customer_Put",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer/{email}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customer by email",
        "operationId": "Customer_Get2",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "description": "customer email id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer details"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerYetToBeBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer YetToBeBookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerYetToBeBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer  YetToBeBookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer BookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer BookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CompletedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CompletedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CancelledSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CancelledSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetDistinctCustomersNearestSlotFromToday",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetCustomerAvailableSlots": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetCustomerAvailableSlots",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          },
          {
            "name": "customerInfo",
            "in": "query",
            "description": "customer info",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/email/ResendSlotMeetingInformation": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Resend slot information email to the customers",
        "operationId": "Email_ResendSlotMeetingInformation",
        "requestBody": {
          "x-name": "resendSlotInformation",
          "description": "slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendSlotInformation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot": {
      "get": {
        "tags": [
          "Slot"
        ],
        "summary": "Gets slot",
        "operationId": "Slot_Get",
        "parameters": [
          {
            "name": "slotId",
            "in": "query",
            "description": "slot id",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot"
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "slot id inappropriate",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Create new slot for the user",
        "operationId": "Slot_Post",
        "requestBody": {
          "x-name": "slotModel",
          "description": "slot model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns slot id of created slot"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot/CancelSlot": {
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Cancel User slot",
        "operationId": "Slot_CancelSlot",
        "requestBody": {
          "x-name": "cancelSlot",
          "description": "user slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelSlot"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/SlotScheduler": {
      "post": {
        "tags": [
          "SlotScheduler"
        ],
        "operationId": "SlotScheduler_Post",
        "requestBody": {
          "x-name": "slotSchedulerModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotSchedulerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {}
          }
        }
      },
      "CustomerModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "firstName",
          "lastName",
          "gender"
        ],
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "minLength": 1
          },
          "lastName": {
            "type": "string",
            "minLength": 1
          },
          "gender": {
            "type": "string",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ResendSlotInformation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "resendSlotModel": {
            "type": "string",
            "nullable": true
          },
          "resendTo": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "title",
          "timeZone",
          "slotDate",
          "slotStartTime",
          "slotEndTime"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "default": "00000000-0000-0000-0000-000000000000"
          },
          "title": {
            "type": "string",
            "minLength": 1
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "default": "India Standard Time",
            "minLength": 1
          },
          "slotDate": {
            "type": "string",
            "format": "date-time",
            "minLength": 1
          },
          "slotDateUtc": {
            "type": "string",
            "format": "date-time"
          },
          "slotStartTime": {
            "type": "string",
            "format": "time-span",
            "default": "10:00:00",
            "minLength": 1
          },
          "slotEndTime": {
            "type": "string",
            "format": "time-span",
            "default": "11:00:00",
            "minLength": 1
          },
          "slotDuration": {
            "type": "string",
            "format": "time-span"
          }
        }
      },
      "CancelSlot": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotKey": {
            "type": "string",
            "nullable": true
          },
          "cancelledBy": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotSchedulerModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotModelKey": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          }
        }
      }
    }
  }
} Compressed Body: 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 
18:37 (1.0.0) [Information] (4) Http Request Information:
Request Id: d4648790-c083-4d87-87f9-a0398f6398ae Executing At: 17-01-2021 14:37:55 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Request Body: {"title":"huhu","slotDate":"2021-02-08T20:00:00.000Z","timeZone":"India Standard Time","slotStartTime":"4:0:0","slotEndTime":"4:20:0"} Compressed Body: nAAAAB+LCAAAAAAAAApNjbEKgDAMBX9FMluJxUE66+Csk2QpVLBQK2icxH+3tVCETHfHC9wEbNktBIpgvdaLoCQ43c6d5kQlylqgFNhOEhXGqxBx/kq22zLvPpWDN1YXI2tv9GGKKbg8F+jBiYSyUWEmu96bn4lPCB54AYJLxmKcAAAA 
18:38 (1.0.0) [Information] (5) Http Response Information:
Request Id: d4648790-c083-4d87-87f9-a0398f6398ae Executed At: 17-01-2021 14:38:16 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "6d69b146-e2aa-4d40-a5b0-7aca533b5bbd" Compressed Body: KgAAAB+LCAAAAAAAAApTilEySzGzTDI0MdNNNUpM1DVJMTHQTTRNMtA1T0xONDU2TjJNSkqJUVICADSBuDwqAAAA 
18:40 (1.0.0) [Information] (16) Http Request Information:
Request Id: ff7356c0-3c39-4b68-b1d8-4b9990ee06d8 Executing At: 17-01-2021 14:40:43 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
18:40 (1.0.0) [Information] (16) Get Customer Email a@gmail.com
18:40 (1.0.0) [Information] (16) Http Response Information:
Request Id: ff7356c0-3c39-4b68-b1d8-4b9990ee06d8 Executed At: 17-01-2021 14:40:43 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
18:40 (1.0.0) [Information] (16) Http Request Information:
Request Id: 485b77e2-c997-4777-9754-8df1d5ac68ec Executing At: 17-01-2021 14:40:54 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Request Body: {"title":"dd","slotDate":"2021-01-24T00:00:00.000Z","timeZone":"India Standard Time","slotStartTime":"4:0:0","slotEndTime":"4:20:0"} Compressed Body: mgAAAB+LCAAAAAAAAApNjDELgCAQRv9K3FxxipNzDc01yS3CNQhlYLdF/z1RkOCb3nt88BBIkGMnsATMBD3BfVwyealMo1YDqkGbDdGWjYjoSinh3N0Va7lEDr5bxUf2ibstu3aXaZJKcmlsvmlujvwzuqgXPpXGFs2aAAAA 
18:41 (1.0.0) [Information] (17) Http Response Information:
Request Id: 485b77e2-c997-4777-9754-8df1d5ac68ec Executed At: 17-01-2021 14:41:20 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "6b7c212e-6ec2-42e2-842f-3b73830779a7" Compressed Body: KgAAAB+LCAAAAAAAAApTilEySzJPNjI0StU1S0020jUxSjXStTAxStM1TjI3tjA2MDe3TDSPUVICAM4N2B4qAAAA 
18:41 (1.0.0) [Information] (16) Http Request Information:
Request Id: 907566f0-aefe-4ffb-95e3-be615bbed304 Executing At: 17-01-2021 14:41:30 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Request Body: {"title":"dd","slotDate":"2021-02-02T00:00:00.000Z","timeZone":"India Standard Time","slotStartTime":"4:0:0","slotEndTime":"4:20:0"} Compressed Body: mgAAAB+LCAAAAAAAAApNjLEKgDAMBX9FMqvE4tRZB2edSpZCHAq1Bc0m/ruhBRHedHc8uAkkSNwJLAEzQUtwxSyTl8oMmqFDo9sQbVmPiK6UEo7d5VTLJXHwzSo+sT+52dR9d0pPqUTL0erN5+bEP2OKeuAFNTSL7ZoAAAA= 
18:41 (1.0.0) [Information] (16) Http Response Information:
Request Id: 907566f0-aefe-4ffb-95e3-be615bbed304 Executed At: 17-01-2021 14:41:46 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "fbc329c5-2d9b-44c2-bf90-bb339144ea59" Compressed Body: KgAAAB+LCAAAAAAAAApTilFKS0o2NrJMNtU1SrFM0jUxSTbSTUqzNNBNSjI2tjQ0MUlNNLWMUVICAFGfLKwqAAAA 
18:41 (1.0.0) [Information] (16) Http Request Information:
Request Id: 654fa665-d421-4261-a42f-10572e610913 Executing At: 17-01-2021 14:41:53 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Request Body: {"title":"dd","slotDate":"2021-02-02T00:00:00.000Z","timeZone":"India Standard Time","slotStartTime":"4:0:0","slotEndTime":"4:20:0"} Compressed Body: mgAAAB+LCAAAAAAAAApNjLEKgDAMBX9FMqvE4tRZB2edSpZCHAq1Bc0m/ruhBRHedHc8uAkkSNwJLAEzQUtwxSyTl8oMmqFDo9sQbVmPiK6UEo7d5VTLJXHwzSo+sT+52dR9d0pPqUTL0erN5+bEP2OKeuAFNTSL7ZoAAAA= 
18:42 (1.0.0) [Information] (21) Http Response Information:
Request Id: 654fa665-d421-4261-a42f-10572e610913 Executed At: 17-01-2021 14:42:07 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "326ea5cd-2287-4583-b488-1c5b5abe23da" Compressed Body: KgAAAB+LCAAAAAAAAAoFwbkBACAIBLBd6Ck8QBmGhm//FUwoSHA3rYcBf6zmwqXufNrKshYyGUQfJ3A0NioAAAA= 
18:42 (1.0.0) [Information] (16) Http Request Information:
Request Id: 0ce1c2bd-010c-4d17-84a0-4263cdc3accd Executing At: 17-01-2021 14:42:41 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Request Body: {"title":"dd","slotDate":"2021-02-02T00:00:00.000Z","timeZone":"India Standard Time","slotStartTime":"4:0:0","slotEndTime":"4:20:0"} Compressed Body: mgAAAB+LCAAAAAAAAApNjLEKgDAMBX9FMqvE4tRZB2edSpZCHAq1Bc0m/ruhBRHedHc8uAkkSNwJLAEzQUtwxSyTl8oMmqFDo9sQbVmPiK6UEo7d5VTLJXHwzSo+sT+52dR9d0pPqUTL0erN5+bEP2OKeuAFNTSL7ZoAAAA= 
18:43 (1.0.0) [Information] (22) Http Request Information:
Request Id: 1142d1ef-b05e-4d80-b8e5-5f73929dfe86 Executing At: 17-01-2021 14:43:37 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Request Body: {"title":"dd","slotDate":"2021-02-04T00:00:00.000Z","timeZone":"India Standard Time","slotStartTime":"4:0:0","slotEndTime":"4:20:0"} Compressed Body: mgAAAB+LCAAAAAAAAApNjDELgCAQRv+K3FxxiZNzDc01yS3CNQhlYLdF/z1RkOCb3nt88BBIkGMnsATMBB3BfVwyealMox571D2aDdGWDYjoSinh3N0Va7lEDl6t4iP7xGrLrt1lmqSSXBqbb5qbI/+MLuqFD1Pb7yyaAAAA 
18:43 (1.0.0) [Information] (16) Http Response Information:
Request Id: 0ce1c2bd-010c-4d17-84a0-4263cdc3accd Executed At: 17-01-2021 14:43:41 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "7faec4d1-c223-45b4-a3e1-5d4638e55756" Compressed Body: KgAAAB+LCAAAAAAAAApTilEyT0tMTTZJMdRNNjIy1jUxTTLRTTRONdQ1TTExM7ZINTU1NzWLUVICADxz30cqAAAA 
18:43 (1.0.0) [Information] (16) Http Response Information:
Request Id: 1142d1ef-b05e-4d80-b8e5-5f73929dfe86 Executed At: 17-01-2021 14:43:41 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "ce5fa569-6cff-4256-8f74-f8b2baf9a3a2" Compressed Body: KgAAAB+LCAAAAAAAAAoFwbEVADAEBcBd9BpB2EWDl7//CLmjon2GNk/2BVjFnANXGTEyjezTUkQfBuKinyoAAAA= 
18:43 (1.0.0) [Information] (16) Http Request Information:
Request Id: 1ee88501-cb4f-41d3-9cdf-b0a46ec0591d Executing At: 17-01-2021 14:43:51 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Request Body: {"title":"dd","slotDate":"2021-02-04T00:00:00.000Z","timeZone":"India Standard Time","slotStartTime":"4:0:0","slotEndTime":"4:20:0"} Compressed Body: mgAAAB+LCAAAAAAAAApNjDELgCAQRv+K3FxxiZNzDc01yS3CNQhlYLdF/z1RkOCb3nt88BBIkGMnsATMBB3BfVwyealMox571D2aDdGWDYjoSinh3N0Va7lEDl6t4iP7xGrLrt1lmqSSXBqbb5qbI/+MLuqFD1Pb7yyaAAAA 
18:43 (1.0.0) [Information] (20) Http Response Information:
Request Id: 1ee88501-cb4f-41d3-9cdf-b0a46ec0591d Executed At: 17-01-2021 14:43:53 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "1964ac7a-4bfe-49b2-ae33-4e0fa82b3ff2" Compressed Body: KgAAAB+LCAAAAAAAAApTilEytDQzSUw2T9Q1SUpL1TWxTDLSTUw1NtY1STVIS7QwSjJOSzOKUVICABY2e1kqAAAA 
18:44 (1.0.0) [Information] (16) Http Request Information:
Request Id: 4b3bd704-c8c6-42d7-8972-1755c1a3b223 Executing At: 17-01-2021 14:44:08 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Request Body: {"title":"dd","slotDate":"2021-02-04T00:00:00.000Z","timeZone":"India Standard Time","slotStartTime":"4:0:0","slotEndTime":"4:20:0"} Compressed Body: mgAAAB+LCAAAAAAAAApNjDELgCAQRv+K3FxxiZNzDc01yS3CNQhlYLdF/z1RkOCb3nt88BBIkGMnsATMBB3BfVwyealMox571D2aDdGWDYjoSinh3N0Va7lEDl6t4iP7xGrLrt1lmqSSXBqbb5qbI/+MLuqFD1Pb7yyaAAAA 
18:44 (1.0.0) [Information] (16) Http Response Information:
Request Id: 4b3bd704-c8c6-42d7-8972-1755c1a3b223 Executed At: 17-01-2021 14:44:15 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "0c811c07-8edc-41c8-9d85-19a40f4463f2" Compressed Body: KgAAAB+LCAAAAAAAAApTilEySLYwNEw2MNe1SE1J1jUxTLbQtUyxMNU1tEw0MUgzMTEzTjOKUVICANjhWfQqAAAA 
18:44 (1.0.0) [Information] (16) Http Request Information:
Request Id: 68309ac9-f744-4091-8f1b-7de0e379e8f7 Executing At: 17-01-2021 14:44:29 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Request Body: {"title":"dd","slotDate":"2021-02-03T00:00:00.000Z","timeZone":"India Standard Time","slotStartTime":"4:0:0","slotEndTime":"4:20:0"} Compressed Body: mgAAAB+LCAAAAAAAAApNjLEKgDAMBX9FMluJ1amzDs46SZZCOhRqC5pN/HdLCyK86e54cBOIl+AIDAEzQUtwhSSTlco06l6hVjhsiKasQ8S9lOIPt6dYyyWyt80qNrI9udmy++4yPaWSXI4m33xujvwzuqgHXpvkNXuaAAAA 
18:44 (1.0.0) [Information] (26) Http Response Information:
Request Id: 68309ac9-f744-4091-8f1b-7de0e379e8f7 Executed At: 17-01-2021 14:44:34 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "425d5dd8-6cd8-4094-86d1-0de90d8af899" Compressed Body: KgAAAB+LCAAAAAAAAApTilEyMTJNMU1JsdA1SwYSJgaWJroWZimGugYpqZYGKRaJaRaWljFKSgDNLH8cKgAAAA== 
19:54 (1.0.0) [Information] (33) Http Request Information:
Request Id: 87108da3-ad87-4b6c-b716-f40a52f5033e Executing At: 17-01-2021 15:54:27 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
19:54 (1.0.0) [Information] (33) Get Customer Email a@gmail.com
19:54 (1.0.0) [Information] (33) Http Response Information:
Request Id: 87108da3-ad87-4b6c-b716-f40a52f5033e Executed At: 17-01-2021 15:54:28 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
19:54 (1.0.0) [Information] (35) Http Request Information:
Request Id: f5886866-e9f1-45fd-9409-ec66d40d4c27 Executing At: 17-01-2021 15:54:47 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
19:54 (1.0.0) [Information] (35) Get Customer Email a@gmail.com
19:54 (1.0.0) [Information] (34) Http Response Information:
Request Id: f5886866-e9f1-45fd-9409-ec66d40d4c27 Executed At: 17-01-2021 15:54:47 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
19:55 (1.0.0) [Information] (33) Http Request Information:
Request Id: fa740ae5-7cb1-4e5f-a4c5-0981f8f43ce3 Executing At: 17-01-2021 15:55:03 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Request Body: {"title":"m","slotDate":"2021-01-23T00:00:00.000Z","timeZone":"India Standard Time","slotStartTime":"0:0:0","slotEndTime":"0:20:0"} Compressed Body: mQAAAB+LCAAAAAAAAApNjLEKgCAURX9F3lzxtM25huac5C2CDoIZ2Nuif08UIrjTOYcLNwFHToFAExwEA8GVTl4cd6RQyRHlqGaDqNsmRLSt5HgEe+ZebtlHJ3Z22bvihanuu6u0cCe1rCcaP7dm/zOqqQdetbM865kAAAA= 
19:55 (1.0.0) [Information] (33) Http Response Information:
Request Id: fa740ae5-7cb1-4e5f-a4c5-0981f8f43ce3 Executed At: 17-01-2021 15:55:18 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "c32d4033-8f31-4d8c-ba83-a3f00ecc3e04" Compressed Body: KgAAAB+LCAAAAAAAAApTilFKNjZKMTEwNta1SDM21DVJsUjWTUq0MNZNNE4zMEhNTjZONTCJUVICAChzgSwqAAAA 
19:56 (1.0.0) [Information] (38) Http Request Information:
Request Id: b33cfaed-1c7a-47ed-9d77-b32e925067f5 Executing At: 17-01-2021 15:56:48 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Request Body: {"title":"m","slotDate":"2021-01-23T00:00:00.000Z","timeZone":"India Standard Time","slotStartTime":"0:0:0","slotEndTime":"0:20:0"} Compressed Body: mQAAAB+LCAAAAAAAAApNjLEKgCAURX9F3lzxtM25huac5C2CDoIZ2Nuif08UIrjTOYcLNwFHToFAExwEA8GVTl4cd6RQyRHlqGaDqNsmRLSt5HgEe+ZebtlHJ3Z22bvihanuu6u0cCe1rCcaP7dm/zOqqQdetbM865kAAAA= 
19:56 (1.0.0) [Information] (38) Http Response Information:
Request Id: b33cfaed-1c7a-47ed-9d77-b32e925067f5 Executed At: 17-01-2021 15:56:50 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "352cf382-816b-495d-955d-e2270d9c84c2" Compressed Body: KgAAAB+LCAAAAAAAAApTilEyNjVKTjO2MNK1MDRL0jWxNE3RtTQFEqlGRuYGKZbJFibJRjFKSgCG5c9xKgAAAA== 
19:57 (1.0.0) [Information] (38) Http Request Information:
Request Id: 6540078e-93b5-43da-8649-09892b14b871 Executing At: 17-01-2021 15:57:12 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Request Body: {"title":"m","slotDate":"2021-02-02T00:00:00.000Z","timeZone":"India Standard Time","slotStartTime":"0:0:0","slotEndTime":"0:20:0"} Compressed Body: mQAAAB+LCAAAAAAAAApNjDsKgDAQBa8iW6usKVNrYa2VbBNIikA+ELcT7+6SQBBeNTM8eAjYc3AEmiASjAR3yLwabkihWiZUshNR182IeNWSfXRXTq3ck/VmONgka4odTnH9TmjhRqSUE43dbcn+jKrqhQ/dfnucmQAAAA== 
19:57 (1.0.0) [Information] (38) Http Response Information:
Request Id: 6540078e-93b5-43da-8649-09892b14b871 Executed At: 17-01-2021 15:57:34 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "507146ed-be4f-42e7-878c-619b7c9a485f" Compressed Body: KgAAAB+LCAAAAAAAAApTilEyNTA3NDFLTdFNSjVJ0zUxSjXXtTC3SNY1M7RMMk+2TDSxME2LUVICAKwHBXYqAAAA 
19:58 (1.0.0) [Information] (45) Http Request Information:
Request Id: 943250fd-1b68-4344-9e42-1228913443d7 Executing At: 17-01-2021 15:58:03 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Request Body: {"title":"m","slotDate":"2021-02-02T00:00:00.000Z","timeZone":"India Standard Time","slotStartTime":"0:0:0","slotEndTime":"0:20:0"} Compressed Body: mQAAAB+LCAAAAAAAAApNjDsKgDAQBa8iW6usKVNrYa2VbBNIikA+ELcT7+6SQBBeNTM8eAjYc3AEmiASjAR3yLwabkihWiZUshNR182IeNWSfXRXTq3ck/VmONgka4odTnH9TmjhRqSUE43dbcn+jKrqhQ/dfnucmQAAAA== 
19:58 (1.0.0) [Information] (46) Http Response Information:
Request Id: 943250fd-1b68-4344-9e42-1228913443d7 Executed At: 17-01-2021 15:58:05 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "1bd0ae29-6cb7-428b-8063-2bc7fcee01be" Compressed Body: KgAAAB+LCAAAAAAAAApTilEyTEoxSEw1stQ1S04y1zUxskjStTAwM9Y1Sko2T0tOTTUwTEqNUVICAGtKivUqAAAA 
19:58 (1.0.0) [Information] (43) Http Request Information:
Request Id: 2435e1b0-8437-425f-a592-d82084760bc3 Executing At: 17-01-2021 15:58:23 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Request Body: {"title":"m","slotDate":"2021-02-02T00:00:00.000Z","timeZone":"India Standard Time","slotStartTime":"0:0:0","slotEndTime":"0:20:0"} Compressed Body: mQAAAB+LCAAAAAAAAApNjDsKgDAQBa8iW6usKVNrYa2VbBNIikA+ELcT7+6SQBBeNTM8eAjYc3AEmiASjAR3yLwabkihWiZUshNR182IeNWSfXRXTq3ck/VmONgka4odTnH9TmjhRqSUE43dbcn+jKrqhQ/dfnucmQAAAA== 
19:58 (1.0.0) [Information] (46) Http Response Information:
Request Id: 2435e1b0-8437-425f-a592-d82084760bc3 Executed At: 17-01-2021 15:58:23 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "48443e39-2b95-4a98-816c-1c6b2a94a2f0" Compressed Body: KgAAAB+LCAAAAAAAAApTilEysTAxMU41ttQ1SrI01TVJtLTQtTA0S9Y1TDZLMkq0NEk0SjOIUVICAOIy1sEqAAAA 
19:58 (1.0.0) [Information] (43) Http Request Information:
Request Id: eeec0fa9-a15e-41b9-875d-f7b59333a494 Executing At: 17-01-2021 15:58:30 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
19:58 (1.0.0) [Information] (43) Get Customer Email a@gmail.com
19:58 (1.0.0) [Information] (43) Http Response Information:
Request Id: eeec0fa9-a15e-41b9-875d-f7b59333a494 Executed At: 17-01-2021 15:58:31 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
20:00 (1.0.0) [Information] (49) Http Request Information:
Request Id: 93d9c8b0-67e8-4e9d-ba07-c91a4cba79c7 Executing At: 17-01-2021 16:00:21 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Request Body: {"title":"m","slotDate":"2021-01-23T00:00:00.000Z","timeZone":"India Standard Time","slotStartTime":"0:0:0","slotEndTime":"0:20:0"} Compressed Body: mQAAAB+LCAAAAAAAAApNjLEKgCAURX9F3lzxtM25huac5C2CDoIZ2Nuif08UIrjTOYcLNwFHToFAExwEA8GVTl4cd6RQyRHlqGaDqNsmRLSt5HgEe+ZebtlHJ3Z22bvihanuu6u0cCe1rCcaP7dm/zOqqQdetbM865kAAAA= 
20:00 (1.0.0) [Information] (48) Http Response Information:
Request Id: 93d9c8b0-67e8-4e9d-ba07-c91a4cba79c7 Executed At: 17-01-2021 16:00:21 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "7d4ca703-a099-4285-af8a-7e66dc6b51c3" Compressed Body: KgAAAB+LCAAAAAAAAApTilEyTzFJTjQ3MNZNNLC01DUxsjDVTUyzSNQ1TzUzS0k2SzI1TDaOUVICAMIZPXgqAAAA 
20:01 (1.0.0) [Information] (50) Http Request Information:
Request Id: 40bbda13-bb18-4381-82ac-5fdaf00f94d3 Executing At: 17-01-2021 16:01:14 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Request Body: {"title":"m","slotDate":"2021-01-26T00:00:00.000Z","timeZone":"India Standard Time","slotStartTime":"0:0:0","slotEndTime":"0:20:0"} Compressed Body: mQAAAB+LCAAAAAAAAApNjLEKgCAURX9F3lzxdGhwrqE5J3mLoINgBva26N8ThQjudM7hwk3AkVMg0AQHwUBwpZMXxx0pVHJEOarZIOq2CRFtKzkewZ65l1v20YmdXfaueGGq++4qLdxJLeuJxs+t2f+MauqBF2Ar6kqZAAAA 
20:01 (1.0.0) [Information] (53) Http Response Information:
Request Id: 40bbda13-bb18-4381-82ac-5fdaf00f94d3 Executed At: 17-01-2021 16:01:20 Schema:https Host: localhost:4200 Path: /api/v1/slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "662dc24e-44f7-40e1-abef-ebdaf7d032b9" Compressed Body: KgAAAB+LCAAAAAAAAApTilEyMzNKSTYySdU1MUkz1zUxSDXUTUxKTdNNTUpJTDNPMTA2SrKMUVICAALiTykqAAAA 
20:01 (1.0.0) [Information] (50) Http Request Information:
Request Id: 1d2a4103-f283-4905-be90-acf2e749a032 Executing At: 17-01-2021 16:01:42 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
20:01 (1.0.0) [Information] (50) Get Customer Email a@gmail.com
20:01 (1.0.0) [Information] (50) Http Response Information:
Request Id: 1d2a4103-f283-4905-be90-acf2e749a032 Executed At: 17-01-2021 16:01:42 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
20:05 (1.0.0) [Information] (58) Http Request Information:
Request Id: d8ec01fc-e378-46b5-badd-feb68dae3f4c Executing At: 17-01-2021 16:05:06 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
20:05 (1.0.0) [Information] (58) Get Customer Email a@gmail.com
20:05 (1.0.0) [Information] (59) Http Response Information:
Request Id: d8ec01fc-e378-46b5-badd-feb68dae3f4c Executed At: 17-01-2021 16:05:06 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
20:12 (1.0.0) [Information] (63) Http Request Information:
Request Id: b408cd53-0f78-4c25-a382-85df56f54f93 Executing At: 17-01-2021 16:12:00 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
20:12 (1.0.0) [Information] (63) Get Customer Email a@gmail.com
20:12 (1.0.0) [Information] (67) Http Response Information:
Request Id: b408cd53-0f78-4c25-a382-85df56f54f93 Executed At: 17-01-2021 16:12:00 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
20:19 (1.0.0) [Information] (72) Http Request Information:
Request Id: 5af3723c-52b7-468d-98d0-cac8e44ed751 Executing At: 17-01-2021 16:19:56 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
20:19 (1.0.0) [Information] (72) Get Customer Email a@gmail.com
20:19 (1.0.0) [Information] (75) Http Response Information:
Request Id: 5af3723c-52b7-468d-98d0-cac8e44ed751 Executed At: 17-01-2021 16:19:56 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
20:20 (1.0.0) [Information] (76) Http Request Information:
Request Id: 238e6242-7e2b-49b9-a161-a1eb7234fd34 Executing At: 17-01-2021 16:20:53 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
20:20 (1.0.0) [Information] (76) Get Customer Email a@gmail.com
20:20 (1.0.0) [Information] (77) Http Response Information:
Request Id: 238e6242-7e2b-49b9-a161-a1eb7234fd34 Executed At: 17-01-2021 16:20:53 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
20:21 (1.0.0) [Information] (76) Http Request Information:
Request Id: df9f710f-ce50-4f1e-af1e-c7f3f9c99d46 Executing At: 17-01-2021 16:21:08 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
20:21 (1.0.0) [Information] (76) Get Customer Email a@gmail.com
20:21 (1.0.0) [Information] (79) Http Response Information:
Request Id: df9f710f-ce50-4f1e-af1e-c7f3f9c99d46 Executed At: 17-01-2021 16:21:08 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
22:08 (1.0.0) [Information] (1) Starting web host
22:09 (1.0.0) [Information] (4) Http Request Information:
Request Id: ba4a1bdc-c189-404b-9799-e6766c0e2c53 Executing At: 17-01-2021 18:09:00 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Request Body:  Compressed Body:  
22:09 (1.0.0) [Information] (4) Http Response Information:
Request Id: ba4a1bdc-c189-404b-9799-e6766c0e2c53 Executed At: 17-01-2021 18:09:00 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Response Status Code: 200 Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>
      html
      {
        box-sizing: border-box;
        overflow: -moz-scrollbars-vertical;
        overflow-y: scroll;
      }

      *,
      *:before,
      *:after
      {
        box-sizing: inherit;
      }

      body
      {
        margin:0;
        background: #fafafa;
      }
    </style>
    
    
  </head>

  <body>
    <div id="swagger-ui"></div>

    <script src="./swagger-ui-bundle.js" charset="UTF-8"> </script>
    <script src="./swagger-ui-standalone-preset.js" charset="UTF-8"> </script>
    <script>
window.onload = function() {
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = undefined;
  }
  var urls = [{"url":"/swagger/v1/swagger.json","name":"v1"}];

  const disableTryItOutPlugin = function() {
    return {
      statePlugins: {
      spec: {
        wrapSelectors: {
          allowTryItOutFor: function() {
            return function() {
                return true;
              }
            }
          }
        }
      }
    }
  }

  // Build a system
  var ui = SwaggerUIBundle({
    url: url,
    urls: urls,  
    validatorUrl: null,
    oauth2RedirectUrl: window.location.origin + "/swagger/oauth2-redirect.html",

    docExpansion: "none", 
    operationsSorter: "none", 
    defaultModelsExpandDepth: 1, 
    defaultModelExpandDepth: 1, 
    tagsSorter: "none", 
    
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
        SwaggerUIBundle.plugins.DownloadUrl,
        disableTryItOutPlugin
    ],
    layout: "StandaloneLayout"
  });

  if ("client_id") {
    ui.initOAuth({
      clientId: "client_id",
      clientSecret: "client_secret",
      realm: "realm",
      appName: "app_name",
      scopeSeparator: " ",
      additionalQueryStringParams: {},
      usePkceWithAuthorizationCodeGrant: false
    });
  }

  window.ui = ui;
}
    </script>
    
  </body>
</html>
 Compressed Body: KQoAAB+LCAAAAAAAAAqlVoFu2zYQ/RVWBdKkjaQ5BYpBcwKsSbsFSBe3jjEMUVbQ0lniQpECSdlxivz7jhQlK4mKYpgNWMe7x0fq+O7oYPoiDMnvV58uyEoqog01LCM500axZWOYFGTZiJwDPhjPSRiepGL64uzy9Oqv2QdSmopbh30STkVxnAYg0gB9hExLoLmz0K7AUJKVVGkwCFpcfQx/9jiMGmY4nMw3tChAkcX5NG49PsyZuCUKOE7UZstBlwAmDYjZ1oA+A3cmzrRGT6lghZ4o1i1X2LCojYxwsUyKHQuraAFxLYohzYquLSp8e3T39ihqg5rdg8ao8+E4/n/Uk3d3k3dPqJ1vSO1e2w+IS3tnf+sMQpbyLkQGJooEbZXj66Prlx1ArkGtuNwkJKzkfagzJTlf4pmEGMCDp3wEHG4T0iL74EMqOvP1YW8lS0ANwcBBVwbUDzbKRAmKmTHupcy3I7Mrqgomkp8Ge13S7LZQEpWakJcrar9DQpfCeJjD3e809jJ1A7tkl/OcrQnLreZ6LaFipzH6PdweTKZYbYhW2RPZhW3dRP9Y8T0Xvt2Pm3ryQyIsSpFTLgWEtQKk+Y+cONowkctNJAWXNCfHZNWIzBb3/kGb2DVVpFEcIx7JZYadQIpIA1VZGVXUZOV+jJjj/eu/927eHMQHLsNsRfbtzL09SxBxEIUpyQmZeGbieXPIZA6LL+ensqrxVYSx064nNy3NAwGu4fEUzB+smIC8RQz2qTF6/S0N0EyDJA26bMXrSWdijmwFHqaBoBU41HqSBg83SGaZsPK0sY2OLjlcqe25uWzMjDeorJH8ECxr0yixk6HtlNDidTJw15ANhoRsFK3nwCEzUg2B9kM5lle39kepkpF1u49f//uAAcioBgbF8agMRoeDQW96wz18TcYxee9uAUr0Vhuo+iNhmDPfvRfn753w93dnmdgf3xbs6bmxPuyqcE05yynmZ2GhouEdVtLGlEdfIGcK8+eiT+UpFbMn9oYMRNBOC5WfF7luiUrwJZvL7MNdTYXG+QnOE6hGDPvNyBqUo9ZzqbB7PUegKGnDzSeUM9eOKT+D2pQJmYxBxhGGFt9doNtm9ZVhO3v1ctcKXvnE5AD1BV42roHa0/b+tj1gfq+7U3xyKJFHRLRm+vAZaN53mpnDtYCbjr1Te88+wt9iojO5cb0GD61fhoyX2+NFON3Kxtik7DZz4Xxp4KRo+0XXeNIg4wxbCSYqDXYNh0VMMHP5K8qgUyEWvEOeY0Yfzep31/rmkGERDTDaOdIdTgHllQU4YxCgdf0HthobQvNr23b6qM5QWXOoKarLVjo28OHcPGdWdJR/bkBt5/jvSxQzxFa2Zzz0uEbD7DaDP5kp7duh+u+dWE9Rab8pKnDnK4qN1Neu761twnzpuFptGEZ2F+Pw0mjvRH8P4uXY/sML/gWWz4gVKQoAAA== 
22:09 (1.0.0) [Information] (4) Http Request Information:
Request Id: dc159d0b-a726-4e44-9357-d5e59c2aa31a Executing At: 17-01-2021 18:09:02 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Request Body:  Compressed Body:  
22:09 (1.0.0) [Information] (4) Http Response Information:
Request Id: dc159d0b-a726-4e44-9357-d5e59c2aa31a Executed At: 17-01-2021 18:09:03 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Response Status Code: 200 Response Body: {
  "x-generator": "NSwag v13.9.4.0 (NJsonSchema v10.3.1.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Bookmyslot Customer API",
    "description": "Bookmyslot Customer API to manage customer data",
    "termsOfService": "None",
    "contact": {
      "name": "TA",
      "email": ""
    },
    "license": {
      "name": ""
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://localhost:44382"
    }
  ],
  "paths": {
    "/api/v1/CustomerBookedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer booked slots",
        "operationId": "CustomerBookedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer booked slots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer completed slots",
        "operationId": "CustomerBookedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer completed slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer cancelled slots",
        "operationId": "CustomerBookedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer cancelled slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customers",
        "operationId": "Customer_Get",
        "responses": {
          "200": {
            "description": "Returns all customers"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create new customer",
        "operationId": "Customer_Post",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns email id of created customer"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update existing customer",
        "operationId": "Customer_Put",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer/{email}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customer by email",
        "operationId": "Customer_Get2",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "description": "customer email id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer details"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerYetToBeBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer YetToBeBookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerYetToBeBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer  YetToBeBookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer BookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer BookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CompletedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CompletedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CancelledSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CancelledSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetDistinctCustomersNearestSlotFromToday",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetCustomerAvailableSlots": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetCustomerAvailableSlots",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          },
          {
            "name": "customerInfo",
            "in": "query",
            "description": "customer info",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/email/ResendSlotMeetingInformation": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Resend slot information email to the customers",
        "operationId": "Email_ResendSlotMeetingInformation",
        "requestBody": {
          "x-name": "resendSlotInformation",
          "description": "slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendSlotInformation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot": {
      "get": {
        "tags": [
          "Slot"
        ],
        "summary": "Gets slot",
        "operationId": "Slot_Get",
        "parameters": [
          {
            "name": "slotId",
            "in": "query",
            "description": "slot id",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot"
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "slot id inappropriate",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Create new slot for the user",
        "operationId": "Slot_Post",
        "requestBody": {
          "x-name": "slotModel",
          "description": "slot model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns slot id of created slot"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot/CancelSlot": {
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Cancel User slot",
        "operationId": "Slot_CancelSlot",
        "requestBody": {
          "x-name": "cancelSlot",
          "description": "user slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelSlot"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/SlotScheduler": {
      "post": {
        "tags": [
          "SlotScheduler"
        ],
        "operationId": "SlotScheduler_Post",
        "requestBody": {
          "x-name": "slotSchedulerModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotSchedulerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {}
          }
        }
      },
      "CustomerModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "firstName",
          "lastName",
          "gender"
        ],
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "minLength": 1
          },
          "lastName": {
            "type": "string",
            "minLength": 1
          },
          "gender": {
            "type": "string",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ResendSlotInformation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "resendSlotModel": {
            "type": "string",
            "nullable": true
          },
          "resendTo": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "title",
          "timeZone",
          "slotDate",
          "slotStartTime",
          "slotEndTime"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "default": "00000000-0000-0000-0000-000000000000"
          },
          "title": {
            "type": "string",
            "minLength": 1
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "default": "India Standard Time",
            "minLength": 1
          },
          "slotDate": {
            "type": "string",
            "default": "1-3-2021",
            "minLength": 1
          },
          "slotStartTime": {
            "type": "string",
            "format": "time-span",
            "default": "10:00:00",
            "minLength": 1
          },
          "slotEndTime": {
            "type": "string",
            "format": "time-span",
            "default": "11:00:00",
            "minLength": 1
          },
          "slotDuration": {
            "type": "string",
            "format": "time-span"
          }
        }
      },
      "CancelSlot": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotKey": {
            "type": "string",
            "nullable": true
          },
          "cancelledBy": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotSchedulerModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotModelKey": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          }
        }
      }
    }
  }
} Compressed Body: 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 
22:11 (1.0.0) [Information] (14) Http Request Information:
Request Id: 00769a3d-19a4-4574-9f82-892ccfa41ff3 Executing At: 17-01-2021 18:11:45 Schema:https Host: localhost:44382 Path: /api/v1/Slot Method Type: POST QueryString:  Request Body: {"id":"00000000-0000-0000-0000-000000000000","title":"string","createdBy":"string","bookedBy":"string","timeZone":"India Standard Time","slotDate":"1-3-2021","slotStartTime":"10:00:00","slotEndTime":"11:00:00","slotDuration":"string"} Compressed Body: EAEAAB+LCAAAAAAAAAptjjELwkAMhf9KyezBXd06Sh2cdZJbTnNIsCZwjYOI/93rVSuWPkKG9708Ak8PhB4aD/Yjs7C+8rDyoKRdLCe9JuJLMc8pBo24eczBSeS65Cvd4lF4LNoxUqj2GhhDwuqQWQn1nWibe0vImbWpbe0mkvNJx+yAbWOHmfCW8QfdDLb3FJSE/956wRtIBseiEAEAAA== 
22:11 (1.0.0) [Error] (14) 00769a3d-19a4-4574-9f82-892ccfa41ff3 Input string was not in a correct format.

22:11 (1.0.0) [Error] (14) 00769a3d-19a4-4574-9f82-892ccfa41ff3    at System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)
   at System.Number.ParseInt32(ReadOnlySpan`1 value, NumberStyles styles, NumberFormatInfo info)
   at System.Convert.ToInt32(String value)
   at Bookmyslot.Api.Common.Contracts.Helpers.DateTimeHelper.ConvertDateStringToDateTime(String dateString) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\Common\Bookmyslot.Api.Common.Contracts\Helpers\DateTimeHelper.cs:line 14
   at Bookmyslot.Api.SlotScheduler.Business.SlotBusiness.CreateSlot(SlotModel slotModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\SlotScheduler\Bookmyslot.Api.SlotScheduler.Business\SlotBusiness.cs:line 37
   at Bookmyslot.Api.Controllers.SlotController.Post(SlotModel slotModel) in C:\Users\taruna\Desktop\BookMySlot\BookMySlot\BookMySlot\Bookmyslot.Api\Controllers\SlotController.cs:line 81
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.SwaggerUiIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.RedirectToIndexMiddleware.Invoke(HttpContext context)
   at NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
22:11 (1.0.0) [Information] (14) Http Response Information:
Request Id: 00769a3d-19a4-4574-9f82-892ccfa41ff3 Executed At: 17-01-2021 18:11:57 Schema:https Host: localhost:44382 Path: /api/v1/Slot Method Type: POST QueryString:  Response Status Code: 500 Response Body: ["Internal Server Error"] Compressed Body: HQAAAB+LCAAAAAAAAApTio5R8swrSS3KS8xRCE4tKkstUnAtKsovilGKVQIApHQvcB0AAAA= 
22:12 (1.0.0) [Information] (17) Http Request Information:
Request Id: b8f69e7c-1d01-4bed-8edf-1c5c32db8706 Executing At: 17-01-2021 18:12:19 Schema:https Host: localhost:44382 Path: /api/v1/Slot Method Type: POST QueryString:  Request Body: {"id":"00000000-0000-0000-0000-000000000000","title":"string","createdBy":"string","bookedBy":"string","timeZone":"India Standard Time","slotDate":"1-3-2021","slotStartTime":"10:00:00","slotEndTime":"11:00:00","slotDuration":"string"} Compressed Body: EAEAAB+LCAAAAAAAAAptjjELwkAMhf9KyezBXd06Sh2cdZJbTnNIsCZwjYOI/93rVSuWPkKG9708Ak8PhB4aD/Yjs7C+8rDyoKRdLCe9JuJLMc8pBo24eczBSeS65Cvd4lF4LNoxUqj2GhhDwuqQWQn1nWibe0vImbWpbe0mkvNJx+yAbWOHmfCW8QfdDLb3FJSE/956wRtIBseiEAEAAA== 
22:13 (1.0.0) [Information] (1) Starting web host
22:13 (1.0.0) [Information] (4) Http Request Information:
Request Id: b2d6f4b6-d354-49bf-98cb-69f666692f86 Executing At: 17-01-2021 18:13:51 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Request Body:  Compressed Body:  
22:13 (1.0.0) [Information] (4) Http Response Information:
Request Id: b2d6f4b6-d354-49bf-98cb-69f666692f86 Executed At: 17-01-2021 18:13:51 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Response Status Code: 200 Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>
      html
      {
        box-sizing: border-box;
        overflow: -moz-scrollbars-vertical;
        overflow-y: scroll;
      }

      *,
      *:before,
      *:after
      {
        box-sizing: inherit;
      }

      body
      {
        margin:0;
        background: #fafafa;
      }
    </style>
    
    
  </head>

  <body>
    <div id="swagger-ui"></div>

    <script src="./swagger-ui-bundle.js" charset="UTF-8"> </script>
    <script src="./swagger-ui-standalone-preset.js" charset="UTF-8"> </script>
    <script>
window.onload = function() {
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = undefined;
  }
  var urls = [{"url":"/swagger/v1/swagger.json","name":"v1"}];

  const disableTryItOutPlugin = function() {
    return {
      statePlugins: {
      spec: {
        wrapSelectors: {
          allowTryItOutFor: function() {
            return function() {
                return true;
              }
            }
          }
        }
      }
    }
  }

  // Build a system
  var ui = SwaggerUIBundle({
    url: url,
    urls: urls,  
    validatorUrl: null,
    oauth2RedirectUrl: window.location.origin + "/swagger/oauth2-redirect.html",

    docExpansion: "none", 
    operationsSorter: "none", 
    defaultModelsExpandDepth: 1, 
    defaultModelExpandDepth: 1, 
    tagsSorter: "none", 
    
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
        SwaggerUIBundle.plugins.DownloadUrl,
        disableTryItOutPlugin
    ],
    layout: "StandaloneLayout"
  });

  if ("client_id") {
    ui.initOAuth({
      clientId: "client_id",
      clientSecret: "client_secret",
      realm: "realm",
      appName: "app_name",
      scopeSeparator: " ",
      additionalQueryStringParams: {},
      usePkceWithAuthorizationCodeGrant: false
    });
  }

  window.ui = ui;
}
    </script>
    
  </body>
</html>
 Compressed Body: KQoAAB+LCAAAAAAAAAqlVoFu2zYQ/RVWBdKkjaQ5BYpBcwKsSbsFSBe3jjEMUVbQ0lniQpECSdlxivz7jhQlK4mKYpgNWMe7x0fq+O7oYPoiDMnvV58uyEoqog01LCM500axZWOYFGTZiJwDPhjPSRiepGL64uzy9Oqv2QdSmopbh30STkVxnAYg0gB9hExLoLmz0K7AUJKVVGkwCFpcfQx/9jiMGmY4nMw3tChAkcX5NG49PsyZuCUKOE7UZstBlwAmDYjZ1oA+A3cmzrRGT6lghZ4o1i1X2LCojYxwsUyKHQuraAFxLYohzYquLSp8e3T39ihqg5rdg8ao8+E4/n/Uk3d3k3dPqJ1vSO1e2w+IS3tnf+sMQpbyLkQGJooEbZXj66Prlx1ArkGtuNwkJKzkfagzJTlf4pmEGMCDp3wEHG4T0iL74EMqOvP1YW8lS0ANwcBBVwbUDzbKRAmKmTHupcy3I7Mrqgomkp8Ge13S7LZQEpWakJcrar9DQpfCeJjD3e809jJ1A7tkl/OcrQnLreZ6LaFipzH6PdweTKZYbYhW2RPZhW3dRP9Y8T0Xvt2Pm3ryQyIsSpFTLgWEtQKk+Y+cONowkctNJAWXNCfHZNWIzBb3/kGb2DVVpFEcIx7JZYadQIpIA1VZGVXUZOV+jJjj/eu/927eHMQHLsNsRfbtzL09SxBxEIUpyQmZeGbieXPIZA6LL+ensqrxVYSx064nNy3NAwGu4fEUzB+smIC8RQz2qTF6/S0N0EyDJA26bMXrSWdijmwFHqaBoBU41HqSBg83SGaZsPK0sY2OLjlcqe25uWzMjDeorJH8ECxr0yixk6HtlNDidTJw15ANhoRsFK3nwCEzUg2B9kM5lle39kepkpF1u49f//uAAcioBgbF8agMRoeDQW96wz18TcYxee9uAUr0Vhuo+iNhmDPfvRfn753w93dnmdgf3xbs6bmxPuyqcE05yynmZ2GhouEdVtLGlEdfIGcK8+eiT+UpFbMn9oYMRNBOC5WfF7luiUrwJZvL7MNdTYXG+QnOE6hGDPvNyBqUo9ZzqbB7PUegKGnDzSeUM9eOKT+D2pQJmYxBxhGGFt9doNtm9ZVhO3v1ctcKXvnE5AD1BV42roHa0/b+tj1gfq+7U3xyKJFHRLRm+vAZaN53mpnDtYCbjr1Te88+wt9iojO5cb0GD61fhoyX2+NFON3Kxtik7DZz4Xxp4KRo+0XXeNIg4wxbCSYqDXYNh0VMMHP5K8qgUyEWvEOeY0Yfzep31/rmkGERDTDaOdIdTgHllQU4YxCgdf0HthobQvNr23b6qM5QWXOoKarLVjo28OHcPGdWdJR/bkBt5/jvSxQzxFa2Zzz0uEbD7DaDP5kp7duh+u+dWE9Rab8pKnDnK4qN1Neu761twnzpuFptGEZ2F+Pw0mjvRH8P4uXY/sML/gWWz4gVKQoAAA== 
22:13 (1.0.0) [Information] (5) Http Request Information:
Request Id: 8777d6f1-fa38-4d25-afd2-1a224603efc1 Executing At: 17-01-2021 18:13:52 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Request Body:  Compressed Body:  
22:13 (1.0.0) [Information] (5) Http Response Information:
Request Id: 8777d6f1-fa38-4d25-afd2-1a224603efc1 Executed At: 17-01-2021 18:13:53 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Response Status Code: 200 Response Body: {
  "x-generator": "NSwag v13.9.4.0 (NJsonSchema v10.3.1.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Bookmyslot Customer API",
    "description": "Bookmyslot Customer API to manage customer data",
    "termsOfService": "None",
    "contact": {
      "name": "TA",
      "email": ""
    },
    "license": {
      "name": ""
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://localhost:44382"
    }
  ],
  "paths": {
    "/api/v1/CustomerBookedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer booked slots",
        "operationId": "CustomerBookedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer booked slots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer completed slots",
        "operationId": "CustomerBookedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer completed slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer cancelled slots",
        "operationId": "CustomerBookedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer cancelled slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customers",
        "operationId": "Customer_Get",
        "responses": {
          "200": {
            "description": "Returns all customers"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create new customer",
        "operationId": "Customer_Post",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns email id of created customer"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update existing customer",
        "operationId": "Customer_Put",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer/{email}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customer by email",
        "operationId": "Customer_Get2",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "description": "customer email id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer details"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerYetToBeBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer YetToBeBookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerYetToBeBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer  YetToBeBookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer BookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer BookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CompletedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CompletedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CancelledSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CancelledSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetDistinctCustomersNearestSlotFromToday",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetCustomerAvailableSlots": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetCustomerAvailableSlots",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          },
          {
            "name": "customerInfo",
            "in": "query",
            "description": "customer info",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/email/ResendSlotMeetingInformation": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Resend slot information email to the customers",
        "operationId": "Email_ResendSlotMeetingInformation",
        "requestBody": {
          "x-name": "resendSlotInformation",
          "description": "slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendSlotInformation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot": {
      "get": {
        "tags": [
          "Slot"
        ],
        "summary": "Gets slot",
        "operationId": "Slot_Get",
        "parameters": [
          {
            "name": "slotId",
            "in": "query",
            "description": "slot id",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot"
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "slot id inappropriate",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Create new slot for the user",
        "operationId": "Slot_Post",
        "requestBody": {
          "x-name": "slotModel",
          "description": "slot model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns slot id of created slot"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot/CancelSlot": {
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Cancel User slot",
        "operationId": "Slot_CancelSlot",
        "requestBody": {
          "x-name": "cancelSlot",
          "description": "user slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelSlot"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/SlotScheduler": {
      "post": {
        "tags": [
          "SlotScheduler"
        ],
        "operationId": "SlotScheduler_Post",
        "requestBody": {
          "x-name": "slotSchedulerModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotSchedulerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {}
          }
        }
      },
      "CustomerModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "firstName",
          "lastName",
          "gender"
        ],
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "minLength": 1
          },
          "lastName": {
            "type": "string",
            "minLength": 1
          },
          "gender": {
            "type": "string",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ResendSlotInformation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "resendSlotModel": {
            "type": "string",
            "nullable": true
          },
          "resendTo": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "title",
          "timeZone",
          "slotDate",
          "slotStartTime",
          "slotEndTime"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "default": "00000000-0000-0000-0000-000000000000"
          },
          "title": {
            "type": "string",
            "minLength": 1
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "default": "India Standard Time",
            "minLength": 1
          },
          "slotDate": {
            "type": "string",
            "default": "1-3-2021",
            "minLength": 1
          },
          "slotStartTime": {
            "type": "string",
            "format": "time-span",
            "default": "10:00:00",
            "minLength": 1
          },
          "slotEndTime": {
            "type": "string",
            "format": "time-span",
            "default": "11:00:00",
            "minLength": 1
          },
          "slotDuration": {
            "type": "string",
            "format": "time-span"
          }
        }
      },
      "CancelSlot": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotKey": {
            "type": "string",
            "nullable": true
          },
          "cancelledBy": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotSchedulerModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotModelKey": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          }
        }
      }
    }
  }
} Compressed Body: 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 
22:14 (1.0.0) [Information] (4) Http Request Information:
Request Id: 2832a981-eff6-4774-819f-8ba241421c07 Executing At: 17-01-2021 18:14:00 Schema:https Host: localhost:44382 Path: /api/v1/Slot Method Type: POST QueryString:  Request Body: {"id":"00000000-0000-0000-0000-000000000000","title":"string","createdBy":"string","bookedBy":"string","timeZone":"India Standard Time","slotDate":"1-3-2021","slotStartTime":"10:00:00","slotEndTime":"11:00:00","slotDuration":"string"} Compressed Body: EAEAAB+LCAAAAAAAAAptjjELwkAMhf9KyezBXd06Sh2cdZJbTnNIsCZwjYOI/93rVSuWPkKG9708Ak8PhB4aD/Yjs7C+8rDyoKRdLCe9JuJLMc8pBo24eczBSeS65Cvd4lF4LNoxUqj2GhhDwuqQWQn1nWibe0vImbWpbe0mkvNJx+yAbWOHmfCW8QfdDLb3FJSE/956wRtIBseiEAEAAA== 
22:15 (1.0.0) [Information] (13) Http Response Information:
Request Id: 2832a981-eff6-4774-819f-8ba241421c07 Executed At: 17-01-2021 18:15:38 Schema:https Host: localhost:44382 Path: /api/v1/Slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "2bf92101-4e23-41a5-9616-01d61c102bed" Compressed Body: KgAAAB+LCAAAAAAAAApTilEySkqzNDI0MNQ1STUy1jUxTDTVtTQzNNM1MEwxM0w2NDBKSk2JUVICADVNXyUqAAAA 
22:16 (1.0.0) [Information] (16) Http Request Information:
Request Id: 771c94fb-e6b1-4936-8c85-eee539f866e9 Executing At: 17-01-2021 18:16:16 Schema:https Host: localhost:44382 Path: /api/v1/Slot Method Type: POST QueryString:  Request Body: {"id":"00000000-0000-0000-0000-000000000000","title":"string","createdBy":"string","bookedBy":"string","timeZone":"India Standard Time","slotDate":"1-3-2021","slotStartTime":"10:00:00","slotEndTime":"11:00:00","slotDuration":"string"} Compressed Body: EAEAAB+LCAAAAAAAAAptjjELwkAMhf9KyezBXd06Sh2cdZJbTnNIsCZwjYOI/93rVSuWPkKG9708Ak8PhB4aD/Yjs7C+8rDyoKRdLCe9JuJLMc8pBo24eczBSeS65Cvd4lF4LNoxUqj2GhhDwuqQWQn1nWibe0vImbWpbe0mkvNJx+yAbWOHmfCW8QfdDLb3FJSE/956wRtIBseiEAEAAA== 
22:19 (1.0.0) [Information] (1) Starting web host
22:19 (1.0.0) [Information] (10) Http Request Information:
Request Id: 6629e7e3-fb99-4282-9b71-3689e6585af1 Executing At: 17-01-2021 18:19:20 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Request Body:  Compressed Body:  
22:19 (1.0.0) [Information] (10) Http Response Information:
Request Id: 6629e7e3-fb99-4282-9b71-3689e6585af1 Executed At: 17-01-2021 18:19:22 Schema:https Host: localhost:44382 Path: /swagger/index.html Method Type: GET QueryString:  Response Status Code: 200 Response Body: <!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>
      html
      {
        box-sizing: border-box;
        overflow: -moz-scrollbars-vertical;
        overflow-y: scroll;
      }

      *,
      *:before,
      *:after
      {
        box-sizing: inherit;
      }

      body
      {
        margin:0;
        background: #fafafa;
      }
    </style>
    
    
  </head>

  <body>
    <div id="swagger-ui"></div>

    <script src="./swagger-ui-bundle.js" charset="UTF-8"> </script>
    <script src="./swagger-ui-standalone-preset.js" charset="UTF-8"> </script>
    <script>
window.onload = function() {
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = undefined;
  }
  var urls = [{"url":"/swagger/v1/swagger.json","name":"v1"}];

  const disableTryItOutPlugin = function() {
    return {
      statePlugins: {
      spec: {
        wrapSelectors: {
          allowTryItOutFor: function() {
            return function() {
                return true;
              }
            }
          }
        }
      }
    }
  }

  // Build a system
  var ui = SwaggerUIBundle({
    url: url,
    urls: urls,  
    validatorUrl: null,
    oauth2RedirectUrl: window.location.origin + "/swagger/oauth2-redirect.html",

    docExpansion: "none", 
    operationsSorter: "none", 
    defaultModelsExpandDepth: 1, 
    defaultModelExpandDepth: 1, 
    tagsSorter: "none", 
    
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
        SwaggerUIBundle.plugins.DownloadUrl,
        disableTryItOutPlugin
    ],
    layout: "StandaloneLayout"
  });

  if ("client_id") {
    ui.initOAuth({
      clientId: "client_id",
      clientSecret: "client_secret",
      realm: "realm",
      appName: "app_name",
      scopeSeparator: " ",
      additionalQueryStringParams: {},
      usePkceWithAuthorizationCodeGrant: false
    });
  }

  window.ui = ui;
}
    </script>
    
  </body>
</html>
 Compressed Body: KQoAAB+LCAAAAAAAAAqlVoFu2zYQ/RVWBdKkjaQ5BYpBcwKsSbsFSBe3jjEMUVbQ0lniQpECSdlxivz7jhQlK4mKYpgNWMe7x0fq+O7oYPoiDMnvV58uyEoqog01LCM500axZWOYFGTZiJwDPhjPSRiepGL64uzy9Oqv2QdSmopbh30STkVxnAYg0gB9hExLoLmz0K7AUJKVVGkwCFpcfQx/9jiMGmY4nMw3tChAkcX5NG49PsyZuCUKOE7UZstBlwAmDYjZ1oA+A3cmzrRGT6lghZ4o1i1X2LCojYxwsUyKHQuraAFxLYohzYquLSp8e3T39ihqg5rdg8ao8+E4/n/Uk3d3k3dPqJ1vSO1e2w+IS3tnf+sMQpbyLkQGJooEbZXj66Prlx1ArkGtuNwkJKzkfagzJTlf4pmEGMCDp3wEHG4T0iL74EMqOvP1YW8lS0ANwcBBVwbUDzbKRAmKmTHupcy3I7Mrqgomkp8Ge13S7LZQEpWakJcrar9DQpfCeJjD3e809jJ1A7tkl/OcrQnLreZ6LaFipzH6PdweTKZYbYhW2RPZhW3dRP9Y8T0Xvt2Pm3ryQyIsSpFTLgWEtQKk+Y+cONowkctNJAWXNCfHZNWIzBb3/kGb2DVVpFEcIx7JZYadQIpIA1VZGVXUZOV+jJjj/eu/927eHMQHLsNsRfbtzL09SxBxEIUpyQmZeGbieXPIZA6LL+ensqrxVYSx064nNy3NAwGu4fEUzB+smIC8RQz2qTF6/S0N0EyDJA26bMXrSWdijmwFHqaBoBU41HqSBg83SGaZsPK0sY2OLjlcqe25uWzMjDeorJH8ECxr0yixk6HtlNDidTJw15ANhoRsFK3nwCEzUg2B9kM5lle39kepkpF1u49f//uAAcioBgbF8agMRoeDQW96wz18TcYxee9uAUr0Vhuo+iNhmDPfvRfn753w93dnmdgf3xbs6bmxPuyqcE05yynmZ2GhouEdVtLGlEdfIGcK8+eiT+UpFbMn9oYMRNBOC5WfF7luiUrwJZvL7MNdTYXG+QnOE6hGDPvNyBqUo9ZzqbB7PUegKGnDzSeUM9eOKT+D2pQJmYxBxhGGFt9doNtm9ZVhO3v1ctcKXvnE5AD1BV42roHa0/b+tj1gfq+7U3xyKJFHRLRm+vAZaN53mpnDtYCbjr1Te88+wt9iojO5cb0GD61fhoyX2+NFON3Kxtik7DZz4Xxp4KRo+0XXeNIg4wxbCSYqDXYNh0VMMHP5K8qgUyEWvEOeY0Yfzep31/rmkGERDTDaOdIdTgHllQU4YxCgdf0HthobQvNr23b6qM5QWXOoKarLVjo28OHcPGdWdJR/bkBt5/jvSxQzxFa2Zzz0uEbD7DaDP5kp7duh+u+dWE9Rab8pKnDnK4qN1Neu761twnzpuFptGEZ2F+Pw0mjvRH8P4uXY/sML/gWWz4gVKQoAAA== 
22:19 (1.0.0) [Information] (10) Http Request Information:
Request Id: e366d0e8-a40d-40c0-add9-c21596723aea Executing At: 17-01-2021 18:19:23 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Request Body:  Compressed Body:  
22:19 (1.0.0) [Information] (10) Http Response Information:
Request Id: e366d0e8-a40d-40c0-add9-c21596723aea Executed At: 17-01-2021 18:19:26 Schema:https Host: localhost:44382 Path: /swagger/v1/swagger.json Method Type: GET QueryString:  Response Status Code: 200 Response Body: {
  "x-generator": "NSwag v13.9.4.0 (NJsonSchema v10.3.1.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Bookmyslot Customer API",
    "description": "Bookmyslot Customer API to manage customer data",
    "termsOfService": "None",
    "contact": {
      "name": "TA",
      "email": ""
    },
    "license": {
      "name": ""
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://localhost:44382"
    }
  ],
  "paths": {
    "/api/v1/CustomerBookedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer booked slots",
        "operationId": "CustomerBookedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer booked slots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer completed slots",
        "operationId": "CustomerBookedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer completed slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerBookedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerBookedSlot"
        ],
        "summary": "Gets customer cancelled slots",
        "operationId": "CustomerBookedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer cancelled slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customers",
        "operationId": "Customer_Get",
        "responses": {
          "200": {
            "description": "Returns all customers"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create new customer",
        "operationId": "Customer_Post",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns email id of created customer"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update existing customer",
        "operationId": "Customer_Put",
        "requestBody": {
          "x-name": "customerModel",
          "description": "customer model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Customer/{email}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets customer by email",
        "operationId": "Customer_Get2",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "description": "customer email id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer details"
          },
          "404": {
            "description": "no customer found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerYetToBeBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer YetToBeBookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerYetToBeBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer  YetToBeBookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerBookedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer BookedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerBookedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer BookedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCompletedSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CompletedSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCompletedSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CompletedSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSharedSlot/GetCustomerCancelledSlots": {
      "get": {
        "tags": [
          "CustomerSharedSlot"
        ],
        "summary": "Gets customer CancelledSlots",
        "operationId": "CustomerSharedSlot_GetCustomerCancelledSlots",
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer CancelledSlots information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetDistinctCustomersNearestSlotFromToday",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/CustomerSlot/GetCustomerAvailableSlots": {
      "get": {
        "tags": [
          "CustomerSlot"
        ],
        "summary": "Gets customer slots",
        "operationId": "CustomerSlot_GetCustomerAvailableSlots",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "0"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "maximum": 10.0,
              "minimum": 1.0
            },
            "x-position": 2
          },
          {
            "name": "customerInfo",
            "in": "query",
            "description": "customer info",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot information"
          },
          "404": {
            "description": "no slots found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/email/ResendSlotMeetingInformation": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Resend slot information email to the customers",
        "operationId": "Email_ResendSlotMeetingInformation",
        "requestBody": {
          "x-name": "resendSlotInformation",
          "description": "slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendSlotInformation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot": {
      "get": {
        "tags": [
          "Slot"
        ],
        "summary": "Gets slot",
        "operationId": "Slot_Get",
        "parameters": [
          {
            "name": "slotId",
            "in": "query",
            "description": "slot id",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns customer slot"
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "slot id inappropriate",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Create new slot for the user",
        "operationId": "Slot_Post",
        "requestBody": {
          "x-name": "slotModel",
          "description": "slot model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns slot id of created slot"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/Slot/CancelSlot": {
      "post": {
        "tags": [
          "Slot"
        ],
        "summary": "Cancel User slot",
        "operationId": "Slot_CancelSlot",
        "requestBody": {
          "x-name": "cancelSlot",
          "description": "user slot information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelSlot"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Returns success or failure bool"
          },
          "400": {
            "description": "validation error bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "no slot found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/SlotScheduler": {
      "post": {
        "tags": [
          "SlotScheduler"
        ],
        "operationId": "SlotScheduler_Post",
        "requestBody": {
          "x-name": "slotSchedulerModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotSchedulerModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {}
          }
        }
      },
      "CustomerModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "firstName",
          "lastName",
          "gender"
        ],
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "minLength": 1
          },
          "lastName": {
            "type": "string",
            "minLength": 1
          },
          "gender": {
            "type": "string",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ResendSlotInformation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "resendSlotModel": {
            "type": "string",
            "nullable": true
          },
          "resendTo": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "title",
          "timeZone",
          "slotDate",
          "slotStartTime",
          "slotEndTime"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "default": "00000000-0000-0000-0000-000000000000"
          },
          "title": {
            "type": "string",
            "minLength": 1
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "default": "India Standard Time",
            "minLength": 1
          },
          "slotDate": {
            "type": "string",
            "default": "1-3-2021",
            "minLength": 1
          },
          "slotStartTime": {
            "type": "string",
            "format": "time-span",
            "default": "10:00:00",
            "minLength": 1
          },
          "slotEndTime": {
            "type": "string",
            "format": "time-span",
            "default": "11:00:00",
            "minLength": 1
          },
          "slotDuration": {
            "type": "string",
            "format": "time-span"
          }
        }
      },
      "CancelSlot": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotKey": {
            "type": "string",
            "nullable": true
          },
          "cancelledBy": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SlotSchedulerModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slotModelKey": {
            "type": "string",
            "nullable": true
          },
          "bookedBy": {
            "type": "string",
            "nullable": true
          }
        }
      }
    }
  }
} Compressed Body: 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 
22:19 (1.0.0) [Information] (6) Http Request Information:
Request Id: 0e82f4e6-98b1-423d-b198-827d2c66cab6 Executing At: 17-01-2021 18:19:35 Schema:https Host: localhost:44382 Path: /api/v1/Slot Method Type: POST QueryString:  Request Body: {"id":"00000000-0000-0000-0000-000000000000","title":"string","createdBy":"string","bookedBy":"string","timeZone":"India Standard Time","slotDate":"1-3-2021","slotStartTime":"10:00:00","slotEndTime":"11:00:00","slotDuration":"string"} Compressed Body: EAEAAB+LCAAAAAAAAAptjjELwkAMhf9KyezBXd06Sh2cdZJbTnNIsCZwjYOI/93rVSuWPkKG9708Ak8PhB4aD/Yjs7C+8rDyoKRdLCe9JuJLMc8pBo24eczBSeS65Cvd4lF4LNoxUqj2GhhDwuqQWQn1nWibe0vImbWpbe0mkvNJx+yAbWOHmfCW8QfdDLb3FJSE/956wRtIBseiEAEAAA== 
22:20 (1.0.0) [Information] (6) Http Response Information:
Request Id: 0e82f4e6-98b1-423d-b198-827d2c66cab6 Executed At: 17-01-2021 18:20:03 Schema:https Host: localhost:44382 Path: /api/v1/Slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "00487c28-4337-4575-89a7-0c893a7f6e05" Compressed Body: KgAAAB+LCAAAAAAAAApTilEyMDCxME82stA1MTY21zUxNTfVtbBMNNc1SLawNE40TzNLNTCNUVICAPnKNI8qAAAA 
22:21 (1.0.0) [Information] (14) Http Request Information:
Request Id: fdf76c67-113d-4fd8-bb88-120a44a4f69a Executing At: 17-01-2021 18:21:22 Schema:https Host: localhost:44382 Path: /api/v1/Slot Method Type: POST QueryString:  Request Body: {"id":"00000000-0000-0000-0000-000000000000","title":"title1","createdBy":"string","bookedBy":"","timeZone":"India Standard Time","slotDate":"1-3-2021","slotStartTime":"10:00:00","slotEndTime":"11:00:00","slotDuration":""} Compressed Body: BAEAAB+LCAAAAAAAAAptjrEKAjEMhl/lyGyhPbcb5RycdZIu1RQpnin04iDiu9um9QQxhBDy/X8SeFoIaGGwoFuoP+UTFlYWOPDkxSKdkeE5ecceNw8BM6dAFwGnGK/LvPlv/hiprtgRBtft2RG6hN0hMxHNU+QxbxSRUWvV675eKiTrE1dtwXrQJRe8JfxC8wPHe3IcIrWHXvAGZIRApwQBAAA= 
22:21 (1.0.0) [Information] (16) Http Response Information:
Request Id: fdf76c67-113d-4fd8-bb88-120a44a4f69a Executed At: 17-01-2021 18:21:25 Schema:https Host: localhost:44382 Path: /api/v1/Slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "da6c69e1-4651-4819-a3f6-c9375ab4613b" Compressed Body: KgAAAB+LCAAAAAAAAApTilFKSTRLNrNMNdQ1MTMFEhaGlrqJxmlmusmWxuamiUkmZobGSTFKSgBBoDrwKgAAAA== 
22:21 (1.0.0) [Information] (14) Http Request Information:
Request Id: 2be52955-038d-44ac-8281-d0b9508d3a5c Executing At: 17-01-2021 18:21:42 Schema:https Host: localhost:44382 Path: /api/v1/Slot Method Type: POST QueryString:  Request Body: {
  "id": "00000000-0000-0000-0000-000000000000",
  "title": "title1",
  "createdBy": "string",
  "bookedBy": ,
  "timeZone": "India Standard Time",
  "slotDate": "1-3-2021",
  "slotStartTime": "10:00:00",
  "slotEndTime": "11:00:00",
  "slotDuration": ""
} Compressed Body: LwEAAB+LCAAAAAAAAAptjbEOwiAQhl+FMEsCdeto6uCsk2FBjxhiPRJ6HYzpu5f2WtSkBwGS7/t/5MeiEFYGsLLOt15GbRzrWLnjEAVqPefmpynknrwjD4c3045SwEehtxifKyxVL3+NuLSdEIITZ3IILoG4ZFjCXRupyeVsGrVXla6+P084BxNxaHZ0raf95xwRfgyzYTR9chQispIXDnIE0gFFAS8BAAA= 
22:21 (1.0.0) [Information] (14) Http Response Information:
Request Id: 2be52955-038d-44ac-8281-d0b9508d3a5c Executed At: 17-01-2021 18:21:42 Schema:https Host: localhost:44382 Path: /api/v1/Slot Method Type: POST QueryString:  Response Status Code: 400 Response Body: ["$.bookedBy The input was not valid"] Compressed Body: KgAAAB+LCAAAAAAAAApTio5RUtFLys/PTk1xqlQIyUhVyMwrKC1RKE8sVsjLL1EoS8zJTIlRilUCAPqhgekqAAAA 
22:21 (1.0.0) [Information] (16) Http Request Information:
Request Id: 19ea2a9a-3331-4670-91ff-80aa42dc00ae Executing At: 17-01-2021 18:21:52 Schema:https Host: localhost:44382 Path: /api/v1/Slot Method Type: POST QueryString:  Request Body: {"id":"00000000-0000-0000-0000-000000000000","title":"title1","createdBy":"string","timeZone":"India Standard Time","slotDate":"1-3-2021","slotStartTime":"10:00:00","slotEndTime":"11:00:00","slotDuration":""} Compressed Body: 8gAAAB+LCAAAAAAAAAptjLEKAjEMhl/lyGyhPbcb5RycdZIsxRQpnCn04nCI726bngpiCCHk+/7AAyESwoBg1zJ/xrsQNggSZQoa0c3p8ZKDl0C7RcEsOfJ1tW/hnLgFDkzRd0fxTD5TdypMpXlKMpa8Ss5sTW/79reS4mdpbsV2sLU/eM/0he4HjvfsJSZWivCEF2OEfzHyAAAA 
22:21 (1.0.0) [Information] (14) Http Response Information:
Request Id: 19ea2a9a-3331-4670-91ff-80aa42dc00ae Executed At: 17-01-2021 18:21:52 Schema:https Host: localhost:44382 Path: /api/v1/Slot Method Type: POST QueryString:  Response Status Code: 201 Response Body: "ae22076d-b177-43d0-84eb-d58a87ad65cc" Compressed Body: KgAAAB+LCAAAAAAAAApTilFKTDUyMjA3S9FNMjQ31zUxTjHQtTBJTdJNMbVItDBPTDEzTU6OUVICAOF0lVAqAAAA 
22:27 (1.0.0) [Information] (27) Http Request Information:
Request Id: 6f75ccc1-af3e-4bb6-9ee0-2129b236ec05 Executing At: 17-01-2021 18:27:28 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
22:27 (1.0.0) [Information] (27) Get Customer Email a@gmail.com
22:27 (1.0.0) [Information] (25) Http Request Information:
Request Id: 4bb17146-5fa5-4c43-8493-d68d56c70974 Executing At: 17-01-2021 18:27:29 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
22:27 (1.0.0) [Information] (25) Get all distinct customers nearest single slot
22:27 (1.0.0) [Information] (27) Http Response Information:
Request Id: 6f75ccc1-af3e-4bb6-9ee0-2129b236ec05 Executed At: 17-01-2021 18:27:29 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
22:27 (1.0.0) [Information] (25) Http Response Information:
Request Id: 4bb17146-5fa5-4c43-8493-d68d56c70974 Executed At: 17-01-2021 18:27:29 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 200 Response Body: [{"slotModels":[],"customerModel":{"id":"26eca53c21344dea874c99cc1df9ceef","firstName":"MF","lastName":"ML","gender":"","email":""}}] Compressed Body: nwAAAB+LCAAAAAAAAApNzT0OwyAMBeC7eO6ShP7QA3RqcoE4g2VMhQRFAjpVuXuJp07W+/SeDOsXocbc5uwkVoT7up0Q+FNbTlJUO/ZScP0ijBdhOk88DpMxTuh2NWwt8+C8ZRGP0Oc+lNoWSqKT+aEY6d+eai95OykqmiVROP4dcd83+AFmaBw4nwAAAA== 
22:27 (1.0.0) [Information] (27) Http Request Information:
Request Id: 449c9692-ef67-48fc-84c3-dd38925e02c0 Executing At: 17-01-2021 18:27:42 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
22:27 (1.0.0) [Information] (27) Get Customer Email a@gmail.com
22:27 (1.0.0) [Information] (24) Http Response Information:
Request Id: 449c9692-ef67-48fc-84c3-dd38925e02c0 Executed At: 17-01-2021 18:27:42 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
22:27 (1.0.0) [Information] (25) Http Request Information:
Request Id: 8b320c43-f326-43d6-b0a3-01885a47e25f Executing At: 17-01-2021 18:27:42 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Request Body:  Compressed Body:  
22:27 (1.0.0) [Information] (25) Get all distinct customers nearest single slot
22:27 (1.0.0) [Information] (25) Http Response Information:
Request Id: 8b320c43-f326-43d6-b0a3-01885a47e25f Executed At: 17-01-2021 18:27:42 Schema:https Host: localhost:4200 Path: /api/v1/CustomerSlot/GetDistinctCustomersNearestSlotFromToday Method Type: GET QueryString: ?pageNumber=0&pageSize=10 Response Status Code: 200 Response Body: [{"slotModels":[],"customerModel":{"id":"26eca53c21344dea874c99cc1df9ceef","firstName":"MF","lastName":"ML","gender":"","email":""}}] Compressed Body: nwAAAB+LCAAAAAAAAApNzT0OwyAMBeC7eO6ShP7QA3RqcoE4g2VMhQRFAjpVuXuJp07W+/SeDOsXocbc5uwkVoT7up0Q+FNbTlJUO/ZScP0ijBdhOk88DpMxTuh2NWwt8+C8ZRGP0Oc+lNoWSqKT+aEY6d+eai95OykqmiVROP4dcd83+AFmaBw4nwAAAA== 
22:28 (1.0.0) [Information] (27) Http Request Information:
Request Id: a05993a1-c93a-40f2-ad4a-21bd9f6836ba Executing At: 17-01-2021 18:28:19 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Request Body:  Compressed Body:  
22:28 (1.0.0) [Information] (27) Get Customer Email a@gmail.com
22:28 (1.0.0) [Information] (20) Http Response Information:
Request Id: a05993a1-c93a-40f2-ad4a-21bd9f6836ba Executed At: 17-01-2021 18:28:19 Schema:https Host: localhost:4200 Path: /api/v1/customer/a@gmail.com Method Type: GET QueryString:  Response Status Code: 200 Response Body: {"id":"142b8af166f349c79f861a707021b415","firstName":"FA","lastName":"LA","gender":"Male","email":"a@gmail.com"} Compressed Body: hgAAAB+LCAAAAAAAAApTqo5RykyJUbKKUTI0MUqySEwzNDNLMzaxTDa3TLMwM0w0NzA3MDJMMjE0jVHSiVFKyywqLvFLzE0Fa3FzBAvmJCKJ+UDE0lPzUlKLwCK+iTlAKaBYam5iZg5YKNEhHcTWS87PjVGqVQIASGbitoYAAAA= 
